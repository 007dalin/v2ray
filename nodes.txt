D]WCBWG]Wxqs_{]t[kq{{ZwHqsHHQMZwx[Es{ssWxqxPSgcY~[{
|s{Cr[s_{ssYPuBVs{x\`AVh`_k\dKP]dJRKSVg|BkuB~]IkK{KqYsWxqsQSgcY~[xQk]cudUhcI~fcA~d`Y~vkLkZhZ|qBwkJexRkdckXsQ~q]Wxqs_{]\Uq{{^VJx[Es{ssWxqxOkh`_xX]Q~V_Pj|Ohh{Fx[Es{ssWxqxOPx xX]Q|tcJx[Es{ssWxqxOQI{xYh`ugW|fw@{t{G|XsLd{D|XU_t|vwQ~q]Wxqs_{^`CRK{{^`CRK{KqYsWxqsQVx^Gka{{]FS_gQ~q]Wxqs_{^kY~[{A{WB	;D_]ACWEWUyqqV{_~Yjqy{X}J~qqJ~faD|Hy[|s_V{qyUy_vAhqqyXi{[OyyqqV{qr]R~{XW[R_fhu~D|_b k LYR\}DPr\y[Gz{qyUyqzAhqqyX\\emJey~fmHveE|vS~[Yk_}|fy uajfb\X_H}KyBq[yUyqqXP_nyX_XVu[|s_V{qyUy\rYVu_[[yGSeS_	ZVevQe	D~KqAs[qV{qy[Su	HVqqyXaKqAs[qV{qy[Sz}X}[r}dbw{v}J~aqHvqE|fuH~fqyvqK}XyJy[Gz{qyUyqzPzu[[zPzu[|s_V{qyUy\bQum[[zDP ^y[Gz{qyUyqz{XW[}[yzTc:D]TAAWG^U{{sW{]wYh{{{ZtJ|{ sJ|RUE|J`[~y]W{spU{Ut@hsx{Rk {YFy{{sW{s{]P| {Z^[V
dYhwwD~U`kEYPVEP{\{QE{{spU{{x@hsx{Rp\w`h|~dU^|l{D|wwYk|ZZH~okIttkB|Ywc^h{{CqYpU{{sYP]g{R]YV|[~y]W{spU{VpXVwV[}Q{Fh{ZQF{YFy{{sW{s{EPx {Z^[||cJ{YFy{{sW{s{EQA{{[b`}gWdtH{|{GZpFl{DZVU|tt[~y]W{spU{V`CQIx{V`CQIxAqQsW{sp[Vp^Ghcx{UFP]d[~y]W{spU{VkY}YxK{_B	8F\WAKUF]UqqqUy\tYbqyy[wJvq}rJvH}Guc[ts_UyrsUq_vBjr{qXiyXEyqqqUyrx]Z~y[][a XBR\tGbjTH|\`a DYR_GZz\yXEyqqqUyrxBbqyy[V_uv[}ecte}j[UFvvzY}bZwvz_|eQKwuij\kKvvy}b{A{[qUyrs[Z_fy[][\}[|p]UqqqUy_pZ\uW[X{D[ufGi^AtKyAsXsUqqq[SvK\qyy[cuKyAsXsUqqq[Sy[w[z}d`tqvuJ~XsKuvyE|ewKtfyyusHwXqJyXEyqqqUyrxZz}[XxZz}[|p]UqqqUy_`[ue[XxGZ ^yXEyqqqUyrx qX_[}X{y^c:G_WKA
TE]_{ssWx_tShs{xX
~Z{J[@ZYE|XA{YE{xqs_{sxXPecQ}Y{q{KqYsWxqsQSwJUq{{^V\h_`PPI[kuB~]\Uq{KqYsWxqsQSgcY~[{Bk{|ew|cH
~d`YkfgL}g{Hk[@hZ{Gkvgkg{ kegQ~q]Wxqs_{]\Uq{{^VJx[Es{ssWxqxOkh`_xX]Q~tIR_tMhgFx[Es{ssWxqxOPx xX]Q|tcJx[Es{ssWxqxOQI{xYh`ugW|fw{t{G|XsLd{D|XU_t|vwQ~q]Wxqs_{^`CRK{{^`CRK{KqYsWxqsQVx^Gka{{]FS_gQ~q]Wxqs_{^kY~[{A{WB	;D_]ACWEWUyqqV{_~Yjqy{XqK}qI|vqG}fiH~Xq}[yBq[yUyqqXkeTYyX_X|Xi[|s_V{qyUy_XGQi[[zXhe^T_	BheXjaZhuH|_]VqqAs[qV{qy[QeaX}[r_uu| u }q]k iH|fb\kHaFfjYkK ~HSKvnYjfS}v[[|s_V{qyUy_]Vqqy\TK{[OyyqqV{qrEijb^{XW[| v[VuTDR[X~sWUyqqV{\zDS\aX}[q~v}X~sWUyqqV{\zHyX_XfYwbaqIHyU}XqHqJ}[ H}qyE}H_FaqAs[qV{qy[TuHK{XW[TuHK{[OyyqqV{qrUjr]{XW[R_	DhaqAs[qV{qy[T[y{Xq[s\ 8DUWCA
WO{{sp[VQ{{sxK{QE~qYpU{VpJ{Z^U{MWGf[_]a_\B\\\_j[xCEXGksWbWC\Qz`audHSSp` Qx|~A ~] ^~
|ESxgFkoISgU]V|Y{YF|qQsW{]wYh{{{s{[SoVJVhxGk
kY~qy{{sYQwKV{{{sx||Y~qy{{sYSg`[}QsYhwx|UxZkJhF||dZIJodY~dYYkBsD|dhE|sJg`|o|Z{YF|qQsW{]wBh{{{sxJQ{Cva^U{{xEhh`[}QsYV|[~y{{sp[Vp^Ghcx{{xEP^{QE~qYpU{UZFQ`[}QsYk]]\QdI~]_{QE~qYpU{VpXVwV[}QsY~ ePTp~euF~A{Cva^U{{x Px|[}QsYVwIH{_{Ta8N_UAC]E yyrs[\[yyr{Kq[G|sXsUq\rHy[]UqGUEe[UWc
]]_Th_^zEJud]X@]L~^DFxH\T~h_Y@jBWBxBWkbDNx@]Ty`E[H_D|cGZeeDi]\eZR_xBb XeY[ts yyrs[aebYy[]Uq_~]QfZYzyGik[ts yyrs[[u	KTr{qqy~u[ts yyrs[Yea[Xs[wuuu`YwvWF~udXa[ J}fd[teui[kFvfiE}usHueaed_q[G|sXsUq_vBjr{qqyJ}X{A|c_UyrxGbja[Xs[\}[|pyqqq[Ty^EbayyrxGZ ^yXE|{[qUy\ZD[a[Xs[a XBR\t][[XjX{A|c_UyrxEajb]y[]Uq[	wvBYviEib
[ts yyrs[\uHHy[]Uq\bASH{|{\ :E@]RS^Q	WQR
WSTRSpQXX\SP@YUXE_Twrtsp}swrrym[mt v wssrtw rpv}p	pguywqss o 	t   ~ w	s}
qsw	q	u	wvpqqZDEBAqw ~F_U t[\XG]P\@QUXF	8FJ]ZS^VRVU RUY

 VSS
V
pWGQSJYS_WW\P]^URTtztprws	wrqsmSmw
v us{rwt
zstwp	rm}sw	rs{ m  v t
wvpqqurt ssws	 w}tpssPFDBCs vwFUW vR\ZM_Q\BXUZL	8DC]XY\
S 	WS 
Q^W	
 PTQ
TTQTrVGSZJ[Y]VW^Y]\_WS
ustzpws 	up{	soE]YA]oow

qpw rs}tpssw	pu	syw	s u
		ttzqqYFFHAq t vF\W
tS\XD_SV@YUXE2FB]ZP\RUV^SVQSPWW TTVrTMQ[JYP]T]\X]^VUIwrtsp}swrrymwsu{qqnw ps}
ppwvrryuzw
ssus
	t wtps	pZFLBCp ~tD_W vQ^YG_Y\B[WYF8D@_[S\VV[STTQPT\U
	T r^GSYHXS]^W^Z__UU^
}pvppwqusqsoYow
t	wqqsw}
psvwrpmw
us{rwm  w v wtps	pw	s}
qsw	q	u	wvpqqZDEBAqw ~F_U t[\XG]P\@QUXF	8FJ]ZS^]
 	 
WPS	U^T pWGQSJYS_WW\P]^UEYtztprws	wrqsmw	suqyqmt
 sqw
prw~rqs}pwpsup w	
uwp{	sXEFBKst
tD]T ~Q^ZE\S\J[WZD8L@_XQ_VRUS RPSUVSQWQ^S V qTG[YH[RP]HQWS
ustzpws 	up{	soZm}
twqrp}u
syvwpp mtswsqr
m
t	tuzw
ssus
	t wtps	pZFLBCp ~tD_W vQ^YG_Y\B[WYF8D@_[S\R]PRWQQP	TTUr^GSYHXX[VBY\WQTwpvrswq }pssgAU]E]mgu
	yswpp	w

qw s}rpw	putsqswpu
yqty w
	w~rqsZLF@As
t vE_]tS_ZGUS^@YVZF:FB^XSVQPQ]SQ USPVPTxTEQ[I[XQ\@[^VUYwrtsp}swrrymCW_D^m
mw
squ	prttzqqwrwsp}sw	 utsqsXFDAAs v tL]WtQVZE_Q_@[_ZD	;F@WXQ\
YU V
VT^PQ
QWrDC]FJ]_\wptprus
	tzqqnw	tp}rpvmw
squ	prwrwsp}sw	 utsqswvpqqZDEBAqw ~F_U t[\XG]P\@QUXF	8FJ]ZS^TTTWT

 	 P\UPpI[PM\QVwptprus
	tzqqnejwuupqzwwpstuprom   w
tttzqqwrwsp}sw	 utsqsXFDAAs v tL]WtQVZE_Q_@[_ZD	;F@WXQ\
 WS\ P	
]PZUrHXPGVWC
ustzpws 	up{	sow
srww	p	}rpw{mu	
qst
zp	wtps	pw	s}
qsw	q	u	wvpqqZDEBAqw ~F_U t[\XG]P\@QUXF	8FJ]ZS^QPVTQ[YSTZQUp\[^SU_U_USwpvrswq }pssguywqssow

qpw rs}tpssw	pu	syw	s u
		ttzqqYFFHAq t vF\W
tS\XD_SV@YUXE2D]WCBWG{xqsQVY{xq{A{YE~r[s_{^pJxX]_{EWDeQ_Ua\^H\\\\j[x@G[Gcv^]~jU[Aj@^BzHUjbFGxBWVx`GRH]N~cESegNk_UePP^x@k Z}dYY}ss{ssYhe`S{Z]Wx_JHVx`Ckj|	QYDSq{Kva]WxqxOPx xX]_{Zc |K{Kva]WxqxHhs{xqxShZsJhHZUkI _k@~dwHke{L}wt[k[	|ZsG|v@hwh[ucQ~q{xqsQkg^[xX]_{ZwIx[EvqYsWx_TVs{xqxQI{Cuc]_{sx TjpT{Z]Wx_NP]gY}ss{ssYPuBVs{xqxKSh` SudBVh{ESeEQ~q{xqsQQwt Pq{{s{F~uVWafhZdjYN{YE~r[s_{^`CRK{{sx SzQvaB	;8