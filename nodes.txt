D]WACWG]UyqpU{]tYjqx{ZwJ~q|IJ}ftG}dU[|s^U{ssUy_wBhs{yXh{YEyyqpU{sx]R{Z][Tz{VwZ_TeIGhh|H|_ckFYR\|GPx\y[Fy{ssUyq{Bhs{yX` |dt[i w_~dk~v`F|wh[i[ [k]hZ|f{[tQ~fUZ}d`_axAqYsUyqp[P]dyX^[V[|s^U{ssUy\sZVwU[[xDQxxDi gHQ^DR[	[~q]UyqpU{^pDS\`[}Y{~v|[~q]UyqpU{^pHyX^[f[wbapJdwU}XpKYE}[JYsE}v^Hc{As[pU{ss[TuIH{Z][TuIH{YEyyqpU{sxUjs^{Z][R_Ghc{As[pU{ss[T[x{Z{[s\8F_WCAUE]W{rsUy_t[hr{yXwH|r~KbJ~HY~p]UyqsW{\tBjq{{[ky[E{{rsUyqx_P|yX]Yk\dGjjhFPvdGi gEhv`GSKEhic[|s]W{rsUy_^[{[][}Xw|e{ fsDfkE}[ }ek |e{ |fcFiHcJ|KciecHkekJy[E{{rsUyqxEhic[[xQH{As[sW{rs[Sut Sr{y[CSfh^|K{CqXsUyqsYQvKTq{{[c}K{CqXsUyqsYQy[[xf`tyvwJrsK}v{I~esK|fwI{usEXH{XEyyqsW{rxRzY}XxRzY~p]UyqsW{_`SugY}XxGR \{XEyyqsW{rx yX]YX{yVc8G_WCATE]W{qqUx_t[hqyxXkH~XyKK|[KvsY~s_UxqsW{_vBkq{{Xix[E{{qqUxqx_P~xX]Yk XBS_tEhjTH}_`k DYS\EPz\x[E{{qqUxqx@hqyx_{I}v}J~e`Y~fakXYD|uaK|q}uyK}feaKkew heaHk[{Cq[qUxqsYP_fxX]YV}[}s]W{qqUx\pXVuW[~[{FQr^h ^XPq[}s]W{qqUx\pFQ\a[~[{ |v}[}s]W{qqUx\pJ{X_[eYu`aqJ|fkWXqK|[G[ J|[sGv_H|a{Cq[qUxqsYVuHHxX]YVuHHx[E{{qqUxqx Wjr^xX]YP_	Gka{Cq[qUxqsYV[yxX{Yq\ ;D_UAA
WE_U{ssV{_vYhs{{XuJ|s|KJdwDf} {YEz{qqU{sxYSea[}Y{|qyAqYsV{qq[SwKVqy{^V]k_bZPIZhuH~]]VqyAqYsV{qq[SgcX}[z^}w{ fikcXkfXZ~d`Z_iFk]{K|q htQ| yk] fe[~q]V{qqU{]]Vqy{^VK{[Gy{ssV{qzEkh`^{X_[~xYQ eD{YEz{qqU{sxFPz{Z]X|vaH{YEz{qqU{sxFQKy{[a`weUdw{vyEZ{EvyFd{VvqJwX~s_U{ssV{\bAQI{{\bAQI{Bq[qU{ssXVz\Ehc{{_DP]gX~s_U{ssV{\i[}Y{H{U@8F_TAA
UE^U{ssUy_wYhs{yXtJ|s~KJdwG~vZ[~q]UyqpU{]tBjqx{Zky[Fy{ssUyq{]P|yX^[P]djuwD~]`i EYP^GR{\{YEyyqpU{sxBjqx{ZZZ~HR}tx^|e`}tQF~ud YZj_tJ~ggiX]Z]c~vZKhc{As[pU{ss[R_g{Z][T|[~q]UyqpU{^pZTuV[}Y{DS_gCP^Xja	[~q]UyqpU{^pDS\`[}Y{~v|[~q]UyqpU{^pHyX^[f[wbapJdgU}XpKYE}[JYsE}v^Hc{As[pU{ss[TuIH{Z][TuIH{YEyyqpU{sxUjs^{Z][R_Ghc{As[pU{ss[T[x{Z{[s\8F^WCAQTU
WS


UPR PT 	QUrI[PE\WCW^QCKBD[]^_]\UAUQD@[DKD^BFIBWFRBXWSTWCfK@W^]_WWPWPRWP 	UPQSoT
QRTWP
WRSWqoU

SSW	PP	TTRQ	SWPW
QPUQ W
 WVSQ	SZDFAAST TD_UTQ^ZG]S_@[WZF	;D^UAA
PVTPT

 WPSR  SrSZX\SXG_Q\C_\W\S@K@FX]\\]^WAWSG@YFHF\ADKAWDQBZTSVU@fIBT\_\WTRTRPWS WPSSmWSWQQQoT
QSW
PPWVPSSU	PW
PSW	P 	U
WWPSQZEFBCQTTF_T VQ\XG\S\B[UXF8D@]ZS_VTSS WTP TVS
U
qU_UU_U\^TRTRPWS WPSSmWSWQQQoT
QSW
PPWVPSSU	PW
PSW	P 	U
WWPSQZEFBCQTTF_T VQ\XG\S\B[UXF8F^WCAQPU
VUP	P  STr\[^[U]W]US
T\QBKBD[^\^]\UBWQE@[DKF^CFIBTFSBXWPVWBfK@W\]^WWPVPRTQ 	WPQPmU	SWRSSmW	
SQT
RRWTPQPWSUSSWSW			UTPQSXFEBAS W VF]W TS\ZE_P\@YUZD8D\WACTRPW

	 WRPV STSpQY[\QZ@QWU\R@K@F[_\\]^WCWRG@YFKF]ADKBUEQBZWQVT@fIBW\^\WWSTRPUS WPSQmWSWSPQmU

SSW	PP	TTRQQWPW
QPUQ W
 WVSQ	SZDFAAST TD_UTQ^ZG]S_@[WZF	;D^UAA
SVQSP
	T WP
U P	SrW_TU_UF[W\S@HBFY]\\^\WAWSGC[FIF\AFK@WDQAZUSVU@eKBU\_\TURTPPWS	WSQ	SmWST	QQQ mU
SSW
PP	WVSQ	SUPW
QSTQ 	W
WVPSSZDFBCSTTE_U VQ_ZG]S\B[VZF	8F^TAA

TPQ
	
UP
W	PrT]UUV^UWQT
U\QBKAF[_\^]_WCWQE@XFKF^CEKBUFSBZWQVWBfHBW\]^WWPVSPUQ WPRQmUPPWT
	T	TRnW
PSU
RPWTPRQWRU
SSWST	WTPQPZFDBAP V VF_W TS\YG_Q\@YUYF	8D\WBAVWS
	WR	TRrU]WU]WUC
T\QBKBD[^\^]\UBWQE@[DKF^CFIBTFSBXWPVWBfK@W\]^WWPVPRTQ 	WPQPmURPWU
	WTRmgjW
VWSSSWU
RSVWPP m     VTUTRQSWPW	SQUS W
TTRQ	SYFF@AS T TD\WTQ^ZD_S^@[WZE:D_UABWE yxqsYV[yxq{I{[G|r[sW{\rHxX]W{GUDeY_Wc
\^@\^^\jYz@G[ Gat\]~j][ChB^Bz@Uh`DGxB_VzbERH]F~aGSegFk ]UeXP\zBk Z }f[[}s{{qq[he`[{X_Ux_VDheTFka^kayAuc]W{qzESx {X_UxXc KyAuc]W{qzBkq{{qyJXpZhfzX|q}eaK}fwHheyFhed]K XsGv}|XdYkei[}s{{qq[he^[{X_UxXwI{[G|r[sW{\~XTa{{qzZUj`F{[G|r[sW{_^Uq{{qzRK{Cvc_Uxqx Wjr^xX]W{_DS_gY~s yxqsYSu	HUq{{qz\Sed^PeeGk wY~s yxqsYQuvPq{{qyDT\VhQzbeTuUF{[G|r[sW{\bARK{{qzSzY~s yxqsYQ BxX]W{[y|r\8D]WBAWGz{qq[VY{{qyK{YEq[qU{^pK{X_U{EWGg[_Ua	_^B\\]_ j[yCGYGcsVc_C]S{`iueISSx`Qz}~I~_^~|DSzfFkgHSeT]VtY{[G|qYsV{_vYhs{{qz[SgVKVjyGkkX~s y{ssXQu	KVs{{qy|tX~s y{ssXSea[}YsX|fbY|tZX eF}t^\|a JgdX~eu|cE|fiEtsK|vy k]`[{[G|qYsV{_vBhs{{qyJY{Bvc_U{sxKk[[}YsXkjfPI{Bvc_U{sxDhja[}YsXV}[~qz{qq[Vx^Fhay{sxDP ^{YEq[qU{]ZGQa[}YsXk_\\QdH~_~_{YEq[qU{^pYVuW[}YsX~Tch|gbX~I{Bvc_U{sxPz}[}YsXVuHH{YEq[qU{^|DSay{s{Xvc@8D@^XS^Q	T PTSP
RTV QpF@_FC]]^URTPPWS	WSQ	SmWVS	T	PRVmU
SSW
PP	UPW
QSTQ 	W
WVPSSUTRQSXFF@AS T WF]WTR\ZE_S^@XUZD:D]WACSPPV 	

WSW VpTGSYI[S_TW^Z^\UUS
U\QBKAF[_\^]_WCWQE@XFKF^CEKBUFSBZWQVWBfHBW\]^WWPVSPUQ WPRQmF_YH]mmU

SSW	PP	TTRQ	SWPW
QPUQ W
 WVSQ	SZDFAAST TD_UTQ^ZG]S_@[WZF	;D^UAA
	TS 
	VV WP  PUrVGRYJYX[^BX\UQT
U\QBKAF[_\^]_WCWQE@XFKF^CEKBUFSBZWQVWBfHBW\]^WWPVSPUQ WPRQmAU]D^mmU

SSW	PP	W
Q	 U PWSPWRUTPQSWPTSQWS  W	
UTRQSXFF@AS T WF]WTR\ZE_S^@XUZD:FC]XQ\
USTVQRVRW VTVPU
PVVrTEQZJ[Z[\@[_UWSURTPPWS	WSQ	SmCW^G^o mW	
SQT
RRWTPQPWSUSSWSW			UTPQSXFEBAS W VF]W TS\ZE_P\@YUZD8D\WACWQTST  WR
P  	VpJXPG^UQW\S@HBFY]\\^\WAWSGC[FIF\AFK@WDQAZUSVU@eKBU\_\TURTPPWS	WSQ	SmCW^G^omW	
SQT
RRWTPQPWSUSSWSW			UTPQSXFEBAS W VF]W TS\ZE_P\@YUZD88