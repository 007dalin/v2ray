D]WACWG]UywqV{]tYjwy{ZwJ~w|I}MH|I{As]qV{ss[ic\Z{Z][~^aX~q]UywqV{]ZDSaX}YxSZfSwhRs]QGj|f[S`GSMGQ]Q[|u_V{ssUyY\Z{Z][~i|dk}NqEhwhXj] k]d^|cyh]wFi^~Xkdp[jcb[kJQ y]Gz{ssUywzDhhc[]zQI{As]qV{ss[SsvSs{y]	Gk^|^SZj]~I{As]qV{ss[Ss	HVs{y^aI{As]qV{ss[S|}X}Yx}dbw{twJ}gqHt{K|`q~dsJypq}ZsJy]Gz{ssUywzPx[]zPx[|u_V{ssUyZbQwg[]zDP^y]Gz{ssUywz{Z][}]yzTa:B]TACQG^UyqsW}]wYjq{}ZhJ|X{IzIHqzcxAs[sW}sp[ie^[}Z^[~XcYxq^UyqsW}]YDScY{Y{jex[mg	Gju`EWIGjjcYxq^UyqsW}]]YyX]YzwhKiH zdVFj_t\zc}HhZxd][ecDngdjXpZzc_fcH}YFyyqsW}s{GjjcY{Y{SK{CwYpUyqsYWwwQq{}YKjeJ@nghDy[E{}spUyqxGV{yX]Yzt`Hy[E{}spUyqxGWIxyY`fudU}fw}txE}X{Dyt`F}vwWytV}vwYxq^UyqsW}^cASK{}^cASK{CwYpUyqsYPx]Eja{}]DR_gYxq^UyqsW}^h[[{I}WA:D_UGCWE_SyrsW{_v_jr{{XiL|[{I|KN}b }ayGsXsW{qq]if^[{X_]~[cY~s_SyrsW{_XBScY}[z^Qv^EkeXTEhzf^Q`EQKBS\QY~s_SyrsW{_\_y[]YHX^~Ks | }@jfc|K ~eh]~f[ ~kD|XyCi[Y XT\jv{J{[GyrsW{qzAjicY}[zSH{Cq[qSyrsYQuvQr{{[	XUy`Ika]|p]W{qqSy_pFQ\a]X{ |v}]|p]W{qqSy_pJ{X_]dZu`aqL}ekWXqM}XG|q C}bsG}v_C}b{Cq[qSyrsYVuHNy[]YVuHNyXE{{qqSyrx WjrXy[]YP_	Ajb{Cq[qSyrsYV[yy[{Yq\ 	:G_UAA
TE_U{suWx_vYhs}xXiJ~Z}IK|I HXi[~q[WxqqU{]r@kqy{Zm x[Gy{suWxqz]Pz xX_[k]bEkjjDPwbEh eGhwfERKGhheY}s_U{suWx_\Y{Z[Y|f}J|eJXWF}da|[ |JPY}evX|tyDuyhZaHfat\Yx[Gy{suWxqzGhheY~[zQI}Cr[qU{suYRuvSs}x[	APz\}KyAqYuWxqq[QwIUqy{Ze |KyAqYuWxqq[QxyY~[z}f fvxvuHsuI|vyK~du }fqJ{tu~XqJ{YC{xqqU{s~ Sz}[}Y~ Sz}[~q[WxqqU{^fRue[}Y~ES ^{YC{xqqU{s~xX_[Y}{Wc8FYUBA
UC_V{ssUyYvZhs{y^iI~Z{K~M|IJ~^yX~q]UywqV{]tBjwy{Zky]Gz{ssUywz^P|y^_XVd[jsvG~]`iDZP^GRz_{YEyywqV{sxBjwy{Zx^}ciZg|`ShwwF~p[kIjce~g{ ~c}kdhX~`qI{As]qV{ss[RYf{Z][T}X~q]UywqV{^pZTsWX}Y{DSbYPhsDy]Gz{ssUywzFPxy^_X|tcHy]Gz{ssUywzFQI{y_a`ugU}`uK{t{E}^yEtcF}puVtU}puX~q]UywqV{^`ASMy{^`ASMyBqYsUywqXVx^Ejgy{]DRYeX~q]UywqV{^k[]yH{WB:B\TACSWW WQ	
QRPST SWpJ[RA^UAT\S@K@@Y^\\]^QBWSG@Y@IF\ADM@TDQB\UPVU@fIDU\_\WURTRVTS 	WPS	PmW
UPVW		SUPPWskW
QPU
R SWTVSQW	RU	SSQ	SU	TTPQQYFDBAQ V V@\W TSZXD_Q\@YSXE	8D\QCBP	RVRW WRQP WqQX[\Q\E\S^@]X
W^WBHBD[]^	^^\UAUWEC[DKDXCFIBW@SAXWSTQBeK@W^[^TWVVPRWQ	U SQSoU	QTQUSmW
SQWRRURSQSQPUSQTS W	
	UTRWSXFF@GS TVE]WRS_ZE_S^FYVZD:@B^XQ\T
 VPQUWR VVQ	WrU]QW\W_^
 WVVPRWQ	U SQSoU	QTQUSmW
SQWRRURSQSQPUSQTS W	
	UTRWSXFF@GS TVE]WRS_ZE_S^FYVZD:B\TACU SW	 TQRS Q Vp_[\_W^U_UQW\SFIAFY]\Z__WAWSABXFIF\GEK@WDW@ZUSVUFdHBU\_ZUURRSPWU	WRR	SmQSU	QQWnU
PSW
VP	WVRR	SUPQ
QSUQ 	T
WVPS	PZDFBCPTRD_U VW^YG]S\B]WYF	8FXUBA
WPR W	UVST  	WVPrSZ[^UXCST W^Q@IDDX]^\_ZUAUQGB]DHD^A@IAWFQ@XTSTW@dM@T^]\UTPTVRWS	URWSoW	QUQSQoW
QPU
R SWTVS
SW	RU	SSQ	SU	TTPQQYFDBAQ V V@\W TSZXD_Q\@YSXE	8D\QCBST	RQRVWRW  RQqU]WU]QEY
U_QBKBD]__^]\UCTQE@[DME^CFIDUFSBXQQUWBfK@Q_]^WQPVPRUQ 	TPQQnU	PWSSSmQ
SQU	RRTTPQQWRUUPWUW	 	URSQSX@DAASV VF]QTS\ZEYQ_@YUZD	;D\WACWPS

 WR
U  RpP_VWT]UUSWQ^R@IBFY[^\_\WGURGB[FI	D]AFK@QEQ@ZUUTT@dKBU	^^\UUSTPPQS	URQ	UoWP	SU	P	WVPmU	SSQPP	UWRQ	UTVW
QQUQWWVRR	SZD@@BSRTD_UWQ^ZG]U^C[WZF	:G^UAA
 TU Q

TP
P  P rWYUV_UUAW\SFIAFY]\Z__WAWSABXFIF\GEK@WDW@ZUSVUFdHBU\_ZUURRSPWU	WRR	SmQPRU	VTTVnehWU	UPQPWQPSTURRoR V QVPSQU	RT
SUW	S	 UWTVSQZFDDCQ VWF_WVR\XG_QZBXUXF	>F\WCAUF{{qq]TX{{qyMyXE~q[qSy_pJ{X_SyDWGg]]Ta_^D^\\_ h[xCGYEbv^^~hYY@j@]BxDWkbFDx@[Ty`GQH_B|cEPeeBi_Ve\R_x@h XeYY~s yrsYkeb_y[]W{_T@jfVDhaZib{Cvc_SyrxGPzy[]W{Xa}H{Cvc_Syrx@hqyyr{H|Xr^jexZq  fcI~fuLjf{DkefY}H|XqC}u Xf]ifkY~s yrsYke\_y[]W{XuMyXE~q[qSy_|ZWayyrxXVjbByXE~q[qSy\\VqyyrxQKyGt`]W{qzUip\{X_Sy\FP_e]|p{{qq]QvJVqyyrx^PefZRfgEh u]|p{{qq]Svt Sqyyr{FW\TlSy`gWuWByXE~q[qSy_`CQKyyrx Pz}]|p{{qq]S@{X_SyX{~q\ 	:G_UAA
TE y{suYU[y{s}Ix[G|qYuWx\rH{Z[WxGUGcY\Wc
_\@_^^_iYzCE] DaqUg]A^QbkwfMQPzbQxy}K	~]\} ~GSxbDheKSgP_Uv[{YC~r[qU{]r[kqy{s~YPeTHVh}Eh i[~q{xqq[QwIUqy{s} v}[~q{xqq[SgeY~[q[|df[vX[aD~v\_|cH|ef[~gq aF|dmG|vqH|t}h_bX{YC~r[qU{]r@kqy{s}H|[yAva[WxqzHk_Y~[q[khb SKyAva[WxqzGhheY~[q[VyY}s y{suYUz\Ehc}xqzGP\x[G|qYuWx_XDQeY~[q[k]X^RfK~]z]x[G|qYuWx\rZVwSY~[q[~P` k|efZ}KyAva[WxqzPxyY~[q[VwLJx[G|qYuWx\~GSc}xqy[vaD	;FB]XQZ
S PRVPR
VVT StDC]D@]Y\QPVPRUQ 	TPQQnU	RPWRPTmQ
SQU	RRWRUUPWUW	 	URSQSQVPSQ\DEBCQWTFYU VQ\XA]P\B[UX@	8F^WCG
QSP U

  UP	U 	VtVDQ[J[Q[VT\X]\WWPQ^R@IBFY[^\_\WGURGB[FI	D]AFK@QEQ@ZUUTT@dKBU	^^\UUSTPPQS	URQ	UoE][K]ooW
QPU
R SWTVSQW	RU	SSQ	SU	TTPQQYFDBAQ V V@\W TSZXD_Q\@YSXE	8D\QCBVP
TUWR	   RQqTEQYH]ZX\@[\WSWQ^R@IBFY[^\_\WGURGB[FI	D]AFK@QEQ@ZUUTT@dKBU	^^\UUSTPPQS	URQ	UoBW_G^ooW
QPU
R SU	S
 Q
P	U	PR TV WVPS	PU	 SWQSW	Q	U	QVPSQ\DEBCQWTFYU VQ\XA]P\B[UX@	8D@]ZU^
	WQTT SQVVUVV TSWSVRpWGSYJY^Y_BY\USQQPVPRUQ 	TPQQnAU]G\knU
PSW
VP	WVRR	SUPQ
QSUQ 	T
WVPS	PZDFBCPTRD_U VW^YG]S\B]WYF	8FXUBA
TSVS	WUV	R  TrH[PEZVS
U_QBKBD]__^]\UCTQE@[DME^CFIDUFSBXQQUWBfK@Q_]^WQPVPRUQ 	TPQQnAU]G\knU
PSW
VP	WVRR	SUPQ
QSUQ 	T
WVPS	PZDFBCPTRD_U VW^YG]S\B]WYF	8: