D]WBB
WG]VxssP{]tZks{{ZwIs|II|tsBZsxYE|{ssVxsx_SgcX~Y{|s{BrYsP{ssXPwMVs{x^`NVh`^k^dDP]dKRI\Vg|CkwM~]HkI{DqYsVxss^SgcX~Y{N}d{ |wwOhc |tZ~dcZwCkggK|I^Zk~tU}t|[wg^~q]VxssP{]]Us{{^VKxYE|{ssVxsx@kh`^xZ]^~|kgtC~I{BrYsP{ssXRwNVs{xZcI{BrYsP{ssXRx^}Yx~e `q{twI|csNt{I}dw@~d{xt{O}ZsIxYE|{ssVxsxPxX~YxPxX}q]P{ssVx^`QwgX~YxBP]xYE|{ssVxsx{Z]X|Y{|Ta;F_RACUEXUyqpVy_qYjqxyXrJ~q~KJ}v|D}H\[|s^VyqvUy_wAjq~yXhy[@yyqpVyq}]RyXX[R_gjuqD|_c i CYR\|DR}\y[FzyqvUyq{Ajq~yXdFiHbE}Ht|enjf`E~uf}qe~H|e`Kife_~fxi_~}[xBs[vUyqpXR_ayX^XTz[|s^VyqvUy\sYTuP[[xGi ARug[Tq[|s^VyqvUy\sGS\f[[x~vz[|s^VyqvUy\sKyXX[dYtbavJ}fdV}XvK}aI}qK~KpH}fXE}axBs[vUyqpXTuOHyX^XTuOHy[FzyqvUyq{Uju^yX^XR_GjaxBs[vUyqpXT[~yXxXs\:D\TCAWF^W{tsW{\w[ht{{[tH|t |HHsQE|bxCq^sW{rpYk`^[{[^Y|]cY~p^W{tsW{\YFQcY}X{Yh`\V\Ch`Zhb[hpJ~\\Vt{CqXpW{tsYSf`Y}^{H|vh}`wkH Y`{G~ec[cUD}vk[kd]k[h `c}f`G|csY~p^W{tsW{\\Vt{{_UJ{^E{{rpW{txGkic_{]]Y~wYS`J@VyZF{^E{{rpW{txGP{ {]]Y|u`J{^E{{rpW{txGQHx{\``tdWcG{uxG]wDepD]QW[tswY~p^W{tsW{_cCQN{{_cCQN{CqXpW{tsYVy]Ghd{{\FPZgY~p^W{tsW{_hY}^{I{VA	8A_UABRE_UxrqU~_vYkry~XuJryKJ|uaGzfqxXGy~qqUxrzZVea[~Xy yqyArXqU~qq[Pv	HSqyx\~]VeZS\fTKYUf~@muH}\	KmKyArXqU~qq[Pfa[x[zZh[}xvqb[xu}}eaJnHyFh[bYya  uj[zXe kff^mfy[}p_U~qqUx\^Sqyx_TH~[GyxrqU~qzEhib]~X_[}~Bm ZUyfKma[}p_U~qqUx_rDT\a[~Xyyv}[}p_U~qqUx_rH~X_[eZ	weaqJ|eiUzXqK|b Jzq KHqKzf_E|byAt[qUxrq[SuHHx[_[SuHHxXGy~qqUxrzRjr^x[_[U_	GkbyAt[qUxrq[S[yx[y[t\ ;G]WDA
TG]P{ssVx]t\hs{xZwO|sI|sI~d^~q]VxssP{]tAks{{ZkxYE|{ssVxsxXP|xZ]^VdXkwtA~]`ZS^BP]dxYE|{ssVxsxGhs{xZU@|gwKh]x_~dQF|]kC|tZ\|skH}gwOk]{kdV[t`\|I{DqYsVxss^P]dxZ]^VX}q]P{ssVx^p_VwUX~Y{Ah^x}I{DqYsVxss^QwHUs{{Zc|I{DqYsVxss^QxX~Yxxf `wxtwO|IsH|t{O~dwF}d{{t{I~ZsO{YEzxssP{sxSx^}YxSx^~q]VxssP{^`Rwg^}YxDS[{YEzxssP{sxxZ]^Y{zWa
8F^TBCQWT RS
		UPSSQ 	QTpJ^PE\VAT_S@NBD[^_\X\UBTSGE[DKE\AFIBTDQGXWPUU@cK@W__\RWRTPRTS	TUQPnWQSVRSWSPRqoTSPU
PSWQRQQRRW	PSUPWTWPT	SYEDBDSVTD\T QQ^ZD\Q\E[WZE	8A^UABUVTRW

 RPSS SqRX[YSXG\P^@_\R\S@HAD[X\\^_UDWSGCXDK
F\AEIBRDQAXWVVU@eH@W
\_\TW RTSRRS	WSRVmW	STTQQnWPQR
PRWVSRVUUWSSTS	T	UTPSPXFCBCP QTE]W VQ_YE_V\B[VYD8D@^[Q\V	 TPRWWRUSS	TrP_UU\T_[W RTSRRS	WSRVmW	STTQQnWPQR
PRWVSRVUUWSSTS	T	UTPSPXFCBCP QTE]W VQ_YE_V\B[VYD8F^TBCQST	
WUPS  S Up_^^[U^V_PS
WYQBKAEY]Y^]_TARQE@XEIC^CEH@W
FSBYUSSWBfHAUY]^WUPVSSWQ 	RPR	ShUVW	QSSnU

PPWRS	RTPR	SWPU	QVWQ T
	TVUQPYDFGAPT VF\UTS\YD]SY@YUYE	=D\WBB
WSR R
	WRSW STPqSZ^\QZCSTT^QEK@FX^^Y]^WBUQB@YFHD^DDKATFTBZTPTWEfIBT^]YWTPQRPTV UPSPoRQWRSTmTSPU
PSWQRQ	SRRW	PSUPWTWPT	SYEDBDSVTD\T QQ^ZD\Q\E[WZE	8A^UABVVRRR
	TRP
T  P	SqV]WP_UEZ
W_RBKGFY]_^]YWATRE@^FIE]CCK@WESBZUSUTBfNBU_^^WUSVUPWQ 	TPT	SnUPW	QPShU
	VSW	RP	TWPT	STPU
QPWQ R
 	WVSRVZDFABVTVF_UWS\_G]S_CYU_F	;G\WDA
WUQ
 TRW RrT]VTT]PWQWU\RCIBC[_\__\RCWRDB[CKF]BFNBUER@_WQVTCdKGW\^_UWSWPUUPWRQQmTUSUT	W 	TSmW	SVU
SUWWRQQTRTSSUS WRTPR	S_FDBBS VWDZW WR^ZB_Q\CXWZC	8G]UAD WUS	
TS
T S wU]WV\UPC
WYQBKAEY]Y^]_TARQE@XEIC^CEH@W
FSBYUSSWBfHAUY]^WUPVSSWQ 	RPR	ShUSPW	V
	TQRnfhR
U	WPRPRU
SVVWRP m VV UTSSSW	PT
VQT	V  U
WQRQQZCF@AQT WE_RTR_XGZS^@XVXF:D\TCAWF{{tsYVXx{t{I{XF~q^sW{_sJ{]]W{DTGeY_Tb_[@\_\_ jXxCB[ Gbu^^{j][@i@]Gz@UkaFD}B_VycGQM]F~`EP`gFk_V`XP_{@hZ }eZY~v{{rpYk``[{[^W{ZVDhfUDhd^kbxCvf]W{r{GPx {[^W{]c HxCvf]W{r{@ht{{rxH|]pZhe{Zt}f`I~cwHhfxDk`d]H|]sGu| ]dYkfhY~v{{rpYk`^[{[^W{]wI{XF~q^sW{_ZWd{{r{XVo`F{XF~q^sW{\\Vt{{r{QN{Cv`^W{tx Wis\{]]W{\FPZgY~p{{tsYSvJVt{{r{^P`d^PfdEhwY~p{{tsYQvw St{{rxFWYVhQycgWpUF{XF~q^sW{_cCQN{{r{ PY~p{{tsYQ@{]]W{Xx~qY8G\UADTF y~qq[UXy~qyKxXG|t[qUx_rH~X_UxDUBg[\Tc
Z^B_^^Z iYzFGYDbqUc^A^S{`hwf ISPybTz}}H	{_^}~GVzfFhfKVeT]Uu[~[G|rXqU~_vYkry~qz[PfTHSjyGhi[{s yxrq[Tu	KUry~qyu}[{s yxrq[Vea[~Xq[yfbYuX[z eF~u\_ya J|ff[{euaFyfiE|uqHyvy h\bX~[G|rXqU~_vBkry~qyJ|XyAsc_UxrzHn[[~Xq[njfSHyAsc_UxrzGmja[~Xq[S}[}p y~qq[Uy\EmayxrzGU ^xXG|t[qUx\XDTa[~Xq[n_\\RfK{_~_xXG|t[qUx_rZSuW[~Xq[{T`kygbX}HyAsc_UxrzUz}[~Xq[SuHHxXG|t[qUx_~GVayxry[sc@;EB]]S^Q TPTPRRUTQpFC^D@X]^USVUPWQ 	TPT	SnUVPW	PSThU
	VSW	RP	TPU
QPWQ R
 	WVSRVUTSSSXFEACS WTC]WVQYZE_P_B[PZD;F^RACQSUU

  UPW  	SpTDR[J^S_TT_X]YUUPU\RCIBC[_\__\RCWRDB[CKF]BFNBUER@_WQVTCdKGW\^_UWSWPUUPWRQQmE^[KXmmTSPU
PSWQRQQRRW	PSUPWTWPT	SYEDBDSVTD\T QQ^ZD\Q\E[WZE	8A^UAB	TP	
	VURP   PUqWEQ\JYXX_@[YUQWU\RCIBC[_\__\RCWRDB[CKF]BFNBUER@_WQVTCdKGW\^_UWSWPUUPWRQQmBT_G[mmTSPU
PSW	P
U	UW	PPTRTVUQPUSWSPRS	W		 UTSSSXFEACS WTC]WVQYZE_P_B[PZD;D@XXQ\TQQVSQSRWSTVSTSSVrWDSYO[Z[_AY\PWSUSVUPWQ 	TPT	SnBU]B^o nU

PPWRS	RTPR	SWPU	QVWQ T
	TVUQPYDFGAPT VF\UTS\YD]SY@YUYE	=D\WBB
TPVVWWR	R	VqH[UG^VP
W_RBKGFY]_^]YWATRE@^FIE]CCK@WESBZUSUTBfNBU_^^WUSVUPWQ 	TPT	SnBU]B^onU

PPWRS	RTPR	SWPU	QVWQ T
	TVUQPYDFGAPT VF\UTS\YD]SY@YUYE	=8