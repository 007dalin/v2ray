D]WACWG]UywqT{]tYjwy{ZwJ~w|I~MKJU[|u_T{ssUyYvChs{y^i{YEyywqT{sx]R~{Z][TfZhwtD|YbXP^GRYf{YEyywqT{sxBjwy{Z^X}seKZQH|`rY|dUF~sz_}si`uJ~d}N[htd[~pz_c{As]qT{ss[RYf{Z][T}Z~q]UywqT{^pZTsWZ}Y{DS|zEPhp|My@qYsUywqZQwKTwy{Zc}My@qYsUywqZQx[]z|f `typuK|IsK}pyJ~ds|`qI{twE^}K{YEyywqT{sxR|}Z}YxR|}Z~q]UywqT{^`SseZ}YxGR_{YEyywqT{sx y^_ZY{yVe8F_WCG
UE]W}srUy_t[nszyXwHzs~KHytzG}XYYxq\UyqsW}]uBjq{}Zjy[E{}srUyqx_V}yX]YPe[jutFx]ai F[V^~GRx^}YDyyqsW}syBjq{}]fje{ywj|fgm]vF~u{nsZiH{ xdrJ~uh\{drH~HQyczAs[sW}sr[R_d }Z\[TYxq\UyqsW}^qZTuUY{YzDRedCPs[|s]W}srUy\pFW^b[[{ zt~[|s]W}srUy\pJ}Z\[dYufcrJ}fWyZrK}[GzsE}KsHyt\H}a{CwYrUyqsYPwKHyX]YPwKHy[E{}srUyqx Qhq^yX]YV]
Gja{CwYrUyqsYPYzyX{Yw^:D_UGC	WE_SypsW{_v_jp{{XuL~p |K~pJayGsZsW{qq]id^[{X_]~YcY~s_SypsW{_XBS cY}[z^Qt^EkeXT Ehzf^Q`EQKBS^QY~s_SypsW{_\_yY]Y|fb\idtZf}@~tgha ~gU~ez]}YUDH~_iY^\kHv\iw{[GypsW{qzAjkcY}[zSJ{Cq[qSypsYQuvQp{{[	XU{`Ika]|r]W{qqSy]pFQ\a]Z{ |v}]|r]W{qqSy]pJ{X_]dXu`aqL}gkWXqM}ZG|q C}JsHv_N}`{Cq[qSypsYVuHNyY]YVuHNyZE{{qqSypx WjrXyY]YP_	Aj`{Cq[qSypsYV[yyY{Yq\ 	:E_UAA
VE_U{suWz_vYhs}zXiJ~Z}I}KK|c }KyAqYuWzqq[kgX[zX_[|ZeYs_U{suWz_XDQeY|[z[hg\W_	AhgZiaYhwJ_^Vs}Cp[qU{suYRea[}Y}H}XiJbY~[ ht} fawqD|uj_cH~HfYkJ\]~fXXZqYs_U{suWz_^Vs}z\TH{YC{zqqU{s~Gjjb]{Z[Y vGWhPXVa[~q[WzqqU{^vFP\a[}Y} }v}[~q[WzqqU{^vJzX_[f[uaaqJJuW~XqKYG}q EIuH~v_Hc}Cp[qU{suYWuHH{Z[YWuHH{YC{zqqU{s~ Vjr^{Z[YQ_	Ghc}Cp[qU{suYW[y{Z}Yp\ 8FYU@A
UC_T{ssUyYvXhs{y^uK|s~M |cJ}NaZ~q]UywqT{]tBjwy{Zky]Gx{ssUywz\P|y^_ZVxxTsX^VgJGjl~I~]`iDXP^GRz]{YEyywqT{sxBjwy{ZxZi`q|g{K|`W|dcF~pWIhs}pf^~dxY}NyhtkEi^yIhc{As]qT{ss[RYf{Z][T}Z~q]UywqT{^pZTsWZ}Y{DTv~I{As]qT{ss[Ss	JVs{y^aI{As]qT{ss[S|}Z}Yx}dbu{twJ}gqJt{K|`q~dsHypuD}ZJy]Gx{ssUywzPx[]zPx[|u_T{ssUyZbQwg[]zFP^y]Gx{ssUywz{Z][}]yxTa:B\VACSUW WQ
QRPST SWpJ[RA^UAV\S@K@@Y\\\]^Q@WSG@Y@IF\ADM@VDQB\URVU@fIDU\_\WURTRVVS 	WPS	RmW
UPVW		QU
PPWskW
QRU
R QWTVSQW	RUSSQ	SU
	VTPQQ[FDBAQ V V@^W TSZXF_Q\@YSXG	8D\QC@P	RVRWWRQP WsQX[\Q\E^S^@]X
W^WBJBD[]^	^\\UAUWEA[DKDXCFIBW@SCXWSTQBgK@W^[^VWVVPRWQ	U QQSoU	QVQUSmW
SQWRRURQQSQPUSQVS W	
	 UTRW
SXFF@G S TVG]WRS]ZE_S^FYTZD:@B\XQ\T
 VRQUUR VVQWrU]QW^W_^
  WVVPRWQ	U QQSoU	QVQUSmW
SQWRRURQQSQPUSQVS W	
	 UTRW
SXFF@G S TVG]WRS]ZE_S^FYTZD:B\VACU QW	 
TQRS QVp_[\_W\U_UQW\SFICFY]\Z_]WAWSABZFIF\GGK@WDW@ZUSVUFdJBU\_ZUURRQPWU	WRP	SmQSU	QQWlU
RSW
VP	WVRP	SU
PQ
QSU
Q 	V
WVPS	RZDFBCRTRD_U VW^[G]S\B]W[F	8FXU@A
UPR WUVQT  	WVRrSZ[^UXAST W^Q@IDDZ]^\_ZUAUQGB]DJD^A@ICWFQ@XVSTW@dM@V^]\UVPTVRWS	
URW
SoW	QU
QSQoW
QRU
R QWTVS
SW	RUSSQ	SU
	VTPQQ[FDBAQ V V@^W TSZXF_Q\@YSXG	8D\QC@ST	PQRVWRW  RQsU]WU]QGY
U]QBKBD]_]^]\UCVQE@[DMG^CFIDUFSBXQQWWBfK@Q]]^WQPVPRUQ 	VPQQlU	RWSSSmQ
SQURRVTPQQWRUURWUW		URQQSX@DCASV VF]QTS\ZEYQ]@YUZD	9D\WACWPS

WR
U RpP_TWT]UUSUQ^P@IBFY[^\_\WGUPGB[FI	D_AFK@QGQ@ZUUTV@dKBU	^\\UUQTPPQS	URQ	UoWP	QU	PWVPmUSSQPP	UURQ	UVVW
QQUQ
WWVRP	SZD@@@SRTD_UUQ^ZG]U^A[WZF	:E^UAA
TU Q

VP
P  
P rWYUT_UUAW\SFICFY]\Z_]WAWSABZFIF\GGK@WDW@ZUSVUFdJBU\_ZUURRQPWU	WRP	SmQPRU	VVTVlehWW	URQPWQPSTURRoR V QVPSQU	RV
SUW	S	U
WTVSQZFDDCQ VUF_WVP\XG_QZBZUXF	>F^WCAUD{{qq]TZ{{qyMyZE~q[qSy]pJ{X_SyFWGg]]Va_^D^\\_ h[xCGYE`v^^~hYYBj@]BxDWibFDx@[T{`GQH_B| cEPeeBi_Ve\R]x@h XgYY~s ypsYkeb_yY]W{_T@jdVDhaZi`{Cvc_SypxGPzyY]W{Xa}J{Cvc_Sypx@hqyyp{H|Xr^jgxZq  dcI~fuLjd{DkefY}J|XqC}w Xf]idkY~s ypsYke\_yY]W{XuMyZE~q[qSy]|ZWayypxXVjbByZE~q[qSy^\VqyypxQKyGtb]W{qzUkp\{X_Sy^FP_e]|r{{qq]QtJVqyypx^PefZRdgEh u]|r{{qq]Stt Sqyyp{FW\TlS{`gWuWByZE~q[qSy]`CQKyypx Pz}]|r{{qq]S@{X_SyZ{~q\ 	:E_UAA
VE y{suYW[y{s}Iz[G|qYuWz\rH{Z[WzGUGcY^Wc
_\@]^^_kYzCE] FaqUg]A^QbkwfMQRzbQxyK	~]\ ~GSxbDjeKSgP_Wv[{YC~p[qU{]r[iqy{s~YReTHVh}Ej i[~q{zqq[QwIWqy{s} }v}[~q{zqq[SgeY|[q[|df[}vX[aD|v\_|cH~ef[~gq} aF|dmG~vqH|t}j_bX{YC~p[qU{]r@iqy{s}H~[yAva[WzqzHk_Y|[q[khb QKyAva[WzqzGhheY|[q[VyYs y{suYWz\Ehc}zqzGP\z[G|qYuWz_XDQeY|[q[k]X^PfK~]z]z[G|qYuWz\rZVwSY|[q[~Pb k|efZKyAva[WzqzPxyY|[q[VwLJz[G|qYuWz\~GSc}zqy[vaD	9FB]XQZ
S PRVRR
V VT StDA]D@]Y\	QPVPRUQ 	VPQQlU	RRWRPTmQ
SQURRWRUURWUW		URQQSQVPSQ\DGBCQUTFYU VQ\XA]R\B[UX@	
8F^WCG
QSP W

 UP	U 	VtVFQ[J[Q[VV\X]\WWRQ^P@IBFY[^\_\WGUPGB[FI	D_AFK@QGQ@ZUUTV@dKBU	^\\UUQTPPQS	URQ	UoG][K]ooW
QRU
R QWTVSQW	RUSSQ	SU
	VTPQQ[FDBAQ V V@^W TSZXF_Q\@YSXG	8D\QC@VR
TWWR	  RQsTEQYH]ZZ\@[\WSUQ^P@IBFY[^\_\WGUPGB[FI	D_AFK@QGQ@ZUUTV@dKBU	^\\UUQTPPQS	URQ	Uo@W_G^ooW
QRU
R QUS
 Q
P	U	PR VV WVPS	RU	 QWQSW	Q	UQVPSQ\DGBCQUTFYU VQ\XA]R\B[UX@	
8D@]ZU^	
	WQTT SQVVUVV TQWSVRpUGSYJY^Y]BY\USQ	QPVPRUQ 	VPQQlAU]G\klU
RSW
VP	WVRP	SU
PQ
QSU
Q 	V
WVPS	RZDFBCRTRD_U VW^[G]S\B]W[F	8FXU@A
VSVS	UUVR  TrH[PEZTS
U]QBKBD]_]^]\UCVQE@[DMG^CFIDUFSBXQQWWBfK@Q]]^WQPVPRUQ 	VPQQlAU]G\klU
RSW
VP	WVRP	SU
PQ
QSU
Q 	V
WVPS	RZDFBCRTRD_U VW^[G]S\B]W[F	8: