D]WBCWG]VyrsU{]tZjr{{Z{IrJ|JD}e~ZwHyXEy{ssVyrxZSgcXX{ |s{BsXsU{ssXQvHVs{y\|]SgYR\dQIZTf|@hwK|\KhI{BsXsU{ssXQfc[}Y{je|YhtFjX|]kH|ecJt{Ei\xXkI\~[V[hwk vg|w{X|p]U{ssVy\^Vs{y_VH{YEzyrsU{sxFii`]{Z]X|xDWgtBTyYD{YEzyrsU{sxFRx{Z]X~ucH{YEzyrsU{sxFSH{{[abtgUdwyu{EZwE}uwFZ{V}uYJwX|p]U{ssVy_`AQI{y_`AQI{BsXsU{ssXTy^Ehc{y\DP]gX|p]U{ssVy_k[}Y{HyVB8F_TCBUE^WxqsUy_w[kq{yXxI|qJ~vxE|fk|Xtx[EyyqpWxqxZQe`Y~[{ ~qxCr[sUyqpYPuHTqxx_^TucXSKYTeBkuH|_IkK{As[pWxqs[Qe`Y~[{}uxJhHkH~a [|ec|f` k_{FiXpHk[H~fdkvYJ}XgZ|XY[|s^WxqsUy_\Uq{y\UJx[EyyqpWxqxEijc_xX][| kChjhDS[	Y}s]UyqpWx\pDS\`Y~[{~v|Y}s]UyqpWx\pHyX^YeYwbapH|fgU}XpI|aE}aI|[sEf^J|a{As[pWxqs[TuIJxX][TuIJx[EyyqpWxqxUjs\xX][R_Eka{As[pWxqs[T[xxX{[s\;D_WCAWE]W{rqV{_t[hry{XwH|r|KHeaD|XQY~p_V{qsW{\vAhq{{[i{[E{{rqV{qx_P~{X]Yk\fDhjhFPvfDk gEhvbDQKEhiaX~s]W{rqV{_^[{[_XkXQ}viFHYD|KaFhq [z[~f^\|uWEk {Ik\fX|fYG}e~Z{[E{{rqV{qxEhiaX}[xQHyBq[sW{rqXQut Sry{[ Vfz]~K{CqXqV{qsYQv	HVq{{[aK{CqXqV{qsYQy}X}[xfbw{vwJrqHv{H~eqI~f{I{uq}XH{XGz{qsW{rzPzY}XzPzY~p_V{qsW{_bQugY}XzDP \{XGz{qsW{rz{X]YXyzTc8G]TAATG^U{qqUx]wYhqyxZtJ|q|sJ|H}G|Z|{[GyxspU{qzZPg`[}[y sxAq[qUxsp[Su	HUsx{\T^h]cZPKYUg@huH}]KhKyArYpU{qq[Pg`[}[y|Z`H|HeEIef_}dc^|fqF~whha |]d vq|whKkHW[}q^U{qqUx]^Vqyx^UH{[GyxspU{qzEhhc]{X_[}cKheeDxYFy{qqUxs{EPzxZ^[|vaHxYFy{qqUxs{EQKyx[b`weU|dtH{vyE|ZtFvuF|ZxUv[|Jt[~s_UxspU{\bARIx{\bARIxAq[qUxsp[Vz\Ekcx{_DS]d[~s_UxspU{\i[~YxK{U@;F\WAA
UF]U{ssVy\tYhs{y[ ~Z{K~XJcI~Kw[~q]VyrsU{]tAjr{{ZkyXEy{ssVyrx]P|y[][VdXjvtD~]`ZR_GP]dyXEy{ssVyrxBhs{y[skJUH~vg~dU}fwF|t`X}HZkg{ |esJk]{~[g|dQjb{AqYsVyrs[P]dy[][VX|p]U{ssVy_pZVwUXX{DSw^_QyVZWc
X|p]U{ssVy_pDQ^cXX{|tX|p]U{ssVy_pH{Z]XdZw`csI}eQUZsH}bEcH}XsE}d]K}b{AqYsVyrs[VwJKy[][VwJKyXEy{ssVyrxWhp]y[][P]Djb{AqYsVyrs[VY{y[{[q^:G_WACTE]UyqpWx_tYjqxxX{K}qHv{G}fRJ}XQy[F{xqsUyq{XPec[[xq{As[pWxqs[QuJUq{y\cIUj`]j\gCS_dHSK[Ue|@juJ}_KjKxCr[sUyqpYPec[[xH|fYEjedhKY~vwX}f`^}exDh_x_}a v~fw]|fZZjexY}s]UyqpWx_^Tqxx\VHy[F{xqsUyq{Ghj`]yX^Y} QugIU ^Hja	Y}s]UyqpWx\pDS\`Y~[{~v|Y}s]UyqpWx\pHyX^YeYwbapH|fwU}XpI|aE}aI|[sEf^J|a{As[pWxqs[TuIJxX][TuIJx[EyyqpWxqxUjs\xX][R_Eka{As[pWxqs[T[xxX{[s\;D_WCAWE{{rqXV[{{ryH{[E~qXqV{\pJ{[_V{GWGgX_Wa_]\^j]\zGId_ZB^F~\FDxJ_^~j][@hA]Bz@Uk`GDxB_VybFQH]F~aDPegFk^VeXP_zAh Z }e[X~s{{rqXke`[{[_V{_|_SfYSz{EkiX~s{{rqXQuIVry{q{ |u}X~s{{rqXSecY}XqX|Xg \eFX{D|e[aHffX~ewKiE|fkGuqKXQ }vjZ{[E~qXqV{_t@hry{q{HXyBvc]W{rzDhjcY}XqXVY~p z{qsYVy\Fha{{rzDP \{XGq[sW{\XGQcY}XqXk Z@P\v^Q[ZhXyBvc]W{rzFkj`_{[_V{[fkifFaX^iPXX~s{{rqXVuJJ{[_V{\`CQHyq\8G]TAATGy{qq[UYx{qyKxYF|q[qUx^sH{X_UxETGg[\Ub
_^B__^_ iXzCGYDcpUc_@^S{`ivfISPxcQz}}I~_^}GSzfFhgKSeT]UtZ{[G|rYpU{_vYksx{qz[PgUHVjyGhh[~s yxsp[Qu	KUsx{qyt|[~s yxsp[Sea[~Yp[v~_|wt hvyFg{XkK J|gg[~eyhgtF|fiE|tpHXXXJkX{[G|rYpU{_vBksx{qyJ|YxAvc_Uxs{Ghja[~Yp[V}[}qy{qq[Ux]Ehayxs{GP ^xYF|q[qUx]YDQa[~Yp[k_\\RgK~_~_xYF|q[qUx^sZVuW[~Yp[~HfDUgC_j}IxAvc_Uxs{Pz}[~Yp[VuHHxWyTc;F\WAA
UFy{ssXTX{{s{HyXE|qYsVy_pH{Z]VyDWGeX]Ta
_\A^\^_h[zCE[Ebv\^|j\Y@jB]@zAWkbDDzB^Ty`EQJ]G|cGPggGi]VgYR_xBhZeY[~qzyrs[kg`Zy[]U{]JATy`Ahh| SXFPs{Bt`]U{sxFRx{Z]Vy[cI{Bt`]U{sxAjr{{s{ ~Kp_|tUK}Xk]cI|ewJhg{Evws ~[sEtHv|ZkdgX|py{ssXif^Y{Z]Vy[wK{YEsXsU{]]Tr{{sxSH{Ava]VyrxWhp]y[]U{]GR\g[~qzyrs[SwKTr{{sxBQi`PwdKTi{GPgEX|py{ssXSvtSs{yr{Da^yjZYe\cGyXE|qYsVy_`AQI{yrxPxXt`B8D@^ZP\SWUUWSSV TRQWrJ[RG_VCtpvsrwq 	wprsmu
qptwp
tprwrow

pswsputrrswpt
squs  t
wtrq	pZFF@Ap t wD_WtR^YG_S^@XWYF:FC_[S\UQVR  VSSR
WTrQX[_QYG_S^@]]uptpsts	wrq	pmwsu	rsqmu	
spt
ps	wtrq	pwsw	qsuqw	tvpq	sYDEBAsw tD\U tQ^ZD]P\@[WZE	8F@_XP^QRWSSQS T QUS VUpWGQYH[P_WW\Z_\VEYtpvsrwq 	wprsmu	swqssnt

pqw
rrwtprswpupswp t	
	uwpqpXEFBApt vF]T tS\YE\S\@YUYD8FB][Q_QUUVWSQ 	RPV	 QSWUVq_[^[U^W^US
wpwspwpurrsotquqsrnw

pswsputrrswpt
squs  t
wtrq	pZFF@Ap t wD_WtR^YG_S^@XWYF:FC_[S\T

TST RTSWWPVRTSrTEQZHXS]TU\Y__UUAwsvppuqwsqqmustsps mw	ssu
rpwwsqqtru
sstsw	wtprsZFDBBs vvE_W wS_ZG_Q\CYVZF	8EB^XS\
VWS	VUSW	PRTSV	rD@^DC]_\wsvppuqwsqqmutstrstmw	ssu
rptru
sstsw	wtprswvsssZDFACstwF_UvR\ZG]S_BXUZF	;DC]XS^SS
UT 

S	
PPVSTSRVpJXRD\QVwsvppuqwsqqmfhwv	wsrswwssvurpon t t wwsqqtru
sstsw	wtprsZFDBBs vvE_W wS_ZG_Q\CYVZF	8EB^XS\
S 
QQ	

V	rVGR[I[S]VW_X^\UWSurwppwp 	tpq	snD^YK]ont

pqw
rrwtprswpupswp t	
	uwpqpXEFBApt vF]T tS\YE\S\@YUYD8FB][Q_SSWW
V TSWRW
 qTGQ[JXZX\B[^USWuptpsts	wrq	pmAW_G]omw	ssu
rpu	
s
t
s	w	prwswvsssu	pw	sst	s 	u
ttpsqYFFBCq ttE\W vQ_XD_S\B[VXE8D@^ZP\
SPT   WSW
V SVW	TrTGSYIY[[\BY\VVStpvsrwq 	wprsmAU]D\n mu
ssw	sp	tvpq	supt
qpwq 	 w
 wvsssZDFACstwF_UvR\ZG]S_BXUZF	;DC]XS^UQ
U
TWV
SUWPPSQPTPVpJXRD\UQwsvppuqwsqqmBU^G^mmu	
spt
ps	wtrq	pwsw	qsuqw	tvpq	sYDEBAsw tD\U tQ^ZD]P\@[WZE	8F@_XP^Q	TQTSUTVT WRW	TQpWGQYH[P_WW\Z_\V\^tpvsrwq 	wprsmYot
v	usqptt
pptwrrmw
uqrpwn t t tvpq	supt
qpwq 	 w
 wvsssZDFACstwF_UvR\ZG]S_BXUZF	;DC]XS^W	P
 U
WTQSVRpTDSZJ[PQ]KYUSwrtrswswsssm[mu
vtsssuw
rquwpsmu	swqss
n t t w	rw
ppw	pu wwsqqZEDAAqv tF_TtQ\XG\Q_@[UXF	;F@]ZS_
QTTTT P	S VRWTqSY[\SX@XWYF_\wsvppuqwsqqmZowv	wsrswwssvurpotquqsrn  v v wpupswp t	
	uwpqpXEFBApt vF]T tS\YE\S\@YUYD8FB][Q_TVUPR		 TVR
WTqTGQ[JXQ^TW\X]_WQTwrtrswswsssm[mu
vtsssuw
rquwpsmu	swqsso  w   tuwpqptswsqwsw		utrrsXFE@Bs wtF]WwQ\ZE_P^C[UZD:;