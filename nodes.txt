D]WACWG]Uyrq^{]tYjry{ZkJ|[y@|I r@dw[|p_^{ssUy\vIhs{y[i	{YEyyrq^{sx]R~	{Z][R\f	hwtD|\bkFYR_}LPx\yXGr{ssUyrzIhs{y[}
}g{ ~K}A~dkje[M|w}XP}g`Y|e}@dwijS}t`^~ryJqYsUyrqPP]dy[_PV[|p_^{ssUy_rQVwU[XyOPg^GQi~	hh{DyXGr{ssUyrzNPxy[_P|tcHyXGr{ssUyrzNQI{yZi`ugU}eu{t{E}[yMtwF}u[^tw}KuP~q]Uyrq^{^`ASHy{^`ASHyJqYsUyrqPVx^Ejby{]DR\eP~q]Uyrq^{^k[Xy@{WB:G]\ACTGVUyqsWx]Yjq{xZ|J~q IJ}vYE|d|Jy[E{xsxUyqxXPgh[[{spAs[sWxsx[QuJUspy\V\h]kZRK[kwH|_\UspAs[sWxsx[QecY~Ys_~uwh]`~aX|wZ|fcHw`Ffs~s	Hi gJwpJifc~g`[|s]WxsxUy_\Uspy\VJxYNyyqsWxssEij`_xZV[| |FS]cBjudEhlDy[E{xsxUyqxGSsyX]YthHy[E{xsxUyqxGRIpyY`culU}fwxtpE}X{D|t|F}vYW|t|}HwY}qVUyqsWx^kASK{x^kASK{CrYxUyqsYUxUEja{x]DR_gY}qVUyqsWx^`[[{IxWI:D_UBCWE_VyzsW{_vZjz{{XiI|S{I|K~zH}veX|x]W{qqVyTt@hqyySk {[GzyzsW{qz^R
| {X_XiZ@P_vDjaVJ~_b iF[P\}DR
x^{[GzyzsW{qzAjz{{XS}{ ee|mYhXuE~~hXaX~~fqF~md\fyH}mgkKyBsPsW{qqXRTd {X_XT
Y~s_VyzsW{\rYT~UY}[yGQnZSqX|x]W{qqVyWpFQ\aXP{ |v}X|x]W{qqVyWpJ{X_XdRu`aqI}mkWXqH}PGa FjsGf_K}j{Cq[qVyzsYVuHKyS]YVuHKyPE{{qqVyzx Wjr]yS]YP_	Djj{Cq[qVyzsYV[yyS{Yq\ :O_UAA
\E_U{spWp_vYhsxpXiJ~ZxIwKK|cHwf[[~q^WpqqU{]w@cqy{Zh p[Gy{spWpqz]P pX_[k]gEcjjDPwgE` eGhwcEZKGhh`Yus_U{spWp_\Y{Z^Yvuz^|]w]tf}F|d]Zt[ |ghJueuhwxDtXSJdZ `ezZ|g|p[Gy{spWpqzGhh`Yv[zQIxCz[qU{spYZuvSsxp[	ZP]UCca[~q^WpqqU{^sFZ\a[}Yx wv}[~q^WpqqU{^sJpX_[f[ukaqJJpWtXqKYGta E}cpGtf_HcxCz[qU{spY]uHH{Z^Y]uHH{YF{pqqU{s{ \jr^{Z^Y[_	GhcxCz[qU{spY][y{ZxYz\ 8F\UJA
UF_^{ssUy\vRhs{y[uA|s~HAtQG}e[{YEyyrq^{sxZQfaP}Y{ ~ryJqYsUyrqPSwHTry{^`KTibVh^dAR\fCQIYTf~KhwH|\	@hI{AsXq^{ss[QfaP}Y{EieaC|wwE~b w`Z|eakFi\u}c}e[
dZ_~vu	kJ{[|p_^{ssUy\UVs{y_TC{YEyyrq^{sxEiibV{Z][|zOWgtA|HyJqYsUyrqPQwKTry{Zc}HyJqYsUyrqPQx[Xzvf `tyuuAcsK}uy@~dsJ|eq{tsJ[}A{YEyyrq^{sxRy}P}YxRy}P~q]Uyrq^{^`SveP}YxGRU{YEyyrq^{sx y[_PY{yV`8F^WCB
QTU	\S

	UPRQ_ 	QUqHPPE\W@
W^RB@BD[]^^V\UAUREK[DKD]CFIBWESIXWSTTBmK@W^^^\WSVPRWQ	U[QSoUQRW\P	WRR\qoU	SSTPP	U_RQ	P\SW
QQUQ W	WVRZ	SZDE@JSWTD_U_Q^ZG]P^K[WZF	:O^UAA
[VTSU

 \PSR   SrSYYWSXG_Q_B_\\\S@K@EYV\\]^TJWSG@YEIF\ADH@\DQBYUXVU@fIAU\_\WURTRS\S 	WPS	XmWSW	ZQQoUQP\
PS	WVPS	XU	[W	QSW	Q	UTVPSQYDMBCQ_TF\U VQ\XD]X\B[UXE	 8D@]ZP^V TSSWTST]S
U	p^_UU_U]UURTRS\S 	WPS	XmWSW	ZQQoUQP\
PS	WVPS	XU	[W	QSW	Q	UTVPSQYDMBCQ_TF\U VQ\XD]X\B[UXE	 8F^WCB
QPU	

V UP	Q  STq]P^[U]W^^S
UWQBKBDX_W^]\UC\QE@[DHM^CFIAUFSBXTQ]WBfK@TW]^WTPVPRUQ 	\PQQfU	XWSSSmT
SQURR\TPQQWRUPXWPW		UW[QSXEDIASV VF]TTS\ZE\QW@YUZD	3D\WACTRS\

	WRPV	 STSpRXP\QZ@RVU_SKK@F[__W]^WCTSL@YFKE\JDKBUDZBZWQUUKfIBW__WWWR_RPUX TPSQn\PWSQZmU	SSTPP	U_RQR\SW
QQUQ W	WVRZ	SZDE@JSWTD_U_Q^ZG]P^K[WZF	:O^UAA
XVQSS
	T \P
U P	SrW\U^_UF[W\SCIIFY]\__WWAWSDBPFIF\BMK@WDR@ZUSVUCd@BU\__UURW[PWP	WRZ	SmTSU	QQRfU
XSW
SP	WVRZ	SU PT
QSU Q 	 \
WVPS	XZDFBCXTWD_U VR^QG]S\BXWQF	8F]UJA
	U[Q	USW 		S	 rT]UUU_^WQT

U\QBH@M[_\^^^\CWQECYMKF^CD@BUFSAQWQVWBeIIW\]^TWPVR[UQ WSSQmU[PTT
	U	TRoW
QXU
R[WTSSQW	RUSST	SU 	\TPQQQFDBAQ V VETW TS_XL_Q\@YVXM	8D\TCJVT 
S	WR T 	RyU]WU]T^C
UWQBKBDX_W^]\UC\QE@[DHM^CFIAUFSBXTQ]WBfK@TW]^WTPVPRUQ 	\PQQfUR PWT
	W	_Rmgi\
V WSSR\U
RXVWS	P m   VWUTRR SWPWXQUX T	
U_RQ	PXMF@APT TD]\TQ^YETS^@[WYD :D_UBCWE zyzsYV[yyz{I{[GsPsW{\rKyS]W{GUEeY_Wc	]U@\^]]jYyAL[ Gat_\uj][ChA_Iz@Uh`GFsB_VzbFSC]F~aDRngFk ^TnXP\zAjZ }f[X|x{{qqXin`[{X_VyTVDheTEjj^kayBth]W{qzFR
x {X_VySc KyBth]W{qzAjz{{qyI~SpZhfz[}z}eaH|mwHheyEind]K  ~SsGv}}SdYkeiX|x{{qqXin^[{X_VySwI{[GsPsW{\~[Uj{{qzYTa`F{[GsPsW{_]Tz{{qzS@{Cvc_Vyzx Wjr]yS]W{_GRTgY~s zyzsYSu	KTz{{qz_Rnd^PeeDjwY~s zyzsYQuvQz{{qyGUWVhQzbfU~UF{[GsPsW{\bBS@{{qzRqY~s zyzsYQ AyS]W{[ysW8D]TCJWG{pqq[VYxpqyK{YF~z[qU{^sJpX_U{ETLg[_UbT^B\_\T jXxHGYGcpWc_@\S{`ivdISSxc Zz}~I u_^~EXzfFkgIXeT]VtZp[G|qYpWp_vYhsxpqz[SgUJ]jyGkhYus y{spYZu	KVsxpqy|t|Yus y{spYXea[}YpYwfbY|tYYt eF}t]]wa JggYueu|`DwfiEtpJwvy k]cZp[G|qYpWp_vBhsxpqyJYxC}c_U{s{J`[[}YpY`jfPIxC}c_U{s{Ecja[}YpY]}[~q{pqq[Vx]Gcay{s{E[ ^{YF~z[qU{]YFZa[}YpY`_\\QgIu_~_{YF~z[qU{^sX]uW[}YpYuTciwgbX~IxC}c_U{s{ [z}[}YpY]uHH{YF~z[qU{^EXay{sxY}c@8DC_SS^	Q	T PTSS RTUQpF@_EBV]^URW[PWP	WRZ	SmT	VS	U	PRUfU
XSW
SP	U PT
QSU Q 	 \
WVPS	XUTRR SXFF@B
S TVM]WWSWZE_S^CY^ZD:G\\ACPQ[V 
TRW	 	]pTGSZHPS_TW^Y_WUUS

U\QBH@M[_\^^^\CWQECYMKF^CD@BUFSAQWQVWBeIIW\]^TWPVR[UQ WSSQmF_ZIVmmU	SSTPP	U_RQ	P\SW
QQUQ W	WVRZ	SZDE@JSWTD_U_Q^ZG]P^K[WZF	:O^UAA

	TS 
	VV \P  PUrVDSRJYX[^AYWUQT

U\QBH@M[_\^^^\CWQECYMKF^CD@BUFSAQWQVWBeIIW\]^TWPVR[UQ WSSQmAU^EUmmU	SSTPP	W
QU[WRPW	RUW[QSTPUSQ\S W	
	
UTRR SXFF@B
S TVM]WWSWZE_S^CY^ZD:EBVXQ\UP_VRS]RW ]TVPU	Q]VrTER[A[Z[\@X^^WSURW[PWP	WRZ	SmCT_L^o mT
SQURR\TPQQWRUPXWPW		UW[QSXEDIASV VF]TTS\ZE\QW@YUZD	3D\WACWQWXT WR
S  	VpIY[G^UQW\SCIIFY]\__WWAWSDBPFIF\BMK@WDR@ZUSVUCd@BU\__UURW[PWP	WRZ	SmCT_L^omT
SQURR\TPQQWRUPXWPW		UW[QSXEDIASV VF]TTS\ZE\QW@YUZD	38