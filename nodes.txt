D]WBCWG]VytqU{]tZjty{ZwI~t|I}NJ|tQX|v_U{ssVyZvBhs{y]i{YEzytqU{sx^R~{Z]XTzVwZ\T`HGhh|K|ZbkFZRY}GPx_y^Gy{ssVytzBhs{y]bZtV[}s}H~dYF~M[F|tYdZZ{ |ceKhgt\}sjXkZcKjtyAqYsVytq[P]dy]_[VX|v_U{ssVyYrZVwUX^yDkZYRpCD{YEzytqU{sxFRz{Z]X~saH{YEzytqU{sxFSNy{[abreUdwIysyEZwE}sSFt{V}sWJwX|v_U{ssVyYbAQI{yYbAQI{Bs^qU{ssXT\Ehc{yZDP]gX|v_U{ssVyYi[}Y{HyP@8F_TCD
UE^W~ssUy_w[ms{yXtHys~KycH~KxCtYsUyqpYng^YyX^YyZc[|s^W~ssUy_YFTc[[{Ymg^T_CmgXja[mwH|_\Ss{As[pW~ss[Qe`YxYx^iegXmw|Y}[yJZZ|f`JnZgFiXVHmsKiHp nZsvsZmZw[|s^W~ssUy_\Ss{y\UJ~YEyyqpW~sxEijc_~Z][|  FmwdKijc\{I{As[pW~ss[SuISs{yX` zI{As[pW~ss[Sz|YxYx}dcv~twH}qpIzt{J|fp{dsKyvpxZJy[F{~ssUyq{ Ux[[{ Ux[|s^W~ssUy\cTwg[[{EU^y[F{~ssUyq{~Z][}[x{Qa:D\UDCWF_PyqsW{\v\jq{{[uO~q |H}[{XG|yqsW{rz_QecY}Xy~q{CqXqPyqsYSv	MTq{{_T[i_`XPH\juJ~\[Tq{CqXqPyqsYSfa^[xX|[}~HY hb MjecG~ea~vkD}fuOiaIhuui_dXk}@ifkY~p_PyqsW{\[Tq{{_TMy[E{{rqPyqxGkibXyX]Y~~EQjx ~HyDs[sW{rq^SuIVryyXc HyDs[sW{rq^SzY}Xzxd`v{uuO~KsIuyO|fs~eqNyvs}[}Oy[E{{rqPyqx Py}^[x Py}^|s]W{rqPy\`Qve^[xEP[y[E{{rqPyqx{[_^}[{{T`
:D_UAB
WE_UxsvW{_vYks~{XiJ}Z~I|K |Y|ayArYvW{qq[hg[[{X_[ZfY~s_UxsvW{_XDRfY}[zXPw[Eke^UzEhzfXPeEQKDR]TY~s_UxsvW{_\YxZXY|X\Y|d~GXiF|wqXka hdz~eyhrDuehZnk y~gb{[GyxsvW{qzGkhfY}[zRI~Cq[qUxsvYQuvPs~{[	@S]PufYkbF{[GyxsvW{qzES} {X_[tfJ{[GyxsvW{qzERI~{YbcubWfu xt~GXuF|tTDvyU|tPHu[}qXW{qqUx^eCQKyx^eCQKyArYvW{qq[Ux[Ghayx]FP_e[}qXW{qqUx^nY}[yKxWG	8D]WBCWG]VytqU{]tZjty{ZwI~t|I~^KtkX|v_U{ssVyZvBhs{y]i{YEzytqU{sx^R~{Z]XRZfhwtG|ZbkFZRY}GPx_y^Gy{ssVytzBhs{yZjZg|\i]WH~gwKjpeF|whY~d J{|c\Yw{Fi`}|wx\i^yAqYsVytq[P]dy]_[VX|v_U{ssVyYrZVwUX^yDVgZjozGhgtQt[~q]VytqU{^pGSYa[}Y{~s}[~q]VytqU{^pKy]_[f[tbdqJdgV}]qKcF~N EYsFs_Hc{Bs^qU{ssXTpHH{Z]XTpHH{YEzytqU{sxUor^{Z]XRZ	Ghc{Bs^qU{ssXT^y{Z{XsY 8F^TCD
QWUWS
	UPRQT 	QUwH[PE\WF
T^TBKBD[^^
^]\UBUTE@[DKD[CFIBTCSBXWPTRBfK@W^X^WWUVPRTQ 	UPQPoU
QRQWSWRRWqoU
SPRPS	UTRQ	VWUW	QQUQWTVRQ	SYDC@ASQ TD\UTQ^ZD]V^@[WZE	:D^UAB
PVTUU

 WPSR SqS_Y\SXG\QYB_\W\S@H@CY]\\^^RAWSGCYCIF\ADN@WDQA_USVU@eIGU\_\TURTRUWS	WSS	SmWST	QQQoU
QVW
PU	WVSS	SU	PWQST	Q 	U
RVPSQ_DFBCQTTEZU VQ_XB]S\B[VXC	8D@^ZV^VTPS WWU T VS	UpU_UU\U]^URTRUWS	WSS	SmWST	QQQoU
QVW
PU	WVSS	SU	PWQST	Q 	U
RVPSQ_DFBCQTTEZU VQ_XB]S\B[VXC	8F^TCD
QSU	
VUP	Q  S Tw][^[U^WXUS
U\QBKAD^_\^]_UCWQE@XDNF^CEIGUFSBXRQVWBfH@R\]^WRPVSRUQ 	WPRQmU	 SWSSSnR
PQU
RRWTPRQWRUVSWVT		UQPQPXCDBAPV VF]R TS\YEZQ\@YUYD	8D\WBCWRUW
		WRSV	 STPpTX[\QZCTVUYS@K@FX_Y\]^WCRSG@YFHC\ADKAU
DQBZTQSU@fIBTY_\WTRTRPUS RPSQhWVWSQQmU
SPRPS	UTRQTWUW	QQUQWTVRQ	SYDC@ASQ TD\UTQ^ZD]V^@[WZE	:D^UAB
SVRSU
	TWP
U  P	SqWZUU_UE[W_SEIBFY]_Y_\WATSBB[FIE\DFK@WDT@ZUSUUEdKBU__YUURQPPWV	TRQ	SnRPU	QQTmU
 SSW	UP	TVRQ	SU PR
QPUQ 	W
 WVSS	SZDFACSTQD_UVT^ZG]S_B^WZF	;F[UAA
UPQ
 UU
W  	U	rT]VUS_UWQW
U\RBN@F[_\^X^WCWREEYFKF]CDKBUESGZWQVTBcIBW\^^RWSVRPUQWUSQmUPSRT		U	TRoW	QSU
RPWWUSQT	RU
SSR	SU	WTPRQZFDBBQ VVC_W WSYXG_Q\CYPXF	8G\RCA VR STRT RrU]WV]RUC
U\QBKAD^_\^]_UCWQE@XDNF^CEIGUFSBXRQVWBfH@R\]^WRPVSRUQ 	WPRQmURPWT
	T	TRngoW
U WPSRWU
RSVWU	P m  VQUTRTSWPTSQUS  R	
UTRQ	VXFF@AV T WD]WTR^_E_S^@XW_D:D\UDCWF |yqsYVXyyq{I{XGys[sW{_rMyX]W{DUEeY_Tc]^@\^[]jYAG[ GbtY\~j][@hG_Bz@Uk`AFxB_Vyb@SH]F~aBRegFkXTeXP_zGj Z }e[^|s{{rq^ie`[{[_Py_VDhfTCja^kbyDtc]W{rz@Rx {[_PyXc HyDtc]W{rzGjq{{ryO~XpZhez]}q}faN|fwHhfyCied]H ~XsGu}}XdYkfi^|s{{rq^ie^[{[_PyXwI{XGys[sW{_~]Ua{{rz_Tj`F{XGys[sW{\[Tq{{rzSK{Cv`_Pyqx Wir[yX]W{\AR_gY~p |yqsYSv	MTq{{rzYRed^PfeBj wY~p |yqsYQvvQq{{ryAU\VhQyb`UuUF{XGys[sW{_bDSK{{rzRzY~p |yqsYQGyX]W{Xyys\8G]RCATG{{qq[UY~{qyKxY@~q[qUx^uJ{X_UxERGg[\Ud_^B_Y\_ i^xCGYDcvWc_F\S{`ipdISPxe Qz}}I ~_^}yESzfFhgISeT]Ut\{[G|rYvW{_vYks~{qz[PgSJVjyGhnY~s yxsvYQu	KUs~{qytzY~s yxsvYSea[~YvY|fbYt_Y eF~t[]|a J|gaY~eufD|fiE|tvJ|vy h]eZ{[G|rYvW{_vBks~{qyJ|Y~Cvc_Uxs}Jk[[~YvYkjfSI~Cvc_Uxs}Ehja[~YvYV}[}q{{qq[Ux[Ghayxs}EP ^xY@~q[qUx]_FQa[~YvYk_\\RaI~_~_xY@~q[qUx^uXVuW[~YvY~T`i|gbX}I~Cvc_Uxs} Pz}[~YvYVuHHxY@~q[qUx^yESayxs~Yvc@;DE_XS^ 	Q	T PTPU 
RTS QpFC_CB]]^URQPPWV	TRQ	SnR	VP	U	PRSmU
 SSW	UP	U PR
QPUQ 	W
 WVSS	SUTRTSXFE@DS WVF]WQS\ZE_P^EYUZD:A\WACVQPU 

 RRW 	VpTDS\H[S_TT^__\UUP
U\RBN@F[_\^X^WCWREEYFKF]CDKBUESGZWQVTBcIBW\^^RWSVRPUQWUSQmE_\I]mmU
SPRPS	UTRQ	VWUW	QQUQWTVRQ	SYDC@ASQ TD\UTQ^ZD]V^@[WZE	:D^UAB
	TP 
	VUWP   PUqVBSYJYXX^GY\UQW
U\RBN@F[_\^X^WCWREEYFKF]CDKBUESGZWQVTBcIBW\^^RWSVRPUQWUSQmBUXE^mmU
SPRPS	W	Q UPWRPT	RUQPQPRSUSQWSW			UTRTSXFE@DS WVF]WQS\ZE_P^EYUZD:CB]XQ\
UVTVTSVRWVTVSUQVVrWET[J[Z[_@^^UWSURQPPWV	TRQ	SnCR_G^o nR
PQU
RRWTPRQWRUVSWVT		UQPQPXCDBAPV VF]R TS\YEZQ\@YUYD	8D\WBCTQQSW WR	U   	VpOYPG^VQW_SEIBFY]_Y_\WATSBB[FIE\DFK@WDT@ZUSUUEdKBU__YUURQPPWV	TRQ	SnCR_G^onR
PQU
RRWTPRQWRUVSWVT		UQPQPXCDBAPV VF]R TS\YEZQ\@YUYD	88