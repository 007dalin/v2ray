D]WACWG]UyrsS{]tYjr{{ZkJ|[{M|IH}bL}dQ[|p]S{ssUy\tDhs{y[k{YEyyrsS{sx]R|{Z][Td]hwtD|\`_P^GR\d{YEyyrsS{sxBjr{{]t_vcC}dVZ|eYkZgF~uUMsiew~g|Xi\|\}dU}vkC|I{AsXsS{ss[R\d{Z][T]~q]UyrsS{^pZTvU]}Y{DTthc
[|p]S{ssUy_pBQ^c[X{|t[|p]S{ssUy_pN{Z][dZq`csJ}eQSZsK}XCcK~rsC|Z]E}b{GqYsUyrs]VwJHy[]]VwJHyXE{ssUyrxWhp^y[]]P]Gjb{GqYsUyrs]VY{y[{]q^:G_QACTE[UyqsWx_rYjq{xXqJ~q K ~[|a}As[sWxqu[ie^[xX[[~XcY}s[UyqsWx_\DScY~[~XQu^Ehe^TEkzbXQ `ERKDS_QY}s[UyqsWx_XYyX]Ykeb_~e{IkveFiXwka~uxY}fXZ~XQD|eqiXwG_bX} gx[CyyqsWxq~GjjcY~[~SK{Cr[uUyqsYRurQq{x[XR JChj}Dy[E{xquUyqxGS~yX]YveHy[E{xquUyqxGRK}yY`cwaU}fwxv}E}X{D|vqF}XcW|vm}vwY}s[UyqsWx\fASK{x\fASK{Cr[uUyqsYUzXEja{x_DR_gY}s[UyqsWx\m[[{IxUD:D_UBAWE_V{wsW{_vZhw{{XiI~^{I|KK|g}ayBq]sW{qqXkc^[{X_X|^cY~s_V{wsW{_XGQcY}[zDhl`[keDh|dZS bDQMFQ_SX~u]W{qqV{Y^[{X_Xpg uihYkDkHvY|w |e}~`^\kHaE`dZ|XqH|phXvSF{]E{{qqV{wxEhjaX}]xQKyBq]sW{qqXQst Sqy{] Q\fSw
Y~s_V{wsW{\rGQZcY}[y|pY~s_V{wsW{\rK{^]YfY	t`gsHfeV^sI[ FgI|qqF|^]GayBq]sW{qqXVsJJ{X_XVsJJ{[Gz{wsW{qzWlp\{X_XPYEhayBq]sW{qqXV]{{XyXqZ8D]TAGWG^U}qqU{]wYnqy{ZhJxXyK|IzKKdR[xs_U{spU}_vBhsx}Xi{YFy}qqU{s{]V~{Z^[m_fGhhkDVufGkdGnubGQIGnja[~q^U}qqU{]]Y}X_[|ww^yXuk]xF{f}}cmfi~dYXz yF|gxmHu}wxHzua {YFy}qqU{s{Gnja[}Y{WKyAqYpU}qq[QwwUqy{YAUe[~IxAw[qU{sp[Wu	KVsx}XaIxAw[qU{sp[Wz}[}Y{}`bt{ttHyqqKtxKxfqJ~dx}vq }ZpJ}[Gy{spU}qzPx|[{[zPx|[xs_U{spU}\bQwd[{[zGP^}[Gy{spU}qz {Z^[y[yyTa>D]WACWG]UyrsS{]tYjr{{ZkJ|[{M|I ~XMZ[|p]S{ssUy\tDhs{y[k{YEyyrsS{sx]R|{Z][TyxVwZ_TfJAhh|H|\`kFYR_APx\yXE{ssUyrxDhs{y\gMkghZ~KcM~g{jfw@|tU jXkcK|eYhgh^}\g|w iX{GqYsUyrs]P]dy[]]V[|p]S{ssUy_p\VwU[X{BhgtHjb
]~q]UyrsS{^pDS_c]}Y{~u]~q]UyrsS{^pHy[]]f[wbbsLdwU}[sMYE}bM|ssE~[]Cc{AsXsS{ss[TvJN{Z][TvJN{YEyyrsS{sxUipX{Z][R\Ahc{AsXsS{ss[TX{{Z{[s_	8F^WCBQTU	 QS

	UPRSR  	QUqJ]PE\W@ W^R@MBD[]^\[\UAURGF[DKD]AFIBWEQDXWSTT@`K@W^^\QWSTPRWS	UVQSoWQRWQP	WRPQqoU	SST
PP	WRRQ	PQSW
QSUQW	WVPW	SZDEBGSWTD_U RQ^ZG]P\F[WZF	8B^UAA
VVTSW

 QPSR  SrSY[ZSXG_Q_@_\Q\S@K@E[[\\]^TGWSG@YEK	F\ADHBQDQBYWUVU@fIAW	\_\WWRTRSQS WPSUmWSWWQQoWQPQ
PSWVPSUU	VW	SSW	S	UTTPSQYF@BCQ RTF\W VQ\XD_U\B[UXE8D@]ZP\V TSSWTSTPS
U	rS_UU_U_XWRTRSQS WPSUmWSWWQQoWQPQ
PSWVPSUU	VW	SSW	S	UTTPSQYF@BCQ RTF\W VQ\XD_U\B[UXE8F^WCBQPU
V UP	S   STq_]^[U]W^SS
WZQBKBDX]Z^]\UAQQE@[DH@^CFIAW	FSBXTSPWBfK@TZ]^WTPVPRWQ 	QPQSkU	UWQSSmT

SQWRRQTPQSWPUPUWP W	
	UWVQSXEFDAST VF]TTS\ZE\SZ@YUZD>D\WACTRS Q

	WRPV STSpRZ]\QZ@RTU_QFK@F[__Z]^WCTQA@YFKE^GDKBUFWBZWQUWFfIBW_]ZWWPRRPUU TPSQnQPWSSWmU	SST
PP	WRRQRQSW
QSUQW	WVPW	SZDEBGSWTD_U RQ^ZG]P\F[WZF	8B^UAA
UVQSS
	T QP
U  P	SrW\WS_UF[ W\SCKDFY]\_]ZWAWSD@]FIF\B@K@WDRBZUSVUCfMBU\__WURWVPWP 	WPW	SmTSW	QQRkU
USW
SP	WVPW	SUPT
QSWQ 	 Q
WVPSUZDFBCUTWF_U VR\\G]S\BXU\F	8F]WGA
	WVQ	
USW	SrT]UUU]SWQT
U\QBHB@[_\^^\QCWQEC[@KF^CFMBUFSA\WQVWBeKDW\]^TWPVPVUQWSQQmUVPTT
	W	TRmW
SUU
RVWTSQQW RUSSTSW	QTPQS\FDBAS V VEYW TS_ZA_Q\@YVZ@	8D\TAGVTS	
WR
TRtU]WU]TSC
WZQBKBDX]Z^]\UAQQE@[DH@^CFIAW	FSBXTSPWBfK@TZ]^WTPVPRWQ 	QPQSkURPWV
	WRRmgiQ
VWSSPQU
RUVWSP m   VW UTRRSWPW
UQUU T
WRRQ	PZ@F@APT TD_QTQ^YGYS^@[WYF:D_UBAWE z{wsYV[y{w{I{[Gq]sW{\rK{^]W{GUGeY_Wc	_X@\^]_jYyCA[ Gat_^xj][ChA]Dz@Uh`GD~B_VzbFQN]F~aDPcgFk ^VcXP\zAhZ }f[X~u{{qqXkc`[{X_V{YVDheTEhg^kayBve]W{qzFPx {X_V{^c KyBve]W{qzAhw{{qyI|^pZhfz[w}eaH~`wHheyEkcd]K  |^sGv}^dYkeiX~u{{qqXkc^[{X_V{^wI{[Gq]sW{\~[Wg{{qzYVl`F{[Gq]sW{_]Vw{{qzQM{Cvc_V{wx Wjr]{^]W{_GPYgY~s z{wsYSu	KVw{{qz_Pcd^PeeDhwY~s z{wsYQuvSw{{qyGWZVhQzbfWsUF{[Gq]sW{\bBQM{{qzP|Y~s z{wsYQ A{^]W{[yqZ8D]TAGWGy}qq[VYx}qyK{YF|w[qU{^sH}X_U{ETAg[_Ub
Y^B\_^Y jXzEGYGcpUc_@^S{`ivfISSxcWz}~Ix_^~GUzfFkgKUeT]VtZ}[G|qYpU}_vYhsx}qz[SgUHPjyGkh[xs y{sp[Wu	KVsx}qy|t|[xs y{sp[Uea[}Yp[zfbY|tY[y eF}t]_za Jgg[xeu|`FzfiEtpHzvy k]cX}[G|qYpU}_vBhsx}qyJYxApc_U{s{Hm[[}Yp[mjfPIxApc_U{s{Gnja[}Yp[P}[~qy}qq[Vx]Enay{s{GV ^{YF|w[qU{]YDWa[}Yp[m_\\QgKx_~_{YF|w[qU{^sZPuW[}Yp[xTckzgbX~IxApc_U{s{Vz}[}Yp[PuHH{YF|w[qU{^GUay{sx[pc@8DC]^S^Q	 T PTSSRTUQpF@_E@[]^URWVPWP 	WPW	SmTVS	W	PRUkU
USW
SP	UPT
QSWQ 	 Q
WVPSUUTRRSXFF@BS TT@]WWQZZE_S^C[SZD:G^QACPSVV 

TPW PpTGSZJ]S_TW^Y]ZUUS
U\QBHB@[_\^^\QCWQEC[@KF^CFMBUFSA\WQVWBeKDW\]^TWPVPVUQWSQQmF_ZK[mmU	SST
PP	WRRQ	PQSW
QSUQW	WVPW	SZDEBGSWTD_U RQ^ZG]P\F[WZF	8B^UAA
	TS
	VV QP   PUrVDQ_JYX[^A[ZUQT
U\QBHB@[_\^^\QCWQEC[@KF^CFMBUFSA\WQVWBeKDW\]^TWPVPVUQWSQQmAU^GXmmU	SST
PP	W
Q
UVWPPWRUWVQSTPWSQQS W	
UTRRSXFF@BS TT@]WWQZZE_S^C[SZD:E@[XQ\UPRVRQPRW PTVPU	SPVrTERYL[Z[\@X\SWSURWVPWP 	WPW	SmCT]A^o mT

SQWRRQTPQSWPUPUWP W	
	UWVQSXEFDAST VF]TTS\ZE\SZ@YUZD>D\WACWQWUT WR
S 	VpI[VG^UQ W\SCKDFY]\_]ZWAWSD@]FIF\B@K@WDRBZUSVUCfMBU\__WURWVPWP 	WPW	SmCT]A^omT

SQWRRQTPQSWPUPUWP W	
	UWVQSXEFDAST VF]TTS\ZE\SZ@YUZD>8