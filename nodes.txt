D]WBBWG]VxqpU{]tZkqx{ZkI}XxK|I~qJtX}s^U{ssVx_wBhs{xXh{YEzxqpU{sx^S{Z]Xh_gGhhhGSugGkgDkucGQIDkj`[~q]VxqpU{]^ZxX^[kJx[_gZZYEedsku`H~gt]udFht{kX]_|JcK|XgX{YEzxqpU{sxDkj`[}YxRKxAqYsVxqp[QwtPqx{YYSuhs
X}s^U{ssVx\sDQ^cX~[x|tX}s^U{ssVx\sH{Z]XeYw`csI|HpUZsH|aJYI|[pEt]K|axAqYsVxqp[VwJKxX^[VwJKx[Fy{ssVxq{Whp]xX^[P]DkaxAqYsVxqp[VY{xXx[q^;D\WACWF]UyqpV{\tYjqx{[wJ~q|HJ}f`D[sy[Fz{rsUyq{YSfc[[x|r{As[pV{rs[QuKVr{y\U]k\`ZRKZhvH|_]Vr{As[pV{rs[Qe`X}X{j_` }u~a \Kw|f`[sFedK}bjexF|ft[~ecYhes[|s^V{rsUy_]Vr{y\UK{XEyyqpV{rxEijc^{[][| Gki||KxBqXsUyqpXQvKTqx{[c}KxBqXsUyqpXQy[[{~f`tyvtI|HsK}vxI~ewK|ftH{usEX|I{XEyyqpV{rxRz|X}XxRz|X~p]UyqpV{_`SudX}XxGR ]{XEyyqpV{rx yX^XX{yVc8G_WCATE]W{rpUx_t[hrxxXwH|rKHe`G|XgY~p^UxqsW{\wBkq{{[hx[E{{rpUxqx_PxX]YVy{UuZ]VfIGkj|J~\ch F[P_|GSx^{XFyxqsW{r{Bkq{{[R|fcJ}f[}f^[kf`Fv^\X ZvQ~e{Z~e`Y|vt hYXxAr[sW{rp[S_d {[^[UY~p^UxqsW{_sZUuUY}XxDhe| ~HxAr[sW{rp[RuIVrxxXc HxAr[sW{rp[RzY}X{}e`v{utJ|asIuxJ}fwI~etKxvsG}[|Jx[E{{rpUxqx Py|[~[x Py|[}s]W{rpUx\`Qvd[~[xEP^x[E{{rpUxqx{[^[|[{{T`;D_UABWE_UxrsV{_vYkr{{XuJr|KJ|ukDfyxXEz{qqUxrxYSea[~X{|qyArXsV{qq[PvKVqyx\]VubZSHZVe~@kvK~_	KkH{Bq[qUxrsXSea[~XxX|HSd\}aXhKV]~faK~vE}f[HK|euEvh\kX\^fwX~s_UxrsV{_^Ur{{\THxXEz{qqUxrxFkjb]x[]X~rKki`]P\~^}H{Bq[qUxrsXQu	KUr{{Xa|H{Bq[qUxrsXQz}[~Xx~fbtxuwI|aqK|u{I~fuK}ewH{vqE~[I{[GyxrsV{qzSyX}[zSyX~s_UxrsV{\bRvgX}[zGS]{[GyxrsV{qz x[]X[yyW`8D]WBBWG]VxqpU{]tZkqx{ZkI}XxK|IKJ|twX}s^U{ssVx_wBhs{xXh{YEzxqpU{sx^S{Z]Xh YBP]tDkjUH~]` h EYP^DS{\{YEzxqpU{sxAkqx{Z{HhXxJcK}f{_}gEvhEhYY_kX~dcI dktX~ek^I{Br[pU{ssXS_g{Z]XU|[~q]VxqpU{^pYUuV[}Y{GR gKSg RK	[~q]VxqpU{^pGR\`[}Y{v|[~q]VxqpU{^pKxX^[f[tcapJdkV|XpKcI|[JYsF|v^Hc{Br[pU{ssXUuIH{Z]XUuIH{YEzxqpU{sxTjs^{Z]XS_Ghc{Br[pU{ssXU[x{Z{Xr\8F^TBAQWT
WS
		
UPS PT	QTrI[PE\VCT_QCKBD[^__]\UBTQD@[DKE^BFIBTFRBXWPUWCfK@W_]_WWPWPRTP 	TPQPnT
QSTWS
WSSWqoT

SPW	PSTTRQSWPW	PPUP W
 TWSQ	SYEFAAST TD\TTQ^ZD\S_@[WZE;D^UABPVTPT

  WPSS  SqRZX\SXG\P\C_\W\S@HAFX]\\^_WAWSGCXFHF\AEKAWDQAZTSVU@eHBT\_\TTRTSPWSWSRSmWSTQQQnT
PSW
PPWVSRSUPW
PSTP 	T
WWPSPZEFBCPTTE_T VQ_YG\S\B[VYF8D@^[S_V	TPR WWP UVS	T
qU_UU\T\^TRTSPWSWSRSmWSTQQQnT
PSW
PPWVSRSUPW
PSTP 	T
WWPSPZEFBCPTTE_T VQ_YG\S\B[VYF8F^TBAQST
WUPP S Ur\[^[U^V]US
T\QBKAE[^\^]_TBWQE@XEKF^CEHBTFSBYWPVWBfHAW\]^WWPVSSTQ WPRPmUSWRSSnW	
PPT
RSWTPRPWSU	SSWST		TTPQPYFEBAP W VF\W TS\YD_P\@YUYE8D\WBBWSPW
	 WRSWSTPqQY[\QZCQWT\R@K@FX^\\]^WBWRG@YFHF]ADKATEQBZTPVT@fIBT\^\WTSTRPTS WPSPmWSWRPQmT

SPW	PSTTRQ	QWPW	PPUP W
 TWSQ	SYEFAAST TD\TTQ^ZD\S_@[WZE;D^UABSVRRP
	T WP
T P	SqV_TU_UEZW_R@HBFY]_\^\WATRGC[FIE]AFK@WEQAZUSUT@eKBU_^\TUSTPPWS	TSQ	SnWPT	QPQ mU
	SSW	PP	TWSQ	STPW
QPTQ W
 WVSRSZDFABSTTE_UWQ_ZG]S_C[VZF	;G^TAA

TPQ
	
 TP
W PrT]VTV^UWQWU\RCKAF[_\_]_WCWRD@XFKF]BEKBUERBZWQVTCfHBW\^_WWSWSPUP WPRQmTPSWT	T	TSnW	PSU
SPWWPRQTRT
SSWS TWTPRPZFDBBP VWF_W WR\YG_Q\CXUYF	8G]WBA WWS	
	TS	TSrU]WV\WUC
T\QBKAE[^\^]_TBWQE@XEKF^CEHBTFSBYWPVWBfHAW\]^WWPVSSTQ WPRPmUSPWU
	TTRnfjW
UWPRSWU
SSVWPP m   VTUTSQSWPT	SQTS  W
TTRQSYFF@AS T WE\WTR_ZD_S^@XVZE:D\TABWFyxqsYVXxxq{I{XF|r[sW{_sHxX]W{DTDeY_Tb
\^@\_^\jXz@G[ Gbu\]~j][@iB^Bz@UkaDGxB_VycERH]F~`GSegFk]UeXP_{Bk Z }eZ[}s{{rp[he`[{[^Ux_VDhfUFka^kbxAuc]W{r{ESx {[^UxXc HxAuc]W{r{Bkq{{rxJXpZhe{X|q}f`K}fwHhfxFhed]HXsGu||XdYkfh[}s{{rp[he^[{[^UxXwI{XF|r[sW{_XTa{{r{ZUj`F{XF|r[sW{\^Uq{{r{RK{Cv`^Uxqx Wis^xX]W{\DS_gY~pyxqsYSvHUq{{r{\Sed^PfdGk wY~pyxqsYQvwPq{{rxDT\VhQyceTuUF{XF|r[sW{_cARK{{r{SzY~pyxqsYQBxX]W{Xx|r\8G\WBATFz{qq[UX{{qyKxXEq[qUx_pK{X_UxDWGg[\Ta	_^B_\]_ i[yCGYDbsVc^C]S{`hueISPy`Qz}}H~_^}|DSzfFhfHSeT]UuY{[G|rXsV{_vYkr{{qz[PfVKVjyGhkX~s yxrsXQu	KUr{{qyuX~s yxrsXSea[~XsX|fbYuZX eF~u^\|a J|fdX~eucE|fiE|usK|vy h\`[{[G|rXsV{_vBkr{{qyJ|X{Bvc_UxrxKk[[~XsXkjfSH{Bvc_UxrxDhja[~XsXV}[}pz{qq[Uy^FhayxrxDP ^xXEq[qUx\ZGQa[~XsXk_\\RdH~_~_xXEq[qUx_pYVuW[~XsX~T`h|gbX}H{Bvc_UxrxPz}[~XsXVuHHxXEq[qUx_|DSayxr{Xvc@;E@^XS^QTPTPP
RUV QpFC^FC]]^USTPPWS	TSQ	SnWVPT	PSVmU
	SSW	PP	TPW
QPTQ W
 WVSRSUTSQSXFEAAS W WF]WTR\ZE_P_@XUZD;D]WACSPPU	

  WSW  VpTDRYI[S_TT_Z^\UUPU\RCKAF[_\_]_WCWRD@XFKF]BEKBUERBZWQVTCfHBW\^_WWSWSPUP WPRQmE^YH]mmT

SPW	PSTTRQSWPW	PPUP W
 TWSQ	SYEFAAST TD\TTQ^ZD\S_@[WZE;D^UAB	TP	 
	VU WP  PUqWGRYJYXX_BX\UQWU\RCKAF[_\_]_WCWRD@XFKF]BEKBUERBZWQVTCfHBW\^_WWSWSPUP WPRQmBT]D^mmT

SPW	PSW	P	 U	 PWSPTRTTPQPWSTSPWS W		 UTSQSXFEAAS W WF]WTR\ZE_P_@XUZD;FC]XQ\
TSTVQRVRWVTVST
PVVrWDQZJ[Z[_A[_UWSUSTPPWS	TSQ	SnBW^G^o nW	
PPT
RSWTPRPWSU	SSWST		TTPQPYFEBAP W VF\W TS\YD_P\@YUYE8D\WBBTPTSW WR	P 	VqJXPG^VPW_R@HBFY]_\^\WATRGC[FIE]AFK@WEQAZUSUT@eKBU_^\TUSTPPWS	TSQ	SnBW^G^onW	
PPT
RSWTPRPWSU	SSWST		TTPQPYFEBAP W VF\W TS\YD_P\@YUYE88