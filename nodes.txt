D]WCBWG]WxqpP{]t[kqx{Z{I|qO|t{E|fR~ZwaxDqYsWxqp^kg^[xX^^|ZcY}s^P{ssWx_YAQcY~[{Q^d PukPw\R|BhxdZP cBQIFR_R^~q]WxqpP{]^[xX^^|d^X|f`Md{DkvU_|Y kvsZ~dZ]h_|Cd`[k_k]kZh\|vx{YE{xqpP{sxEkj`^}YxRKxDqYsWxqp^Qwt Pqx{YZS ]hhxE}KxDqYsWxqp^QwIUqx{Zc |KxDqYsWxqp^QxY~[{xf `vxvtOcsI|vx@~dwI}ft{t{J~X|O{YE{xqpP{sx Sz|^}Yx Sz|^~q]WxqpP{^`Rud^}YxES [{YE{xqpP{sxxX^^Y{{Wc
8F_UBAUE_V{rvUy_vZhr~yXuI|r}qI|KfG}XWX~pXUyqqV{\qBjqy{[ny[Gz{rvUyqz^PyyX_XVa[juvG~\ei DZP_zGRz_{X@yyqqV{r}Bjqy{[T}fyuv|fb\k[~F~ueI}rZifeH~fzifbX|u[Y~uf[kb~As[qV{rv[R_f{[X[T}X~pXUyqqV{_uZTuWX}X~DSrAPX[|s_V{rvUy\rGQ_f[[y|uz[|s_V{rvUy\rK{[X[dY	t`bvJ}f}V[vK}q IXJ~KqHKXH}ayBqXvUyqqXVvOHyX_XVvOHy[Gz{rvUyqzWiu^yX_XP\GjayBqXvUyqqXVX~yXyXq_:D]TABWG^UxtsW{]wYkt{{ZtJt sJME}dt[}v]W{spUxZt@hsxx]k {YFyxtsW{s{]S| {Z^[hZ@P]wGkoVJ~]chF[P^|GSx^{YFyxtsW{s{Bkt{{]`Hck hdx }c^[wxFs^\hY|]t[~dZh`w|]{[k`tYcxAr^sW{sp[SZd {Z^[UY~q^UxtsW{^sZUpUY}YxDhIP]gK}N{CqYpUxtsYQwKUt{{Z`|N{CqYpUxtsYQx|[~^xf ctxswH|YpK|s{G~dtK}cw{txH~]H{YFyxtsW{s{SY}Y{SY~q^UxtsW{^cRpgY}Y{GS\{YFyxtsW{s{ x]]YYxyWf8F\WBDUF]V~qqUy\tZmqyy[{IxqJ~KDzf}J|[wKz[yAsXsV~qq[if^Z~X_[~[cX{s_UyrsV~_XDScXx[zGji`ZneGjyd[V bGSHGT_S[|p]V~qqUy\^Z~X_[~KUKnX\Zi[UEy_e jXneeE|e^[zeuFj[sHmef_~\h]yuayXEz~qqUyrxDmja[XxTKyAsXsV~qq[SvtVqyyX[nj~RvgG~[GyyrsV~qzERx~X_[~ucK~[GyyrsV~qzESH{~YbbtgVzfuyu{FzXqF}e{EzfSU}[zHu[|p]V~qqUy_`BTKyy_`BTKyAsXsV~qq[Ty^Fmayy\GU_e[|p]V~qqUy_kXx[yKyVB=D]WCBWG]WxqpP{]t[kqx{ZwHqsHfZB|tY}s^P{ssWx_wGhs{xXh{YE{xqpP{sx_S{Z]Yh_gBhhhFSugBkgEkucBQIEkj`^~q]WxqpP{]^[xX^^|ghZhH{\kdgDkv`I  w\~gwJehCkdg|HROkJ`X|Hs[{YE{xqpP{sxEkj`^}YxRKxDqYsWxqp^Qwt Pqx{YYhj{^hh{Fx[F|{ssWxq{@Px xX^^|tcJx[F|{ssWxq{@QI{xYg`ugW|f|@{t{G|XpCd{D|fRPZ|Ht^~q]WxqpP{^`CRKx{^`CRKxDqYsWxqp^Vx^Gkax{]FS_d^~q]WxqpP{^kY~[xN{WB	;D\RACWFXUyqqV{\qYjqy{[rJ~q|HJ}XaD[zJy[Gz{rvUyqzYSff[[y|r~As[qV{rv[Qu	KVr~y\T]k\eZRKZhvH|_]Vr~As[qV{rv[QeaX}X~ ~eb[ebiK He\|fb[h[TFev]kbHvS }fyZ}_j[K~[|s_V{rvUy_]Vr~y\TK{X@yyqqV{r}Eijb^{[X[|b^VfYjjyG{X@yyqqV{r}ERz{[X[~vaK{X@yyqqV{r}ESKy{ZbbweVeryvyF[vF}fyEeTU}X}Kr[|s_V{rvUy\bBQH~y\bBQH~As[qV{rv[Tz\Fhb~y_GP\b[|s_V{rvUy\iX}X~KyU@8EE]ZS^ QQR PW	
TS  QTQSpWGR\JYPQ^HXUQwrwsuup wprqu	q	tuwrnYnwuupquwwpstusrowqt	qpq	h    w vwpu	vqtv w
	tqrqsYCF@Ast vE\RtS_ZDZS^@YVZE:FB^XPY UTQSPS PSSSVSQTwTEQ[I[PXTU\X^\VUAwrwsuup wprqu	q	tuwrnt	prssrmw
squs rttuqqwrtsprs w	 utsqsXFDAAs v wC]WtRYZE_Q_@XPZD	;D\RACWFyyqqXVX~yqyH{X@|s[qV{_uHyX_V{DREgX_Td
]GQaY~d]\^o_^yGIg]XB]FDF{J_^}o_YChA]ABWh`GD{G]TzbFQKXD|aDPfbDi ^VfZR\zAh_f[X~pyyqqXkfeYyX_V{\y]QeYSy~Gi iX~pyyqqXQvKTqy{r~~v}X~pyyqqXSff[[qXhua_vuk[nF} ukHJ}efX~e\EjfiE|enE}vqKeP~e~]{X@|s[qV{\qBjqy{r~J}[yBv`XUyqzDhif[[qXVz[|s z{rv[Tz\Fhb~yqzDP^y[GqXvUy_XGQf[[qXk_BR_v^QXXj[yBv`XUyqzFkie]yX_V{Xa_XES[vRKX~pyyqqXVvOHyX_V{_eASKyq_:FB^XPY STSST
US QS UTwJYPE_VFt rtsprswrrvu	twptrmt
vpvwrt	pswrhw
squs rttuqqwrtsprs w	 utsqsXFDAAs v wC]WtRYZE_Q_@XPZD	;FCXXQ\
T WUVQTTV	QrVDQZO[Q]VT\YX\WDZusqrptv 	wps	pttrpushuvwrssow	
qptrsrtpspw	su	svw	su		ttuqqYFEGAq w vF\WtS\XD_PY@YUXE=D]WCBWG{xqp^VY{xqxN{YE~r[pP{^pJxX^P{EWDf^_Ua\GPgYa\o_ aCH|aD~\@jJdV|XpNs
H|[	N|E\GTbFUS{AW\^YU_rZ_]Z UzsM}Y
FUqChcZS_YPgtER_]YSxc~axDva]Wxq{_hwcY~[p^Ww^YUeBkkY}s|{ssYRuNVs{xqx|tY}s|{ssYPe`^}YsYhe`}td\XpCG|qOgdY}ex}tYDfh@tsJ|fZOJcHx[FyqYsWx_wGhs{xqxOY{Cuc^P{sxEkj`^}YsYU|^~q{xqp^Vx^Gkax{sxES [{YE~r[pP{]ZFR`^}YsYTu]^VgEh h^~q{xqp^Qwt Pqx{s{Fg_gyh xXdeVA{YE~r[pP{^`CRKx{sx Sz|^vaB	;D\RACWFyyqqXVX~yqyH{X@|s[qV{_uHyX_V{DREgX_Td
]GQaY~d]A\Y^] j^zAGgAbs\\~h\[@oB_BxAUkgDFx@^VyeESH_G~fGReeGk]TeYP_}Bj X}e\[|s z{rv[iebZ{[XUy_HAVyeAjj~ QXFRqyBv`XUyqzFP}yX_V{[f}KyBv`XUyqzAhr~yqy|ebjXu|rHiHeH~erJjeyEkenKi[  |[vE}v}I}eq_}_eX~pyyqqXkf[YyX_V{[n[|s z{rv[R_f{[XUy\TK{X@|s[qV{_eSueX}Xv[R_	Dhb~Atc_V{r}]R~{[XUy_HAVyeAjj~ QXFRqyBv`XUyqzFkie]yX_V{XzRXzZQ_Sqi[X~pyyqqXVvOHyX_V{_eASKyq_:D]TABWGyxtsYVYxxt{I{YF|r^sW{^sHx]]W{ETDeY_Ub
\BS`Yb\@\_^\ jXz@BeAcpUa_@^Vybivf KQSxcR~I}Z\~GPdDkgKP`V_VtZx^E~qYpUxZt[hsxxtxYSgUHUo{Ekh[}v{{sp[RpIVsxxt{ |t|[}v{{sp[P`cY}Yp[~cZY}gtHhMsD||^Hgg[}`tZ|Z`FckGtpH|cYHhghx^E~qYpUxZt@hsxxt{{YF|r^sW{]^Ut{{s{RN{Cva^Uxtx Whs^x]]W{]DSZgY~qyxtsYSwHUt{{s{[P`VJVhxGhkY~qyxtsYQwwPt{{sxDhaxAdxwBdckF{YF|r^sW{^cARN{{s{SYvaA;C@_XQ_	  RS	QSWU	UPURS	q_X[YW]W^VVt rtsprswrrvu	twptrmtswsqrnwpvusuwvprqurtssws	 trtpsp_FDBCp vwFZW vR\YB_Q\BXUYC	8DC][V\
RSVSQWUVQSURPWSSPTSWrVGSZJX][^BY_UPS
rpvpswqusqsw
w usr	poBW^B^o ow	
qptrsrtpspw	su	svw	su		ttuqqYFEGAq w vF\WtS\XD_PY@YUXE=FB]ZP\UQS
R V	VR	TQ	WT
		rWBQ[JY[[_G[^URTtutprws	trqsr
vwrtumCW_D^nmw
squs rts	 r
pw	ssuuwvprqurtssws	 trtpsp_FDBCp vwFZW vR\YB_Q\BXUYC	8DC][V\
VUPSTPrSZY_SYE[WZD_]wpvrstq rpspwwuswpoYow
t	tqqswr
psuwrsmwsutqqn  vtrpwppup w	
 uwst	sXEFADsttD]TqQ^ZE\S_E[WZD;C@_XQ_Q TQWURW   Q
S qFCXFB]\^tutprws	trqsr
vwrtumw	ws	uurvntpsrpp uuw
psup	twwps	ptqrqsYCF@Ast vE\RtS_ZDZS^@YVZE:FB^XPYRPUVTPUV P
SUQRWwTEQ[I[PXTU\X^\V_\wrwsuup wprqu	q	tuwrnYnwuupquwwpstusrowtqqsw m qw wvrrvuuw
psup	twwps	pZECBCpqtD_T vQ^YG\V\B[WYF8D@_[S_PSTPU TPQTTqQGSYHXS^QW^Z__UTT
rpvpswqusqsw
w usr	poZmr
twqrsru
svvwpp mtswsqrh    w vrtpspw	su	svw	su		ttuqqYFEGAq w vF\WtS\XD_PY@YUXE=FB]ZP\  TU SR
	SR	QRrWBQ[JYP]WR\X]^VVVt rtsprswrrvu	twptrmD^YHXmmt
sqwpr tqrqsrpwppup w	
 uwst	sXEFADsttD]TqQ^ZE\S_E[WZD;=