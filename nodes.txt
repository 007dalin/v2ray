D]WCB
WG]WxssP{]t[ks{{Z{I|sO|t{E|dQM~ZwxYE|{ssWxsx_SgcY~Y{|s{CrYsP{ssYPwMVs{x][Vw`XSI\Vg|BkwM~]IkI{DqYsWxss^SgcY~Yx^kgJhdkcYk]N~dcIhZgC}dZ[Idd\|dgO]hX|Zg^~q]WxssP{]\Us{{^VJxYE|{ssWxsx@kh`_xZ]^~tDh]^SgRI
^~q]WxssP{^pFR^c^}Y{ t^~q]WxssP{^pJxZ]^f[uccsOdgW|ZsNsH|sN|IsHZ]@c{CrYsP{ssYUwJM{Z]YUwJM{YE{xssP{sx Thp[{Z]YS]Bhc{CrYsP{ssYUY{{Z{Yr^
8F_UBCUE_VyqvUy_vZjq~yXyH}qJ~vyD}fTK|XuF}[~As[qVyqv[ie\ZyXX[~XaX|sXUyqqVy__DSaX[}S\fQumRu]SzGjzf[Q eGSKGS_T[|s_VyqvUy_\ZyXX[f~Z~ea^~ yEjvT}a vbK|fW~_nF~ubYi_f~Xv[~Hvy[GzyqvUyqzDjjf[[zSK~As[qVyqv[SuvQq~y[	]R_yDTjzYj bDy[GzyqvUyqzFR}yX_X~vfHy[GzyqvUyqzFSK~yYabwbU}fuIyv~E}XqE}fvF}XSV}fn}vuX|sXUyqqVy\eASKyy\eASKyBs[vUyqqXTz[Ejayy_DR_eX|sXUyqqVy\n[[yHyUG:D]TCAWG^W{tsW{]w[ht{{ZtH|t sH|]kE}dtY~v]W{spW{Zt@hsx{]k {YF{{tsW{s{_P| {Z^YkZdEhhkFPpdEkdEhp`EQIEhocY~q^W{tsW{]][{]]Y|g` h`xYdpDs|I |s~dV|sUD}dhIhZkHd]\ZxY{YF{{tsW{s{EhocY}Y{QN{CqYpW{tsYQww St{{YIkoQF{YF{{tsW{s{GPx {Z^Y|scJ{YF{{tsW{s{GQN{{[``rgWd|G{s{GZpDcsDZRWckttY~v]W{spW{Y`CQIx{Y`CQIxCq^sW{spYV^Ghcx{ZFP]dY~v]W{spW{YkY}YxI{PB	8F\UADUF_U~qqUy\vYmqyy[uJyq}rJyHaGeq[{s_UyrqU~_vBjry~XiyXGy~qqUyrz]U~y[_[n XBR\vGmjTH|\bn DYR_}GUz\yXGy~qqUyrzBmqyy[y zH[urZ{fqJ}euFyujY~rZmfbZ|e\Yzvuj[v[m_iryAt[qUyrq[U_fy[_[S}[|p_U~qqUy_rZSuW[XyDneTv{KyAsXqU~qq[Sv	KSqyy[azKyAsXqU~qq[Sy}[x[z}dbt~vuJ~XqKzvyE|euE{fyyuu xXqJyXGy~qqUyrzUz}[XzUz}[|p_U~qqUy_bTue[XzGU ^yXGy~qqUyrz ~X_[}XyyQc:G]WDA
TG]P{ssWx]t\hs{xZ{NsHt{BdQ }ZY{YE{xssP{sxXPgc^}Y{s{DqYsWxss^SwJUs{{^V\h]`_PI[Ug|EhwJ}]NhI{CrYsP{ssYPgc^}Y{kg`[hdp[YhddZ}dcNd{D~tsN|s\kg{N|ts|Jw|wcY}q]P{ssWx][Vs{x^VM{YE{xssP{sxGhh`X{Z]Y}`Xhh|\}I{DqYsWxss^QwIUs{{Zc |I{DqYsWxss^QxY~Yxxf `vxtwOIsI|t{@~dwG}d{{tw~ZsO{YE{xssP{sx Sx^}Yx Sx^~q]WxssP{^`Rwg^}YxES[{YE{xssP{sxxZ]^Y{{Wa
8F_UBCUE_VyqvUy_vZjq~yXyH}qJ~vyD}fT|XyF}a~As[qVyqv[ie\ZyXX[~XaX|sXUyqqVy__DSaX[}jezZieGjubDSKGjjaX|sXUyqqVy_[YyX_XjfSZiX[j_zFjffY}a~fjX|erj_iEiXPK~HW~_~~Xey[@yyqqVyq}GjjaX[}SKyBs[vUyqqXSuqQqyy[HjevKR Dy[GzyqvUyqzFR}yX_X~vfHy[GzyqvUyqzFSK~yYabwbU}fuyv~E}XqE}fvF}XSV}fn}vuX|sXUyqqVy\eASKyy\eASKyBs[vUyqqXTz[Ejayy_DR_eX|sXUyqqVy\n[[yHyUG:FB^ZSYVUTRTT 	S  PTRT	RWwFB]DC_Z^
rprw	puqqtpptrrwpsupw	uwpt	stvuqqYDFGAqt vF\UtS\XD]SY@YUXE	=FB]ZP^VVR	QR	U SQ		PQT	pP^UCGBDYuprw	suvvw	ppt
urwsprs	w	 utssswvrqqZDE@Aqw qF_UtT\XG]P^@^UXF	:FE]ZS^ 	T	USP	WQT p\Y^\U_U_WSuqw	qpswvrrvuuwssus	t	utps	pXFCBCp qtD]W vQ^YE_V\B[WYD8D@_[Q\V	TVSTSVSQQRSPUP	rO[RG^WCu
srww	p	rrrwtutsssw	pu
vqt	v u
	wqrqqZCF@Aqt vE_RtS_XGZS^@YVXF:FB^ZSYTPVPRWTTSSVPSwTEQ[IYSXTU\X^^UF[w	susvquwpt	stpu
qqwq r
	wvrrvZDF@BvtvF_UwS\_G]S^CYU_F	:EB]]S^V	 U RVP
Q	 	TRSpTER[J^S_TU_X]YUUQw	
ustrw	uqw	qpsrtps	sw	pu	qvw	q u
	tvuqqYDFGAqt vF\UtS\XD]SY@YUXE	=FB]ZP^QVPS
QSQUQSTV	SPQpTBQ[JYP_TR\X]^V_[w		rssrww	sutqqtvuqqurwsprs	w	 utsssXFDACs vtC]WvQYZE_Q_B[PZD	;D@XXQ\

TRSV SS	QW SVrVDSYO[Q]VT^ZX\WSW
u qtqss  rtps	sw	pu	qvw	q u
	tvuqqYDFGAqt vF\UtS\XD]SY@YUXE	=FB]ZP^SQVQS PSQ   	 V	pTBQ[JYP_TR\X]^VUFw	prsqqutsssw	pu
vqt	v u
	wqrqqZCF@Aqt vE_RtS_XGZS^@YVXF:FB^ZSY  PWVQPSVSRW	
	S wTEQ[IYX^\@[^VQQw		rssrwuvvw	pptts
u
rw	psrrwvrrvuuwssus	t	utps	pXFCBCp qtD]W vQ^YE_V\B[WYD8D@_[Q\QQ VWRQS SUQrQGSYHXZ[YBY\WWSuwqqsuw		wsuruvwvrqqurtssus	 wrtps	s_FDBCs vwDZW vR^ZB_Q\BXWZC	8: