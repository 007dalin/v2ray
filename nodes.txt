D]WBB
WG]VxsqQ{]tZksy {ZwIs|II|tqCJsX}q_Q{ssVx]vFhs{xZi{YEzxsqQ{sx^S~{Z]XUf_hwtG}]b]P^DS]f{YEzxsqQ{sxAksy {]|ZhJS|Jg}gaNZgEt}I|dq~dd\|ZyNhZdZkZb]I{BrYqQ{ssXS]f{Z]XU}_~q]VxsqQ{^pYUwW_}Y{GkzZhgGxYG}{ssVxszAPxxZ__|tcKxYG}{ssVxszAQI{x[f`ugV|du{t{F|ZuBdsE|tiQdU|tu_~q]VxsqQ{^`BRIy {^`BRIyEqYsVxsq_Vx^Fkcy {]GS]e_~q]VxsqQ{^kX~YyO{WB;F]SACUGYUyqpVy]pYjqxyZoJ|XxH~I}KHcAs[pVysw[ie]ZyZY[~X`X|qYUyqpVy]^DS`XY|S\gQwlRu]S{Gjzg[QdGSKGS]U[|s^VyswUy_]ZyZY[ifV}JovhE~dcHjaigcH|ewZ~dQFv|F~txXiX|jdgy[FzyswUyq{Djhg[[{SIAs[pVysw[SuwQsy[BQg|Kij{AigDy[FzyswUyq{FR|yX^X~tgHy[FzyswUyq{FSIyYabucU}ftIytE}XtE}dwF}vhV}dQ}vtX|qYUyqpVy^dASKxy^dASKxBsYwUyqpXTxZEjaxy]DR_dX|qYUyqpVy^o[[xHyWF:D\TCCWF^WyusW{\w[ju{{[hH|\{I|H~eJHxCs_sW{rpYia^[{[^Y~\cY~p^WyusW{\YFScY}X{Ejn`[kf	Ej~dZScESOFQ\RY|w]W{rpWy[^[{[^YiLUkfw]i\wDhe| u k\`H|a{Ih\`D}\cf`i[kHeZIy_E{{rpWyuxEhi`Y_xQHxCs_sW{rpYSqt Srxy_CPB|O{CqXpWyusYQvITu{{[` }O{CqXpWyusYQy|Y_xfcvyrwH|bpI}r{H~etG|bs{ut\sH{XF{yusW{r{ R~Y}X{ R~Y~p^WyusW{_cSqgY}X{ER\{XF{yusW{r{y\]YXx{Vg8G\UCETF_WqqUx\v[lqyx[uHxqH{KJ|ryCu[qUxrqYoe\Yx[_YxXa[}p_WqqUx\XFUa[~XzYle^U\	CleXkb[luH}\\RqyArXqWqq[PfaYy[z[kfiofX[|H ofq}ea{vWF~fzY{q_k\}xu}EhKSJxf[[}p_WqqUx\\Rqyx_TJ[GyxrqWqzEhib_X_[}~_WefAkrYzs_UxrqW\rDR_aYy[yu}Yzs_UxrqW\rHx[_YbY	wcbqH{HqU|[qI{a J|r Gx[qJ~u_G{ayArXqWqq[UvHJX_[UvHJ[GyxrqWqzTir\X_[S\	ElayArXqWqq[UXyXy[r_ <D]WBB
WG]VxsqQ{]tZksy {ZwIs|I~sN|ZYX}q_Q{ssVx]vFhs{xZi{YEzxsqQ{sx^S~{Z]XhXFP]tDkhTL~]` hD]P^DSzX{YEzxsqQ{sxAksy {Zd[|tWJs }g~Zk]kEtSA|s|JeN~dQZy|JYIhJf\|s{BrYqQ{ssXS]f{Z]XU}_~q]VxsqQ{^pYUwW_}Y{Gk]v~I{BrYqQ{ssXRw	OVs{xZaI{BrYqQ{ssXRx}_}Yx~e bp{twIYqOt{I}duA~dsxtu}ZsIxYG}{ssVxszPxX~YzPxX}q_Q{ssVx^bQwgX~YzCP]xYG}{ssVxsz{Z]X|Yy}Ta;F\SACSPW TP
  URPSW  	SWpJXSE^UAS\S@HADYY\\^_UEWSGCXDIF\AEI@SDQAXUWVU@eH@U\_\TURTSRSS		WSR	WmW	QPVT	TTPPTroW	QWU
STWWRSQT	RTSSU	S USTPR	Q^FDBBQ VWD[W WR^XC_Q\CXWXB	8G]UCESVVRW	TSQP  SvQX[_PXE[S^@\\
T_SBOBD[^_^Y\UBTSED[DKE\CFIBTDSFXWPUUBbK@W__^SWRVPRTQ	TTQPnU 	PSRQS mW	SQT	RRTVTQPUSU SPSS	W		 	UTSSSXFEACS WVB]WVSXZE_P_BYQZD;DBYXQ\T
 WWQUPRVUPWrV\UW[W_]WRVPRTQ	TTQPnU 	PSRQSmW	SQT	RRTVTQPUSU SPSS	W		 	UTSSSXFEACS WVB]WVSXZE_P_BYQZD;F\SACQ TW	T  URS QVp_X][WYU_VP
W_RBIFFY]_^_XWATREB_FIE]CBK@WES@ZUSUTBdOBU_^^UUSVTPWQ	TRU	SnUPU 	QPSiU
	WSW	RP	TWRU	STPU
QPUQ S
 	WVSR	WZDFABWTVD_UWS^^G]S_CYW^F	;G\UEA
 PPR T TRTT   SVWrSZX_QXDST	W^QCH@D_]^_^^UAUQDCYDOD^BDIFWFRAXSSTWCeI@S^]_TSPWRRWP	USSSoT	QTQSR oW	QWU
STWWRS
ST	RTSSU	S USTPR	Q^FDBBQ VWD[W WR^XC_Q\CXWXB	8G]UCEPU	UQR		VTSW   S	QvU]WV\UBY
UXQBKAEY_X^]_TCSQE@XEIB^CEH@UFSBYUQRWBfHAUX]^WUPVSSUQ 	SPR	QiUWW	SSSnU
PPURS	STPR	QWRU	QWWQT	TVTQPYDDFAPV VF\UTS\YD]QX@YUYE		<D\WBB
WSS
	WR	TRqT_QWT]VTSPU^U@IBEX_^\_\TCUUGB[EHDZAFHAUBQ@YTQTS@dKAT^Y\UTTTPSUSURQQoWS	TUTW	VPmTSPUPSUPRQQSRW	PQUPWTWRU	SYED@ESVTD\TPQ^ZD\Q^D[WZE	:@^UABTUQ

SP
T P qV]UQ_UV@
W_RBIFFY]_^_XWATREB_FIE]CBK@WES@ZUSUTBdOBU_^^UUSVTPWQ	TRU	SnUPSU 	V		SWRiehTR	TWQPTUPPUURS oV V UVPSPU	SS
PQW	P	U	WWRSQZEE@CQWPF_TVU\XG\P^B_UXF:F[WCAUA{{rpYT_{{rxIy_E~qXpWyXpJ{[^WyCWGfY]Sa_]@^ \\_h[xCDX Eev^^}i]YGj@]Ay@WlbFD{A_T~`GQK^F|cEPfdFi_Vf XRXx@hY bYY~p{yusYkfc[y\]W{\UDjaVDhb^ie{Cv`^WyuxGP{ y\]W{[` }O{Cv`^Wyux@hrxyu{H|[sZjbxZracI~etHja{Dkfg]}O|[pG}r [gYiakY~p{yusYkf][y\]W{[tIy_E~qXpWyX|ZWbxyuxXVicFy_E~qXpWy[\VrxyuxQHxCtg]W{r{ Unp\{[^Wy[FP\dY|w{{rpYQqJVrxyux^Pfg^RagEhtY|w{{rpYSqt Srxyu{FW_UhS~`gWvVFy_E~qXpWyX`CQHxyux Py|Y|w{{rpYS@{[^Wy_{~q_:@_UABSE yxrqYR[yxryI[G|rXqW\rHx[_WGUDgY[Wc
\]@X^^\ nYz@DY CaqUc]A^P{b kwfIQWzbRy}zK	}\\z ~GPyfDoeKPfT_Rv[xXG~u[qUx\v[lqyxrzYWeTHUiyEo i[}p {qq[Rv	IRqyxry xv}[}p {qq[PfaYy[q[eb[xvX[|eDyv\_b H{ef[}fux aFeiG{vqHuyo_bXxXG~u[qUx\v@lqyxryH{[yAu`_WqzHh[Yy[q[hif TKyAu`_WqzGkiaYy[q[U}Yzs yxrqYRz\EkbyqzGS\[G|rXqW_XDRaYy[q[h\\^UfK}\~][G|rXqW\rZUvWYy[q[}Tg kdbZzKyAu`_WqzSy}Yy[q[UvHJ[G|rXqW\~GPbyqy[u`@	<FB][P^
 S TSVWR	 RVTRpDD]D@^]\UPVSSUQ 	SPR	QiUVWW	RPTnU
PPURS	WRU	QWWQT	TVTQPUVPSPXDBBCPPTE]U VQ_YE]W\B[VYD	8F^TBC
QSSR
		UPU 	UpVCQ[JXP_VS\X]_VWWU^U@IBEX_^\_\TCUUGB[EHDZAFHAUBQ@YTQTS@dKAT^Y\UTTTPSUSURQQoB][K^noW	QWU
STWWRSQT	RTSSU	S USTPR	Q^FDBBQ VWD[W WR^XC_Q\CXWXB	8G]UCE	VW
		TRTS	   SUvTEQZIYZ_\@[_VSPU^U@IBEX_^\_\TCUUGB[EHDZAFHAUBQ@YTQTS@dKAT^Y\UTTTPSUSURQQoEW_G]noW	QWU
STTS
U
SU 	PSSR WVSR	WUTWQSTQ	T	UVPSPXDBBCPPTE]U VQ_YE]W\B[VYD	8D@^[Q^	WQWUSQURUUWTTWSUVpPGSYIXZYXBY\VWQUPVSSUQ 	SPR	QiAU]D]oiU
	WSW	RP	TWRU	STPU
QPUQ S
 	WVSR	WZDFABWTVD_UWS^^G]S_CYW^F	;G\UEA
SSVP	P TRR 	TrH[SD^QS
UXQBKAEY_X^]_TCSQE@XEIB^CEH@UFSBYUQRWBfHAUX]^WUPVSSUQ 	SPR	QiAU]D]oiU
	WSW	RP	TWRU	STPU
QPUQ S
 	WVSR	WZDFABWTVD_UWS^^G]S_CYW^F	;;