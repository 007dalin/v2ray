D]WBCWG]VyrsU{]tZjr{{ZwI~r|II}[wGdkX|p]U{ssVy\tBhs{y[k{YEzyrsU{sx^R|{Z]XTyxVwZ\TfJGhh|K|\`kFZR_GPx_yXEy{ssVyrxBhs{y\{|gcKiec~dYvF|tZXjb}t |ew kgF~[pZkdx\jr{AqYsVyrs[P]dy[][VX|p]U{ssVy_pZVwUXX{DQ]dKQi|~I{BsXsU{ssXSvKVs{y[cI{BsXsU{ssXSy[}Yx~d`t{twI}bsKt{I|esJ~d{HyusK}ZsIyXEy{ssVyrxPxXXxPxX|p]U{ssVy_`QwgXXxGP]yXEy{ssVyrx {Z]X}X{yTa:G_WACTE]UyqpWx_tYjqxxXwJ~q KJ}f|EXc[|s^WxqsUy_w@kq{yXh x[EyyqpWxqx]R xX][i Y@S_tGjjUJ}_`i E[S\GR{^x[EyyqpWxqxBjqxxXxY~v`kex[|fdkvgF~vhHkaZ}u`J}fjfpIewK~XsY|[{As[pWxqs[R_g xX][T|Y}s]UyqpWx\pZTuVY~[{DSuJR dHS I}K{As[pWxqs[SuIUq{yX` |K{As[pWxqs[Sz|Y~[x}dcvxvwJ~[pI|v{J|fpH}f{KyvpI~XsJy[F{xqsUyq{ Sz[[{ Sz[|s^WxqsUy\cRug[[{ES ^y[F{xqsUyq{xX][}[x{Wc:D\UBAWF_V{qsW{\vZhq{{[uI|q rI|XsEeqK{[E{{rqV{qxXSfaX}[{|ryBq[sW{rqXSuJVry{_\VvbYPK[Vf~ChuJ~\	HhK{CqXqV{qsYSfaX}[{kjXhvUkH[kXd[~eakHQDk[f\kaZKz]hvw|ua kfwY~p_V{qsW{\]Vq{{_TK{[E{{rqV{qxGkib^{X]Y~vDSeXPrX~s]W{rqV{\pFQ_aX}[{ |u}X~s]W{rqV{\pJ{[_XfYu`bqIfgW[qHaGb H[sG[_Fa{CqXqV{qsYVvHK{X]YVvHK{[E{{rqV{qx Wir]{X]YP\	Dha{CqXqV{qsYVXy{X{Yq_ 8D_UAB
WE_UxspU{_vYksx{XuJsqJJ`G|f}[}q^U{qqUx]wBhqyxZh{[GyxspU{qz]S{X_[Ug[huvD}]cYP\}GS]g{[GyxspU{qzBksx{XS ktd|H}H}gkZ|fuFtxJ|a[hJdJ~f~Y|tR|e~[d[|qyArYpU{qq[S]g{X_[U|[~s_UxspU{\rZUwV[}[yDRwwXS v\kc	[~s_UxspU{\rDR^`[}[yt|[~s_UxspU{\rHxZ^[fY	wccpJfSU|ZpKa E|cK[qE|Z^EayArYpU{qq[UwIH{X_[UwIH{[GyxspU{qzThs^{X_[S]GhayArYpU{qq[UYx{Xy[r^8D]WBCWG]VyrsU{]tZjr{{Z|[{H|YI}[UG|dcX|p]U{ssVy\tBhs{y[k{YEzyrsU{sx^R|{Z]XTd[hwtG|\`kFZR_GPx_yXEy{ssVyrxBhs{y\}wk ~Kx^~gcjekF|tjb[hZVZ|edYJUiekhtKjb{AqYsVyrs[P]dy[][VX|p]U{ssVy_pZVwUXX{DQ`YRisD{YEzyrsU{sxFRx{Z]X~ucH{YEzyrsU{sxFSH{{[abtgUdwKyu{EZwE}uwFZ{V}u{twX|p]U{ssVy_`AQI{y_`AQI{BsXsU{ssXTy^Ehc{y\DP]gX|p]U{ssVy_k[}Y{HyVB8F_TCBUE{xqs[T[xxq{Ky[F~r[sUy\sJxX]UyGTDe[]Wb\^_\i]_yEJ}d_Y@]D~_FG{H\\~i]XCjB_By@VhbDFxA_Uz`ESH^F}cGRedFh ]Te XS\xBj Y ~fY[|s{xqs[iec[xX]Uy__PeZQzxEh k[|s{xqs[SuIUq{yqx v[|s{xqs[Qe`Y~[s[~Xd |_gE}XxDfY}aH|ed[|et|HkF~fhG|vsH}XR ~uhYy[F~r[sUy_w@kq{yqxH|[{Atc^WxqxGjj`Y~[s[T|Y}syyqpYUz^EjaxxqxGR \x[E|s[pWx_ZDS`Y~[s[i Y@S_t]S[Zk[{Atc^WxqxEijc_xX]Uy[fhjdEcX]iS[
[|s{xqs[TuIJxX]Uy\cCRK{|s\;D_WCAWE{{rqXV[{{ryH{[E~qXqV{\pJ{[_V{GWGgX_Wa_]A\\\_ j[xCDYGasWc ]C\P{ckudIPSz` Qy}~K ~\]~ |ESyfEkeISfT^VvY{XGq[sW{\vZhq{{rzXSeVJViyDk kY~p z{qsYQv	HVq{{ry|vY~p z{qsYSfaX}[sYu~\uwhuyE|exZkH IedY~fykewD|eiFvsJ[X[|HhZ{XGq[sW{\vAhq{{ryI[{Cv`_V{qxEhiaX}[sYV}X~s{{rqXVz^Ghby{qxEP]{[E~qXqV{_ZFQaX}[sYk\\_QdI~\~\{[E~qXqV{\pXVvWX}[sY~KfGVeA\j~K{Cv`_V{qx Py}X}[sYVvHK{U{T`8D_UAB
WE yxsp[V[yxsxK{[G|rYpU{\rHxZ^U{GUDf[_Wc
\\B\^^\jYz@EXGat\]|i_[ChB^@yBUh`DGzA]VzbERJ^D~aGSgdDk ]Ug ZP\zBkY}f[[}qy{qq[hgcY{X_Ux]IBVzbAkhQ[FSsxAvc_Uxs{EPzxZ^U{Xa|IxAvc_Uxs{Bhqyxsx|Hr_tVH[ h]`J~fuJkgxF}uu|s|XqE|t|K}u~Zhdd[~s yxsp[ke\YxZ^U{XuKxYF|q[qUx]^Vqyxs{QKyAua^U{qzThs^{X_Ux]DP_e[}qy{qq[PwHVqyxs{ASjbSwgHVjyGSgF[~s yxsp[QuvPsx{qyDb]zhY[f\`D{[G|rYpU{\bARIx{qzSx|[vc@;DC]XS^QT	UWU P	SUVQ STpJXRD\UAwsvppuqwsqqmu	spwtr	w	prtqmw		sqtpruwpqptswsqwsw		utrrsXFE@Bs wtF]WwQ\ZE_P^C[UZD:E@]XQ\WSURVQ	S PTW	rRXX\SZE_P^C_^
wpwspwpurrsotquqsrnw

pswsputrrswpt
squs  t
wtrq	pZFF@Ap t wD_WtR^YG_S^@XWYF:FC_[S\QQUPPQP  W SVQ UVrTEQZHXS]TU\Y__UF[wsvppuqwsqqmustspsmw	ssu
rpwwsqqtru
sstsw	wtprsZFDBBs vvE_W wS_ZG_Q\CYVZF	8EB^XS\
Q WVUTQQQPUQ STVTr][][V]U]UP
wstprts 	upqpow	qwrpqmw		sqtpruwpqptswsqwsw		utrrsXFE@Bs wtF]WwQ\ZE_P^C[UZD:E@]XQ\W	TQV QVQWTSTRVQrWERYJ[Q]WU_Z]\WVAtptrpus tpsqnwpwssqot
qsu	ppttpsqw	rw
ppw	pu wwsqqZEDAAqv tF_TtQ\XG\Q_@[UXF	;F@]ZS_
TTP	UVQTSRWQV 
qDC]F@_\\tptrpus tpsqnwwpwrpvot
qsu	ppw	rw
ppw	pu wwsqqtvpq	sYDEBAsw tD\U tQ^ZD]P\@[WZE	8F@_XP^PS	UW
SSSUSWPQ UpI[PG^RVtptrpus tpsqnejuuwpqputpqvuppom w v ttpsqw	rw
ppw	pu wwsqqZEDAAqv tF_TtQ\XG\Q_@[UXF	;F@]ZS_
P	 	
RS
		T
 qVDQYJYS^VT\Z]^UWPuptpsts	wrq	pmF][K^o mw	ssu
rpwwsqqtru
sstsw	wtprsZFDBBs vvE_W wS_ZG_Q\CYVZF	8EB^XS\
SQTU
TW
QWRU	rVGR[I[X[^BX^VQT
wpwspwpurrsoAT_D^mot
qsu	ppw

p	 w	pu	spwp tvpq	supt
qpwq 	 w
 wvsssZDFACstwF_UvR\ZG]S_BXUZF	;DC]XS^	P 	PWTPW	TPVTWpTDSZJ[XY\AY_UUQwsvppuqwsqqmBU^G^mmu	
spt
ps	wtrq	pwsw	qsuqw	tvpq	sYDEBAsw tD\U tQ^ZD]P\@[WZE	8F@_XP^VS	U	WUV	SWUSSSQSVRVpI[PG^VQtptrpus tpsqnAW]E^nnw

pswsputrrswpt
squs  t
wtrq	pZFF@Ap t wD_WtR^YG_S^@XWYF:FC_[S\Q 
VQWPWTUT TRTWRrTEQZHXS]TU\Y__U_\wsvppuqwsqqmZowv	wsrswwssvurpotusqptm wtwtrq	pwsw	qsuqw	tvpq	sYDEBAsw tD\U tQ^ZD]P\@[WZE	8F@_XP^W
R	 V	TWQPU
QpWGQYH[SQ^H[WSurwppwp 	tpq	sn[nw
uwpspwu
rsvwsp mustsps	m wtu	pw	sst	s 	u
ttpsqYFFBCq ttE\W vQ_XD_S\B[VXE8D@^ZP\RWWWTS
Q TQWWrQZY\PXC[UZD\\tptrpus tpsqnYmuuwpqputpqvuppow	qwrpq m tvtru
sstsw	wtprsZFDBBs vvE_W wS_ZG_Q\CYVZF	8EB^XS\
TUVS  Q
	 WTQ
TT rVGR[I[S]VW_X^\USTurwppwp 	tpq	sn[nw
uwpspwu
rsvwsp mustsps m    t wwtprswpupswp t	
	uwpqpXEFBApt vF]T tS\YE\S\@YUYD88