D]WBCWG]Vy{sV{]tZj{{{ZwI~{|I}Q|Y{BsQsV{ssXio^Z{Z]X~RcX~q]Vy{sV{]ZGScX}YxDj``Zkg
Djpd[S`DSAGQ]QX|y]V{ssVyU^Z{Z]XjUghdQHiRgE`Zik|ZV\|ox\hw{E}ltX|JtX}BsJxYyQEz{ssVy{xDhhcXQxQI{BsQsV{ssXStSs{yQ[PwtKS
^\Wc
X|y]V{ssVyVpGQ^cXQ{|tX|y]V{ssVyVpK{Z]XdSt`csI}lgVZsH}kF}sH}ksF|t]F}k{BqYsVy{sXVwJKyR]XVwJKyQEz{ssVy{xWhp]yR]XP]Djk{BqYsVy{sXVY{yR{Xq^:N_TAC]E^UyqpWq_wYjqxqXhJ|XxIvK}[Huvd[|s^WqqpUy_w@bqxyXh q[FyyqpWqq{]R qX^[i Y@Z_wGjjUJt_ci E[Z\|GR{^q[FyyqpWqq{BjqxqXti_hJaX`|f]Za_dF~v|IaK~fc\tfk[j_wZvHkY~f`v[xAs[pWqqp[R_g qX^[T|Yts^UyqpWq\sZTuVYw[xDjjwaeFDy[F{qqpUyq{GZ{yX^Yvv`Hy[F{qqpUyq{G[KxyY`jwdU}ftqvxE}XtDuvVF}XtWuv`}vtYts^UyqpWq\cASKxq\cASKxC{[pUyqpY\z]Ejaxq_DR_dYts^UyqpWq\h[[xIqUA:D\UKAWF__{rsW{\vShr{{[i@~[{I|H	|HHeyQ~p]W{rq_{\t@hry{[k {XGs{rsW{rzWP| {[_Qk\dEhijNPvdEkeMhv`EQHMhicY~p__{rsW{\\S{[]Yhei
uw}e}L[ kb }uk~eW|fkDh[a}ewk}Ah[p\{XGs{rsW{rzMhicY}XzQH{CqXq_{rsYQvvSr{{X	QVf^Chv\MhH
Y~p__{rsW{_rNQ_cY}Xy|uY~p__{rsW{_rB{[]YfZ	}`bsHKq_[sIb O}rIbqO|u]GbyKqXsW{rqQVvJJ{[_QVvJJ{XGs{rsW{rzWip\{[_QP\EhbyKqXsW{rqQVX{{[yQq_8G]]ABTGWUxqqUx]~YkqyxZaJ}XyKI|[HIqAr[qUxsy[he\YxZW[Xa[}qWUxqqUx]PDRa[~YrR\fPwbSu^RuGkzfXPjGRKDR][[}s_UxsyUx_\YxZW[|v~X|a~uiFkdv[ha kdyJ}fXX|ZuF|fiHdaHkfekZvYx[GyxsyUxqzGkhi[~[zRIqAr[qUxsy[RuvPsqx[	DR]ZSefGUs [}s_UxsyUx\rDR^i[~[ytu[}s_UxsyUx\rHxZW[eY	wccyJ|fuU|ZyK|a E~sK|aqEtWE|ayArYyUxqq[Uw@HxX_[Uw@Hx[GyxsyUxqzThz^xX_[S]GkayArYyUxqq[UYqxXy[r^;D]WBCWG]Vy{sV{]tZj{{{ZkI|R{H|I}QI|J{X|y]V{ssVyUtAhs{yRk{YEzy{sV{sx^R|{Z]XT
dXhwtG|U`ZP^DRUd{YEzy{sV{sxAj{{{]KiRkHhwxZ|lQK|gkE~w}c}B^Y~dp[~R`[|wd]}lxZkY{BsQsV{ssXRUd{Z]XTX~q]Vy{sV{^pYTUX}Y{Gi
EPgdHi
gG{YEzy{sV{sxFRx{Z]X~|cK{YEzy{sV{sxFSA{{[ab}gVdwy|{FZwE}|UEZwV}|ctwX|y]V{ssVyV`BQI{yV`BQI{BsQsV{ssXTp^Fhc{yUGP]gX|y]V{ssVyVkX}Y{Hy_B8F^TCKQWU  TS
	  UPR
SW 	QUxJXPE\WIT^[@HBD[^^\^\UBU[GC[DKDTAFIBTLQAXWPT]@eK@W^W\TWZTPRTS	USQPoW	QR^TS WRPTqoU 	SP]
PS	WWRQ	YTZW	QSUQ
W TVPR	SYDLBBS^TD\U WQ^ZD]Y\C[WZE	8G^UAB
SVTZW

 	TPSR	 SqSP[_SXG\QV@_\T\S@H@L[^\\^^]BWSGCYLKF\ADABTDQAPWPVU@eIHW\_\TWRTRZTSWSSPmWSTRQQoW	QYT
PZWVSSPU	SW SST	S	U	]TPSQPFEBCQ WTEUW VQ_XM_P\B[VXL8D@^ZY\V TPSWWZTUS	U rV_UU\U_]WRTRZTSWSSPmWSTRQQoW	QYT
PZWVSSPU	SW SST	S	U	]TPSQPFEBCQ WTEUW VQ_XM_P\B[VXL8F^TCKQSU
V	 UP	S  S Tx_X^[U^WWVS
W_QBKADQ]_^]_UATQE@XDAE^CEIHWFSBX]SUWBfH@]_]^W]PVSRWQ 	TPRSnU	PWQSSn]

PQW	RRTTPRSWPUYPWY T	
 	U^SQPXLFAAP
T VF]]TS\YEUS_@YUYD;D\WBCWRZ T
		 WRSV  STPp[ZX\QZC[TUVQCK@FX_V_]^WC]QD@YFHL^BDKAUFRBZTQ\WCfIBTV]_WTPWRPUP ]PSQgTYWSSRmU 	SP]
PS	WWRQ[TZW	QSUQ
W TVPR	SYDLBBS^TD\U WQ^ZD]Y\C[WZE	8G^UAB
PVRSZ
	T	TP
U  P	SqWUWV_UE[W_SJKAFY]_V]_WATSM@XFIE\KEK@WD[BZUSUUJfHBU__VWUR^SPWY 	TPR	Sn]PW	QQ[nU
PSW	ZP	TVPR	SUP]
QPWQ 		T
 WVSSPZDFACPT^F_UV[\YG]S_BQUYF	;FTWBA
 WSQ 
	 UZ	W 	ZrT]VU\]VWQW
U\RBABE[_\^W\TCWREJ[EKF]CFHBUESHYWQVTBlKAW\^^]WSVPSUQ
WZQQmUSS]T		W	TRmW	SPU
RSWWZQQTRU	SS]SW	TTPRSYFDBBS VVL\W WSVZD_Q\CY_ZE	8G\]AB V]S 
TR
TRqU]WV]]VC
W_QBKADQ]_^]_UATQE@XDAE^CEIHWFSBX]SUWBfH@]_]^W]PVSRWQ 	TPRSnURPWV
	TWRng`T
UWPSPTU
RPVWZP m 
 V^ UTR[SWPT
PQUP  ]
WWRQ	YZEF@AYT WD_TTR^PG\S^@XWPF:D\UKAWF s{rsYVXy{r{I{XGvqXsW{_rB{[]W{DUGeY_Tc _]@\^T_jYpCD[ GbtV^}j][@hH]Az@Uk`ND{B_VybOQK]F~aMPfgFkWVfXP_zHhZ }e[Q~p{{rqQkf`[{[__{\VDhfTLhb^kbyKv`]W{rzOPx {[__{[c HyKv`]W{rzHhr{{ry@|[pZhezRr}faA~ewHhfyLkfd]H 	|[sGu}[dYkfiQ~p{{rqQkf^[{[__{[wI{XGvqXsW{_~RWb{{rzPVi`F{XGvqXsW{\TVr{{rzQH{Cv`__{rx WirT{[]W{\NP\gY~p s{rsYSv	BVr{{rzVPfd^PfeMhwY~p s{rsYQvvSr{{ryNW_VhQyboWvUF{XGvqXsW{_bKQH{{rzPyY~p s{rsYQH{[]W{Xyvq_8G]]ABTGyxqq[UYqxqyKxYO|r[qUx^zHxX_UxE]Dg[\Uk
\^B_V^\ iQz@GYDcyUc_I^S{`ifISPxjRz}}I}_^}vGPzfFhgKPeT]UtSx[G|rYyUx_vYksqxqz[Pg\HUjyGha[}s yxsy[Ru	KUsqxqytu[}s yxsy[Pea[~Yy[fbYtP[| eF~tT_a J|gn[}euiFfiE|tyHvy h]jXx[G|rYyUx_vBksqxqyJ|YqAuc_UxsrHh[[~Yy[hjfSIqAuc_UxsrGkja[~Yy[U}[}qyxqq[UxTEkayxsrGS ^xYO|r[qUx]PDRa[~Yy[h_\\RnK}_~_xYO|r[qUx^zZUuW[~Yy[}T`kgbX}IqAuc_UxsrSz}[~Yy[UuHHxYO|r[qUx^vGPayxsq[uc@;DJ][S^Q	 T PTPZ	RT\QpFC_L@^]^UR^SPWY 	TPR	Sn]VP	W	PR\nU
PSW	ZP	UP]
QPWQ 		T
 WVSSPUTR[SXFE@KS W
TE]W^Q_ZE_P^J[VZD:N^TACYSSU 
	
 ]PW UpTDSSJXS_TT^P]_UUP
U\RBABE[_\^W\TCWREJ[EKF]CFHBUESHYWQVTBlKAW\^^]WSVPSUQ
WZQQmE_SK^mmU 	SP]
PS	WWRQ	YTZW	QSUQ
W TVPR	SYDLBBS^TD\U WQ^ZD]Y\C[WZE	8G^UAB
	TP

	VU	TP    PUqVMQZJYXX^H[_UQW
U\RBABE[_\^W\TCWREJ[EKF]CFHBUESHYWQVTBlKAW\^^]WSVPSUQ
WZQQmBUWG]mmU 	SP]
PS	W	Q
U
SWPPTRU^SQP]SWSQTSW		UTR[SXFE@KS W
TE]W^Q_ZE_P^J[VZD:L@^XQ\	UYWV[QURWUTVSU SUVrWE[YI[Z[_@Q\VWSUR^SPWY 	TPR	SnC]]D^o n]

PQW	RRTTPRSWPUYPWY T	
 	U^SQPXLFAAP
T VF]]TS\YEUS_@YUYD;D\WBCTQ^PW  WR	Z 	Vp@[SG^VQW_SJKAFY]_V]_WATSM@XFIE\KEK@WD[BZUSUUJfHBU__VWUR^SPWY 	TPR	SnC]]D^on]

PQW	RRTTPRSWPUYPWY T	
 	U^SQPXLFAAP
T VF]]TS\YEUS_@YUYD;8