D]WBBWG]VxqrV{]tZkqz{ZwIq|II|vjDdgIx[Dz{ssVxqyYSgcX~[z|s{Br[rV{ssXPu
KVs{x\W]k]`YSKZhwK}_]Vs{Br[rV{ssXPebX}Y{ |Xj |dkK~aZhgc}fb gwE~v~hs~frht`X|XP dwX}s\V{ssVx_]Vs{x\WK{YEzxqrV{sxFhja^{Z]X} aHhh|K}KzBqYsVxqrXQwHUqz{Zc|KzBqYsVxqrXQxX~[y~f `wxvvI|IsH|vzI~dwH}f~I{t{F~XrI{YEzxqrV{sxSz~X}YxSz~X~q]VxqrV{^`RufX}YxDS ]{YEzxqrV{sxxX\XY{zWc8F_TBA	UE^V{ppUy_wZhpxyXtI|p~K|JJvtX~r^UyqpV{^wBjqx{Yhy[Fz{ppUyq{^P yX^XkYBR_wDhkUH|_c kEYR\|DP {\y[Fz{ppUyq{AhpxyX|H|gU[}e`~gs_}XtE|wRH}K Y^g[|f`K|^hKi_w[hdt }KxBqZpUyqpXP^gyX^XV |[|s^V{ppUy\sYVtV[[xGQ cKie]_S{`Dy[Fz{ppUyq{FP {yX^X|w`Hy[Fz{ppUyq{FQJxyYa`vdU}ft{wxE}XtEgxF}HtVYp}vtX~r^UyqpV{]cASKx{]cASKxBqZpUyqpXV{]Ejax{^DR_dX~r^UyqpV{]h[[xH{TA:D\TA@WF^UzrsW{\wYir{{[hJ[{I|HH|r|rxApXsW{rp[jf^[{[^[}[cY~p^UzrsW{\YDPcY}X{P_d SvkQv\Q|GiydZScGPHFQ\R[p]W{rpUz\^[{[^[~KgkeZ }fgD|uRJ~X kKVf{}upF~ekkf`HiuUH|eY_zXE{{rpUzrxEhi`[|XxQHxApXsW{rp[Pvt SrxzXCP@H{CqXpUzrsYQvKWr{{[`~H{CqXpUzrsYQy|[|XxfctzuwHbpK~u{H~etKeH{uxE|[sH{XFyzrsW{r{QyY}X{QyY~p^UzrsW{_cPvgY}X{GQ\{XFyzrsW{r{ z[]YXxyU`8G\W@BTF]TxqqUx\tXkqyx[kK}XyKH|qJ~e{Z}s_UxrsTx_vBkr{xXixXExxqqUxrx\S~x[]Zh_fGkihESufGhgFkubGRHFkja[}p]TxqqUx\^XxX_[|KfjZ~eQGhH~[HkfT_}eZ[kXeFh[p_XevxXkvv[xXExxqqUxrxFkja[~Xx RKyArXsTxqq[RvtPqyxXDR_fHkixka[}p]TxqqUx_pER\a[~X{v}[}p]TxqqUx_pIxX_[eZvcaqJ|KsT|XqK|bK|[ H|bsJ|v_E|b{@r[qUxrsZUuHHx[]ZUuHHxXExxqqUxrxTjr^x[]ZS_	Gkb{@r[qUxrsZU[yx[{Zr\ ;G_VBA
TE\V{ssVx_uZhs{xXvI|sKItQD|fz{YEzxqrV{sxYPebX}Y{qzBqYsVxqrXSwKUqz{]]UuaYPIZUe}ChwK}_
HhI{Br[rV{ssXPebX}Y{kfy]kdQF|K}dk}fbhgcE~fy\cY|HWXkxX~ufIkZcX}s\V{ssVx_]Vs{x\WK{YEzxqrV{sxFhja^{Z]X} AhZ}KzBqYsVxqrXQwHUqz{Zc|KzBqYsVxqrXQxX~[y~f `wxvvI|csH|vzI~dwH}f~I{t{F~XrI{YEzxqrV{sxSz~X}YxSz~X~q]VxqrV{^`RufX}YxDS ]{YEzxqrV{sxxX\XY{zWc8F^TBA	QWT
TS
		
 UPS RW 	QTrKXPE\VC	T_QAHBD[^_]^\UBTQFC[DKE^@FIBTFPAXWPUWAeK@W_]]TWPUPRTR	TSQPnV	QSTTS
WSQTqoT
	SPWPSVWRQSTPW	PRUP W
TWQR	SYEFCBSTTD\TWQ^ZD\S]C[WZE9G^UABSVTPV

 TPSS SqRZZ_SXG\P\A_\T\S@HAFZ^\\^_WBWSGCXFJF\AEKCTDQAZVPVU@eHBV\_\TVRTSPTS
WSR
PmWST
RQQnV	PST
PP
WVSR
PUSW
RSTR	T	WUPSPZGEBCPWTE_V VQ_YG^P\B[VYF
8D@^[S]V	TPRWWP U US	T
sV_UU\T^]VRTSPTS
WSR
PmWST
RQQnV	PST
PP
WVSR
PUSW
RSTR	T	WUPSPZGEBCPWTE_V VQ_YG^P\B[VYF
8F^TBA	QST

W UPR  S Ur^X^[U^V]VS
V_QBKAE[\_^]_T@TQE@XEKE^CEHBVFSBYWRUWBfHAW_]^WWPVSSVQ TPRRnUPWPSSnW
PPV	RSTTPRRWQU	SPWST 	TTSQPYFGAAP U VF\WTS\YD_R_@YUYE
;D\WBBWSPT
	 WRSW
 STPqQ[X\QZCQUT\PCK@FX^\_]^WBWPD@YFHF_BDKATGRBZTPVVCfIBT\\_WTQWRPTP WPSPmTSWRRRmT
	SPWPSVWRQ	QTPW	PRUP W
TWQR	SYEFCBSTTD\TWQ^ZD\S]C[WZE9G^UABPVRRP
	TTP
T P	SqV_VV_UEZW_R@JAFY]_\\_WATRGAXFIE]AEK@WEQCZUSUT@gHBU_^\VUSTSPWS	TQR	SnWPV	QPQnU
	PSW	PP	TWQR	STPW
QPVQ T
  WVSR
PZDFAB PTTG_UWQ]YG]S_C[TYF	;G^VBA

VSQ
	 TP	W P
rT]VTV\VWQWU\RCKCE[_\_]]TCWRD@ZEKF]BGHBUERBYWQVTCfJAW\^_WWSWQSUP WPPQmTSSWT	V	TSlW	RPU
SSWWPPQT
RT	SSW
S VTTPRRYFDBBR VWF\W WR\[D_Q\CXU[E	8G]W@B WWS	
TSTSqU]WV\WVC
V_QBKAE[\_^]_T@TQE@XEKE^CEHBVFSBYWRUWBfHAW_]^WWPVSSVQ TPRRnUSPWW
	T
WRnfjT
UWPRQTU
SPVWP
P m  VTUTSQSWPTPQTP  W

VWRQS[EF@AST WE^TTR_ZF\S^@XVZG:D\TA@WFyzrsYVXxzr{I{XF|pXsW{_sHz[]W{DTFeY_Tb
^]@\_^^jXzBD[ Gbu\_}j][@iB\Az@UkaDE{B_VycEPK]F~`GQfgFk]WfXP_{BiZ }eZ[p{{rp[jf`[{[^Uz\VDhfUFib^kbxAw`]W{r{EQx {[^Uz[c HxAw`]W{r{Bir{{rxJ}[pZhe{X~r}f`KewHhfxFjfd]H}[sGu|~[dYkfh[p{{rp[jf^[{[^Uz[wI{XF|pXsW{_XVb{{r{ZWi`F{XF|pXsW{\^Wr{{r{PH{Cv`^Uzrx Wis^z[]W{\DQ\gY~pyzrsYSvHWr{{r{\Qfd^PfdGiwY~pyzrsYQvwRr{{rxDV_VhQyceVvUF{XF|pXsW{_cAPH{{r{QyY~pyzrsYQBz[]W{Xx|p_8G\W@BTFxxqq[UX{xqyKxXE}r[qUx_pIxX_UxDWDg[\Ta\^B_\_\ i[{@GYDbsTc^C_S{`hugISPy`Rz}}H}_^}|FPzfFhfJPeT]UuYx[G|rXsTx_vYkr{xqz[PfVIUjyGhkZ}s yxrsZRu	KUr{xqyuZ}s yxrsZPea[~XsZfbYuZZ| eF~u^^a J|fdZ}eucGfiE|usIvy h\`Yx[G|rXsTx_vBkr{xqyJ|X{@uc_UxrxIh[[~XsZhjfSH{@uc_UxrxFkja[~XsZU}[}pxxqq[Uy^DkayxrxFS ^xXE}r[qUx\ZERa[~XsZh_\\RdJ}_~_xXE}r[qUx_p[UuW[~XsZ}T`jgbX}H{@uc_UxrxSz}[~XsZUuHHxXE}r[qUx_|FPayxr{Zuc@;E@\[S^
QT PTPP	RUVQpFC^FA^]^ USTSPWS	TQR	SnW
VPV	PSV nU
	PSW	PP	TPW
QPVQ T
  WVSR
PUTSQSXFEAAS W UE]WTP_ZE_P_@ZVZD;D_TACSRSU	
  WQW  
UpTDRYKXS_TT_Z\_UUPU\RCKCE[_\_]]TCWRD@ZEKF]BGHBUERBYWQVTCfJAW\^_WWSWQSUP WPPQmE^YJ^mmT
	SPWPSVWRQSTPW	PRUP W
TWQR	SYEFCBSTTD\TWQ^ZD\S]C[WZE9G^UAB	TP	 
	VUTP  PUqWGPZJYXX_BZ_UQWU\RCKCE[_\_]]TCWRD@ZEKF]BGHBUERBYWQVTCfJAW\^_WWSWQSUP WPPQmBT]F]mmT
	SPWPSW	PU	 SWQPT
RTTSQPWSVSPTSW		 
UTSQSXFEAAS W UE]WTP_ZE_P_@ZVZD;FA^XQ\ 	TSWVQPURWUTVST
RUVrWDQXI[Z[_A[]VWS USTSPWS	TQR	SnBW\D^o nW
PPV	RSTTPRRWQU	SPWST 	TTSQPYFGAAP U VF\WTS\YD_R_@YUYE
;D\WBBTPTPW WR	P	VqJZSG^VPW_R@JAFY]_\\_WATRGAXFIE]AEK@WEQCZUSUT@gHBU_^\VUSTSPWS	TQR	SnBW\D^onW
PPV	RSTTPRRWQU	SPWST 	TTSQPYFGAAP U VF\WTS\YD_R_@YUYE
;8