D]WCBWG]WxqpV{]t[kqx{Z}XxK|YH|[ }c{Cr[pV{ssYhe]Z{Z]YX`X~q]WxqpV{]ZFR`X}YxZPu]Dkg\U|DhxdZP cDQIFR_RX~q]WxqpV{]^[xX^X}g`X|fs\ZgDke`Ihc ux~g{~uhE|tQHHx|H|Xd{YE{xqpV{sxEkj`X}YxRKxBqYsWxqpXQwt Pqx{YDS c]QcFx[Fz{ssWxq{FPx xX^X|tcJx[Fz{ssWxq{FQI{xYa`ugW|ft{t{G|XpEd{D|ftVZs|HtX~q]WxqpV{^`CRKx{^`CRKxBqYsWxqpXVx^Gkax{]FS_dX~q]WxqpV{^kY~[xH{WB	;D\TACWF^UyqqV{\wYjqy{[tJ~qrJ~HiDexy[Gz{rpUyqzYSf`[[y|rxAs[qV{rp[Qu	KVrxy\bHVic]j\fBP\gHSKZVf@juK~\KjKyBqXpUyqqXSf`[[y}fhiXWH [}Hy~e`~viE}vdKia KhvkZ}v~\e{Z~eyX~p^UyqqV{\^Tqy{_UHy[Gz{rpUyqzFkic]yX_X~BR_SG{XFyyqqV{r{ERz{[^[~vaK{XFyyqqV{r{ESKy{ZbbweVetJyvyF[pF}fyEetU}XqKt[|s_V{rpUy\bBQHxy\bBQHxAs[qV{rp[Tz\Fhbxy_GP\d[|s_V{rpUy\iX}XxKyU@8G\WCA
TF]W{spUx\t[hsxx[~ZxHXHsH|b{CqYpUxrsYkg]Yx[]Y|Z`[}p]W{spUx\ZFQ`[~XxEhhcYhf
EhxgXP`EQIDR\QY~q^UxrsW{]]Yx[]YtU^~f|Xh]|FK^\sf~d]^~eUD`uch]hk[`]{YFyxrsW{s{GkicY}Y{RH{CqYpUxrsYQwwPr{{YXUix@PgH}H{CqYpUxrsYQwKUr{{Z`|H{CqYpUxrsYQx|[~Xxf ctxuwH|cpK|u{G~dtK}ewH{txE~[H{YFyxrsW{s{SyY}Y{SyY~q^UxrsW{^cRvgY}Y{GS\{YFyxrsW{s{ x[]YYxyW`8F\WBBUF]VxqqUy\tZkqyy[{H|qJ~u{D|fS|[x[GyyrsVxqzZQfcX~[y ~r{Br[qUyrsXPu	HTr{x\T^i\`YSKYTf|CkuH|\HkKyAsXsVxqq[QfcX~[y}Hi}r]f}|e`]heiFv|q }[Z]v}EjvckXu[|p]VxqqUy\]Uqyy_VKx[GyyrsVxqzEii`^xX_[||Ueb^R_cGx[GyyrsVxqzERxxX_[~ucKx[GyyrsVxqzESH{xYbbtgV|fuHyu{F|XqF}e{E|fuU}[s|Hu[|p]VxqqUy_`BRKyy_`BRKyAsXsVxqq[Ty^Fkayy\GS_e[|p]VxqqUy_kX~[yKyVB;D]WCBWG]WxqpV{]t[kqx{ZwE|fR~ZU}XxII{Cr[pV{ssYhe]Z{Z]YX`X~q]WxqpV{]ZFR`X}YxYke]V]Cke[hc[kuK~]\UqxBqYsWxqpXSgcY~[xKkZc keYkYhfRI~dc_|E}tdZka |d^Xh t]~vpX~q]WxqpV{]\Uqx{^VJx[Fz{ssWxq{Fkh`_xX^X~xFS`G{YE{xqpV{sxGS{{Z]Yv`K{YE{xqpV{sxGRKx{[`cwdVdGxvxFZsD|fxEdwW|XpJwY}s^V{ssWx\cBQI{x\cBQI{Cr[pV{ssYUz]Fhc{x_GP]gY}s^V{ssWx\hX}Y{IxUA8F_UBAUE_V{rpUy_vZhrxyXuDeR|X[K~[xE}qyBqXpUyqqXkf]YyX_X|[`[|s_V{rpUy_XGQ`[[zhf{YieDhvcGSKDhi`[|s_V{rpUy_\Z{[^[faKY^~v}E|\gYiK hvxJ|f[h[hF} ikedH}fy }u|y[Gz{rpUyqzDhi`[[zQHxAs[qV{rp[SuvSrxy[	XVi{|KyBqXpUyqqXQvKTqy{[`}KyBqXpUyqqXQy|[[z~fctyvuI|HpK}vyF~etK|fuI{uxEX}I{XFyyqqV{r{Rz}X}X{Rz}X~p^UyqqV{_cSueX}X{GR ]{XFyyqqV{r{ yX_XXxyVc8EC]ZS^TPSVSWT  TQUPUpWGRZJYPQ^HXUQwrwssup wprqu	w	tswrnYnwuupqswwpstusrowqt	qpq	n    w vwpu	pqtp w
	twrqsYEF@Ast vE\TtS_ZD\S^@YVZE:FB^XP_P	 QRTUSRTWT TS	SPqQX[^PZCXUXF\^tstprws	trqst
vwrtsm[mt	v wssrtt	rpvtp	pnupwrss o t  w t	st
qsw	q u	wvprqZDEBBqwwF_U wR\XG]P\CXUXF	8EC]ZS^V R S
V T Vp\[]ZU_U_UPwpvrstq tpspwwuswpouqtqssmt

spwrs utsqswpu	pqtp w
	twrqsYEF@Ast vE\TtS_ZD\S^@YVZE:FB^XP_P	TRSTS	UPSUUTS V	SqTEQ[I[P^TU\X^\VUAwrwssup wprqu	w	tswrnt	ptssr mw
squsrttsqqwrtspts w	 utsqsXFDAAs v wE]WtR_ZE_Q_@XVZD	;FC^XQ\
TSVQ
P		 U Q
UWWWVrVDQZI[Z[^A[_VWS
ustspws	usr	st	t wpu	smBT]E^omt

spwrs utsqswpu	pqtp w
	twrqsYEF@Ast vE\TtS_ZD\S^@YVZE:FB^XP_QR		PSWVUT WT 	qTEQ[I[[X\@[^VRWtrtsptswrrpu	twptrmCT]D]mmt
	sqwpr wp	u	 swspurttsqqwrtspts w	 utsqsXFDAAs v wE]WtR_ZE_Q_@XVZD	;FC^XQ\
TVQWT	W	WQSTQ Q QrVDQZI[Q]VT\Y^\WDZuswrptp 	wps	ptttpusnupwrssow	
qptrsttpspw	su	spw	su	 	ttsqqYFEAAq w vF\WtS\XD_P_@YUXE;FB]ZP\UQQRUSV 	PW	 
RQrIXPE\VCtstprws	trqst
vwrtsmwspvustppurmwppusswvprqurt	ssws	 tttpspYFDBCp vwF\W vR\YD_Q\BXUYE	8F\WBBUFzxqq[TX{xqyKyXEr[qUy_pKxX_UyDWDg[]Ta	\GQb[~a\_\j\_yGJ}g^YB^DzGG{J\\}j\XChB_AzAVh`DF{B^UzbESK]G}aGRfgGh ]TfYS\zBjZ~f[[|pzxqq[if`ZxX_Uy\|^PeZQy{Dh i[|pzxqq[SvHUqyyr{v}[|pzxqq[QfcX~[q[~\dZ|_uJjfE|HiErI|ef[|e^YhXiF~ekF|vqH}e|X_bYyXEr[qUy\tAkqyyr{[yAt`]VxqzGjicX~[q[TX}s yyrsXUz\Ejb{xqzGR]x[G|sXsVx_XDScX~[q[iZAS_v]SX[k[yAt`]VxqzEii`^xX_UyXbUgz~dd^ba[|pzxqq[TvJKxX_Uy_`BRKy|s_;D]WCBWG{xqpXVY{xqxH{YE~r[pV{^pJxX^V{EWDfX_Ua\GPaYa\A\\\\j[x@GfAcv^]~i\[Aj@^ByAUjbFGxA^Vx`GRH^G~cESedGk_Ue YP^x@k Y}dYY}sz{ssYhecZ{Z]Wx_IAVx`Ckj QYDSqxBva]Wxq{FPx xX^V{Zc |KxBva]Wxq{Ahs{xqxhgd[hexI|YJXh~dwHkexEkgtX|K |ZsG|v|I|Zh[_hX~q{xqpXkg^[xX^V{ZwIx[FqYsWx_]Vs{xq{QI{Cuc^V{sx Tjs]{Z]Wx_GP]gY}sz{ssYPuKVs{xq{BSh` SugKVh{ESeFX~q{xqpXQwt Pqx{s{FhH]eS RgVG{YE~r[pV{^`CRKx{sx Sz|XvaB	;D\TACWFyyqqXVXxyqyH{XF|s[qV{_sHyX_V{DTEgX_Tb
]GQaY~b]A\_^] jXzAGgAbpUc ^@^S{chvfIPSycSz}~H|_]~GQzfEkfKQeT^VuZy[GqXpUy_vZhrxyqzXSfUHTjyDkh[|s z{rp[Su	HVrxyqy|u|[|s z{rp[QeaX}Xp[iHaH`ifaEKh ~K Ifg[|fWFf|F~fiFupH}fihuU[y[GqXpUy_vAhrxyqyIXxAtc_V{r{GjjaX}Xp[T}X~pyyqqXVy]Ejay{r{GR ]{XF|s[qV{\YDSaX}Xp[i_\_QgK|_~\{XF|s[qV{_sZTuWX}Xp[|eFVgwiX\}~HxAtc_V{r{Rz}X}Xp[TuHK{VyVc8G\WCA
TF{{sp[UX{{sxKxXE~qYpUx_pJ{Z^UxDWGf[\Ta_EPbZ~a_j^ aAH}aD|\EiKdVZpK|r
HY	KD_ETgETS{BU\[ZT_rY
\\Z VxsH~X
FVsFkbZP]YSftEQ]]\Pyc}cxAu`]W{s{ZkvcY}Yp[Tv^YVgGhkY~qyxrsYQwKUr{{sxuY~qyxrsYSg`[~XsY|]tH~eQJhgdF|KQ |sJ|fdY~g{X|vgD|dhE|usJdkXke|[{YF|rXsW{]wBkr{{sxJ|X{Cva^UxrxEhh`[~XsYV|[}p{{sp[Uy^GhcxxrxEP^xXE~qYpUx\ZFQ`[~XsYWw][UfEkh[}p{{sp[Rvt Ssxxr{F`t]ueJGWw|DxXE~qYpUx_`CQIxxrx Px|[u`B	8DC][P\
PVW 	STT	rD@_E@^_\wrwssup wprqu	w	tswrnt	tptrpumw
squsrwrtspts w	 utsqswvprqZDEBBqwwF_U wR\XG]P\CXUXF	8EC]ZS^QQ	SQU SSQRVT SQpWGRZJYS_WW_Y]^UVStstprws	trqst
vwrtsmD][H]n mw
squsrttsqqwrtspts w	 utsqsXFDAAs v wE]WtR_ZE_Q_@XVZD	;FC^XQ\
	
QVS WR 	SSTTTQrVDQZI[Q]VT\Y^\W]]uswrptp 	wps	ptttpusnYou	u	tpqpuw	pqutrsnw		upqswo t  w uwsr	stpw
qqtq t
wvrrpZDF@BpttE_UwQ_YG]S^C[VYF	:E@^[S^SWVUPQWP TTSVRVSpTERYIXS_TU_Z^_UQVwpwprup	tsqqw
v	trwpnZmw
u uprrwt
sstwp	rmtsw	rpr m   v wwvprqurt	ssws	 tttpspYFDBCp vwF\W vR\YD_Q\BXUYE	8: