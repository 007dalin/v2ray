D]WBCWG]Vyzq_{]tZjzy{ZwI~z|I}zA|tgX|x__{ssVyTvHhs{ySi{YEzyzq_{sx^R
~{Z]XTfQhwtG|TbSP^DRTf{YEzyzq_{sxAjzy{ZQF}Si
}ggI|my
kE~~uhYY}my@~dkH~mW	|tc~SW}c{BsPq_{ssXRTf{Z]XT
}Q~q]Vyzq_{^pYT~WQ}Y{GT~\VSxcGyPGs{ssVyzzOPxyS_Q|tcKyPGs{ssVyzzOQI{yRh`ugV}mu{t{F}SuLtYE}}W_tw}CuQ~q]Vyzq_{^`BS@y{^`BS@yKqYsVyzqQVx^Fjjy{]GRTeQ~q]Vyzq_{^kXPyA{WB:O]]AC\GWUyqpWp]~YjqxpZaJ|XxIwI ~[pYOyyqpWpsrZQe`YvYq ~qxCzYyUyqpYXwHTqxp]r^R_g[@^R_\u]jYR\|E[]ny[F{psyUyq{@csqyX]]wdzY}f`ugifRDwtq }q Y`]aJ|ecXwJS~vw\wdaEjaxCzYyUyqpY[]nyX^Y]u[|s^WpsyUy\sX]w_[[xF]hvieFFpYOyyqpWpsrER{ pZW[~v`JpYOyyqpWpsrESKxp[bbwdWtduEyvxGtZ}F}vZDtt_U}vttJ}[|s^WpsyUy\cCZIqy\cCZIqAs[pWpsy[Tz]Gccqy_F[]m[|s^WpsyUy\hYvYqKyUA	3FUWCAUO]W{rq^yUt[hryyRkH~[y@~A}bA~BgY~p_^y{sW{\vIj{{{[i	yQE{{rq^y{x_P~	yR]YkXIRUtEhiTC|U`kDRRVEPzWyQE{{rq^y{x@hryyRkHkevSiU{G~eei
cD|u[AiAY}e}N|lx\h\jT~ltY}uqC~k{CqXq^y{sYP\f	yR]YV}P|y]W{rq^yVpXVvWPQ{FkHQS|@h_[OyQE{{rq^y{xGPz	yR]Y|uaCyQE{{rq^y{xGQHyyS``te^}lw{uyN}RwDu[M}|UWuu}BwY~p_^y{sW{_bJSA{{_bJSA{CqXq^y{sYVy\Njk{{\ORUgY~p_^y{sW{_iPQ{I{V@ :N_UAB
]E_UxsxWq_vYkspqXiJ}ZpIvKHIHuHy[}qVWqqqUx]@bqyxZ` q[GyxsxWqqz]Sw qX_[Uxs\uX_UgAEbj~H}]ka DYS^tEZz\xYN{qqqUxss@bqyxZRvezZ~wsZteuJZRDvuuH|IYafWH}dlwf[HJZJa a|spC{[qUxsxYZ_fxZVY\}[}qVWqqqUx^{X\uW[~YpFYeYUhw [\[DxYN{qqqUxssGZzxZVYvvaHxYN{qqqUxssG[Kyx[`jweU|d|HqvyE|Z|Duv[F|t^Wuvu|J|Yts_UxsxWq\bARIpq\bARIpC{[qUxsxY\z\Ekcpq_DS]lYts_UxsxWq\i[~YpIqU@;FTUKA
UN__{ssVyTvShs{ySu@|s~@Y~jyKqYsVyzqQkg^ZyS_Q|ZcX|x__{ssVyTXNQcXPzMhh`ZinMhxd[QbMQIGSTSQ~q]Vyzq_{]^ZyS_QJUI~n}A|ZUE}TuhciCiA~gwiSqLht^Yimq
tZ[}jS{YEzyzq_{sxDjaaQ}YxS@yKqYsVyzqQQwtQzy{YFST	MVg[QnvSgD|@yKqYsVyzqQQwHTzy{Zc}@yKqYsVyzqQQxXPzwf `wy}u@|csH}}y@~ds|mq{tsIS}@{YEzyzq_{sxRq}Q}YxRq}Q~q]Vyzq_{^`S~eQ}YxDRT{YEzyzq_{sxyS_QY{zVh8F^TCJ
QWU]S
		UPRQ^ 		QUyHQPE\WH
T^ZBABD[^^^W\UBUZEJ[DKDUCFIBTMSHXWPT\BlK@W^V^]W[VPRTQ
	UZQPoU QR_]SWRR]qoU SP\PS	U^RQ	X][W	QQUQWTVR[	SYDM@KS_
TD\U^Q^ZD]X^J[WZE	 :N^UAB
ZVT[U

 ]PSR SqSQYVSXG\QWB_\
]\S@H@MYW\\^^\KWSGCYMIF\AD@@]DQAQUYVU@eIIU\_\TURTR[]S 	WSS	YmW ST	[QQoU QX]
P[	WVSS	YU	ZWQST	Q
	U  \VPSQQDLBCQ^TETU VQ_XL]Y\B[VXM	8D@^ZX^VTPSWW[
T\S	Up__UU\U]TURTR[]S 	WSS	YmW ST	[QQoU QX]
P[	WVSS	YU	ZWQST	Q
	U  \VPSQQDLBCQ^TETU VQ_XL]Y\B[VXM	8F^TCJ
QSU 	
V	UP	Q 	 S Ty]Q^[U^WV_S
UVQBKADP_V^]_UC]QE@XD@L^CEIIUFSBX\Q\WBfH@\V]^W\PVSRUQ 	 ]PR QgU	YW SSSn\
PQU RR ]TPR QWRUXYWXT			U_ZQPXMDHAPV VF]\
TS\YETQV@YUYD 	2D\WBCWR[]
			WRSV		 
	STPpZXQ\QZCZVUWSJK@FX_WV]^WC\SM@YFHM\KDKAUD[BZTQ]UJfIBTW_VWTR^RPUY \PSQf]XWSQ[mU SP\PS	U^RQZ][W	QQUQWTVR[	SYDM@KS_
TD\U^Q^ZD]X^J[WZE	 :N^UAB
YVRS[
	T]P
U P	SqWTU__UE[W_SKIHFY]_W_VWATSLBQFIE\JLK@WDZ@ZUSUUKdABU__WUUR_ZPWX	TR[	Sn\PU	QQZgU
YSW	[P	TVR[	SUP\
QPUQ 	]
  WVSS	YZDFACYT_D_UVZ^PG]S_BPWPF	;FUUKA
UZQ  U[ W  	[	rT]VU]__WQW
U\RB@@L[_\^V^]CWREKYLKF]CDABUESIPWQVTBmIHW\^^\WSVRZUQW[SQmUZS\T		U	TRoW	QYU
RZWW[SQT	RU SS\	SU	
]TPR QPFDBB
Q VVMUW WSWXM_Q\CY^XL	8G\\CK V\ STRT	 R	xU]WV]\_C
UVQBKADP_V^]_UC]QE@XD@L^CEIIUFSBX\Q\WBfH@\V]^W\PVSRUQ 	 ]PR QgURPW T
	T	^Rnga]
U  WPSR]U
RYVW[	P m  V_UTRZSW PTYQU Y  \	
U^RQ	XXLF@AX
T WD]]TR^QEUS^@XWQD:D\UJCWF ry{sYVXyy{{I{XGwsQsW{_rCyR]W{DUEeY_Tc]T@\^U]jYqAM[ GbtW\tj][@hI_Hz@Uk`OFrB_VybNSB]F~aLRogFkVToXP_zIj
Z }e[P|y{{rqPio`[{[_^yUVDhfTMjk^kbyJti]W{rzNRx {[_^yRc HyJti]W{rzIj{{{ryA~RpZhezS}{}fa@|lwHhfyMiod]H ~RsGu}	}RdYkfiP|y{{rqPio^[{[_^yRwI{XGwsQsW{_~SUk{{rzQT``F{XGwsQsW{\UT{{{rz
SA{Cv`_^y{x WirUyR]W{\ORUgY~p ry{sYSv	CT{{{rzWRod^PfeLj
wY~p ry{sYQvv	Q{{{ryOUVVhQybnUUF{XGwsQsW{_bJSA{{rz	RpY~p ry{sYQIyR]W{XywsV8G]\CKTG	{qqq[UYpqqyKxYN~{[qUx^{JqX_UxE\Mg[\UjU^B_W\U iPxIGYDcxWc_H\S{`i~dISPxk [z}}I  t_^}wEYzfFhgIYeT]UtRq[G|rYxWq_vYkspqqz[Pg]J\jyGh`Yts yxsxY[u	KUspqqyttYts yxsxYYea[~YxYvfbYtQYu eF~tU]va J|goYteuhDvfiE|txJvvy h]kZq[G|rYxWq_vBkspqqyJ|YpC|c_UxssJa[[~YxYajfSIpC|c_UxssEbja[~YxY\}[}q	{qqq[UxUGbayxssEZ ^xYN~{[qUx]QF[a[~YxYa_\\RoIt_~_xYN~{[qUx^{X\uW[~YxYtT`ivgbX}IpC|c_Uxss Zz}[~YxY\uHHxYN~{[qUx^wEYayxspY|c@;DK_RS^	Q	T PTP[  RT]
QpFC_MBW]^UR_ZPWX	TR[	Sn\	VP	U	PR]gU
YSW	[P	UP\
QPUQ 	]
  WVSS	YUTRZSXFE@JS WVL]W_SVZE_P^KY_ZD:O\]ACXQZU  
 \RW  	\pTDSRHQS_TT^Q_VUUP
U\RB@@L[_\^V^]CWREKYLKF]CDABUESIPWQVTBmIHW\^^\WSVRZUQW[SQmE_RIWmmU SP\PS	U^RQ	X][W	QQUQWTVR[	SYDM@KS_
TD\U^Q^ZD]X^J[WZE	 :N^UAB
	TP 
	VU]P   PUqVLSSJYXX^IYVUQW
U\RB@@L[_\^V^]CWREKYLKF]CDABUESIPWQVTBmIHW\^^\WSVRZUQW[SQmBUVETmmU SP\PS	W	Q
UZW RPT	RU_ZQP\SUSQ]S W			UTRZSXFE@JS WVL]W_SVZE_P^KY_ZD:MBWXQ\ UX^VZS\RW\TVSUQ\VrWEZ[@[Z[_@P^_WSUR_ZPWX	TR[	SnC\_M^o n\
PQU RR ]TPR QWRUXYWXT			U_ZQPXMDHAPV VF]\
TS\YETQV@YUYD 	2D\WBCTQ_YW 	WR	[  

	VpAYZG^VQW_SKIHFY]_W_VWATSLBQFIE\JLK@WDZ@ZUSUUKdABU__WUUR_ZPWX	TR[	SnC\_M^on\
PQU RR ]TPR QWRUXYWXT			U_ZQPXMDHAPV VF]\
TS\YETQV@YUYD 	28