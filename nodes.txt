D]WCBWG]WxqpW{]t[kqx{ZwE|fR ~ZY }XxJ{YE{xqpW{sxXPe`Y}Y{qxCqYsWxqpYSwJUqx{]x\S_gPJ\S_\~]`[S\|EP]d x[F{{ssWxq{@hs{x_wYkZw hHY]~dkH~fpD|wIa YwJ}fdHk]hYkfgYdtY|qxCqYsWxqpYP]d xX^YVY}s^W{ssWx\sXVwUY~[xFkDh[	Y~q]WxqpW{^pFR\`Y}Y{ v|Y~q]WxqpW{^pJxX^Yf[ucapHJsW|XpIsH|[HssH~v^Jc{Cr[pW{ssYUuIJ{Z]YUuIJ{YE{xqpW{sx Tjs\{Z]YS_Ehc{Cr[pW{ssYU[x{Z{Yr\8F_UBAUE_V{rqUy_vZhryyXyHrJ~vyDeSH|XuK|HyAs[qV{rq[ie\Z{[_[~XaX~p_UyqqV{\XDSaX}XzXQu\Dkf^T}DhyfXQ bDQHDS_SX~p_UyqqV{\\YyX_Xe~X~vyIfiF} uI|b ~HiI~e\^fWEhuaH}fu |uaJ~fjZ{XGyyqqV{rzGjjaX}XzSKyBqXqUyqqXQvvQqy{X	ZSbGP\\HQqX~p_UyqqV{_rDS\aX}Xy~v}X~p_UyqqV{_rHyX_XfZ	wbaqIeiU}XqHr J}[ IrqJv_KbyAs[qV{rq[TuHK{[_[TuHK{XGyyqqV{rzUjr]{[_[R_	DhbyAs[qV{rq[T[y{[y[s\ 8G]WCA
TG]W{spUx]t[hsxxZwH|s|sH|J`GtYY~q^UxssW{]wBks{{ZhxYE{{spUxsx_PxZ]YVg[kwtF~]chF[P^|GSx^{YFyxssW{s{Bks{{]wZJsHhtY}gd[hdRFw`X|c [~dUJ~g|J~g{ hwt|tV]|YxArYsW{sp[S]d {Z^[UY~q^UxssW{^sZUwUY}YxDhEh{ZUxdCkhcBSF{YFyxssW{s{ESx {Z^[tcJ{YFyxssW{s{ERI{{[bcugWdtHxt{GZpF|d{DdpU|dUJt[}q]W{spUx^`CQIxx^`CQIxArYsW{sp[Ux^Ghcxx]FP]d[}q]W{spUx^kY}YxKxWB	8F\WBCUF]VyqqUy\tZjqyy[wI~q~HI}f}G}[Fy[GyyrsVyqzZQfcX[y ~r{Bs[qUyrsXQu	HTr{y\T^i\`YRKYjvK|_^Tr{Bs[qUyrsXQea[X{je}fi[ }KkF|faEiecEiXq~r vrZvx\~uyJ~K{X|s_UyrsVy_^Tr{y\THyXEzyqqUyrxFijb]y[]X|zDRvEGy[GyyrsVyqzERxyX_[~ucKy[GyyrsVyqzESH{yYbbtgV}fuyu{F}XqF}e{E}fqU}eU}Hu[|p]VyqqUy_`BSKyy_`BSKyAsXsVyqq[Ty^Fjayy\GR_e[|p]VyqqUy_kX[yKyVB:D]WCBWG]WxqpW{]t[kqx{ZwHq sHH`Edsx[F{{ssWxq{XSgcY~[x|s{Cr[pW{ssYPuJVs{x_\Vw`XSK[Vg|BkuJ~]IkKxCqYsWxqpYSgcY~[xdwHkXwZhs]XY\~d`ZXRDkZcGk[I}whYug]|{hfRY~q]WxqpW{]\Uqx{^VJx[F{{ssWxq{Gkh`_xX^Y~x\hjFP]tYSudF{YE{xqpW{sxGS{ {Z]Yv`J{YE{xqpW{sxGRKx{[`cwdWdwxvxGZsD|fxDdsW|fVJwY}s^W{ssWx\cCQI{x\cCQI{Cr[pW{ssYUz]Ghc{x_FP]gY}s^W{ssWx\hY}Y{IxUA	8F_UBAUE_V{rqUy_vZhryyXuI|r}qI|KaG}fSK{XGyyqqV{rzZQeaX}Xy ~qyBqXqUyqqXSv	HTqy{_bKTjb^h_fAR_fKQHYTe~ChvH|_	HhHyAs[qV{rq[QeaX}XzXjX[Hv}}[  |fe|fb[iFiXekH f\Xhvu~HeK}fu[|s_V{rqUy_]Vryy\TK{XGyyqqV{rzEijb^{[_[| fAVvX^S[X~p_UyqqV{_rDS\aX}Xy~v}X~p_UyqqV{_rHyX_XfZ	wbaqIeuU}XqHr J}[ IrqJv_KbyAs[qV{rq[TuHK{[_[TuHK{XGyyqqV{rzUjr]{[_[R_	DhbyAs[qV{rq[T[y{[y[s\ 8EB]ZS^TPSVSWT TQUPTpWGR[JYPQ^HXUQwrwsrup 	wprqu	v	trwrnYnwu upqrwwpstus	rowqt	qpq	o    w  vwpu	qqtq w
	tvrqsYDF@Ast vE\UtS_ZD]S^@YVZE	:FB^XP^P	 QRTUSSTWT TS	SPpQX[^PZCYUXF\^trtprws	trqsu
vwrtrm[mtv wssrttrpvup	pouqwrss ot  v t	su
qsw	qu		wvprqZDEBBqwvF_U wS\XG]P\CYUXF	8EB]ZS^	V RS
	V T Vp\[][U_U_UP
wpvrstq upspww usw	pouqt	qssmu

spwrsutsq	swpu	qqtq w
	tvrqsYDF@Ast vE\UtS_ZD]S^@YVZE	:FB^XP^PTRRTS	TPSUUUS V	SpTEQ[I[P_TU\X^\VUAwrwsrup 	wprqu	v	trwrnt	pussrmw
squsrttrqqwrtspus w	 utsq	sXFDAAs v wD]WtR^ZE_Q_@XWZD	;FC_XQ\
TRVQ
P	 UQ
UWVWVrVDQZH[Z[^A[_WWS
ustrpws	uss	stt wpu	smBU]E^omu

spwrsutsq	swpu	qqtq w
	tvrqsYDF@Ast vE\UtS_ZD]S^@YVZE	:FB^XP^QR	PSVVUT VT 	pTEQ[I[[Y\@[^VRVtrtspuswrrqu	t	wptrmCT]D\mmt
sqwpr wp	u	 rwspurttrqqwrtspus w	 utsq	sXFDAAs v wD]WtR^ZE_Q_@XWZD	;FC_XQ\
UVQWT	W 	WQSUQ QQrVDQZH[Q]VT\Y_\WDZusvrptq 	wps	pttupusouqwrssow	
qptrsutpspw	su	sqw	su		ttrqqYFE@Aq w vF\WtS\XD_P^@YUXE:FB]ZP\UQQRTSV 	PW	
RQrIYPE\VCtrtprws	trqsu
vwrtrmwspvurt	ppurmwpqusrwvprqurtssws	 t	utpspXFDBCp vwF]W vR\YE_Q\BXUYD	8F\WBCUFzyqq[TX{yqyKyXEs[qUy_pKyX_UyDWEg[]Ta	]GQb[~a]_\j\^yGJ}g^XB^DzGF{J\\}j\YChB_AzAWh`DF{B^TzbESK]G|aGRfgGi ]TfYR\zBjZf[[|pzyqq[if`ZyX_Uy\|^QeZQy{Di i[|pzyqq[SvHTqyyr{~v}[|pzyqq[QfcX[q[~\dZ}_uJjfE}HiErI}ef[|e^YiXiF~ekF}vqH}e|X~_bYyXEs[qUy\tAjqyyr{~[yAt`]VyqzGjicX[q[TX|s yyrsXTz\Ejb{yqzGR]y[G|sXsVy_XDScX[q[iZAR_v]SX[j[yAt`]VyqzEii`^yX_UyXbTgz~dd^ca[|pzyqq[TvJKyX_Uy_`BSKy|s_:D]WCBWG{xqpYVY{xqxI{YE~r[pW{^pJxX^W{EWDfY_Ua\GP`Ya\@\\\\j[x@GfAcv^]~i][Aj@^By@UjbFGxA_Vx`GRH^F~cESedFk_Ue XP^x@k Y }dYY}s{{ssYhec[{Z]Wx_I@Vx`CkjQYDSqxCva]Wxq{GPx xX^W{Zc |KxCva]Wxq{@hs{xqxhgd[hexH|YJXh~dwHkexDkgtX|K|ZsG|v|H|Zh[_hY~q{xqpYkg^[xX^W{ZwIx[F~qYsWx_\Vs{xq{QI{Cuc^W{sx Tjs\{Z]Wx_FP]gY}s{{ssYPuJVs{xq{CSh` SugJVh{ESeFY~q{xqpYQwt Pqx{s{FhH]dS RgVF{YE~r[pW{^`CRKx{sx Sz|YvaB	;D\UACWF yyqqXVXyyqyH{XG|s[qV{_rHyX_V{DUEgX_Tc
]GQaY~c]A\^^] jYzAGgAbqUc ^A^S{chwfIPSybSz}~H	|_]~~GQzfEkfKQeT^Vu[y[GqXqUy_vZhryyqzXSfTHTjyDki[|s z{rq[Su	HVryyqy|u}[|s z{rq[QeaX}Xq[iHaHaifaEKi ~K Iff[|fWFf}F~fiFuqH}fihuT[y[GqXqUy_vAhryyqyIXyAtc_V{rzGjjaX}Xq[T}X~p yyqqXVy\Ejay{rzGR ]{XG|s[qV{\XDSaX}Xq[i_\_QfK|_~\{XG|s[qV{_rZTuWX}Xq[|eFVfwiX\}~HyAtc_V{rzRz}X}Xq[TuHK{V yVc8G]WCA
TG{{sp[UY{{sxKxYE~qYpUx^pJ{Z^UxEWGf[\Ua_EPbZa_j_ aAH|aD|\EiJdVZpK|s
HY	KE_ETgEUS{BU\[ZU_rY
\]Z VxsH~Y
FVsFkcZP]YSgtEQ]]\Pxc}cxAua]W{s{ZkwcY}Yp[Tw^YVgGhkY~qyxssYQwKUs{{sxtY~qyxssYSg`[~YsY|]tH~dQJhgdF|JQ |sJ|gdY~g{X|wgD|dhE|tsJdkXkd|[{YF|rYsW{]wBks{{sxJ|Y{Cva^UxsxEhh`[~YsYV|[}q{{sp[Ux^GhcxxsxEP^xYE~qYpUx]ZFQ`[~YsYWw][UgEkh[}q{{sp[Rwt Ssxxs{F`t]ue JGWw|DxYE~qYpUx^`CQIxxsx Px|[uaB	8DC][Q\
PVW 	RTT	rD@_E@^_\wrwsrup 	wprqu	v	trwrnt		tpurpumw
squsrwrtspus w	 utsq	swvprqZDEBBqwvF_U wS\XG]P\CYUXF	8EB]ZS^QQ	SQT SSQSVT RQpWGR[JYS_WW_X]^UVStrtprws	trqsu
vwrtrmD][H]nmw
squsrttrqqwrtspus w	 utsq	sXFDAAs v wD]WtR^ZE_Q_@XWZD	;FC_XQ\

QVR WR 	SSTT TQrVDQZH[Q]VT\Y_\W]]usvrptq 	wps	pttupusoYou	t	tqqpuw	pqutrsnw		upqrwot  v uwss	st	pw
qqt	q u
wvrrqZDF@BqttE_UwQ_XG]S^C[VXF	:E@^ZS^SVVUPQWP TTSV	RV SpTERYIYS_TU_Z^^UQVwpwprup	trqqw
v	trwpn[mw
u upsrwt
rstwp	rmusw	rps m   v wwvprqurtssws	 t	utpspXFDBCp vwF]W vR\YE_Q\BXUYD	8: