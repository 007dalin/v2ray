D]WACWG]UyqqT{]tYjqy{ZwJ~q|I}aKZk[|s_T{ssUy_vChs{yXi{YEyyqqT{sx]R~{Z][R_fhwtD|_bkFYR\}FPx\y[Gx{ssUyqzChs{yX[I]uiK~ghX~e}G|tpY~K kw |fiDhwtX~X} k{Hi[y@qYsUyqqZP]dyX_ZV[|s_T{ssUy\r[VwU[[yEQxx^Tzb~I{As[qT{ss[Su	JVs{yXaI{As[qT{ss[Sz}Z}Yx}dbu{twJ~aqJt{K|fqJ~dsHyvq}ZJy[Gx{ssUyqzPx[[zPx[|s_T{ssUy\bQwg[[zFP^y[Gx{ssUyqz{Z][}[yxTa:D]VACWG\UyqsW{]uYjq{{ZvJ~q |I ~qH|t~[|s]W{srUy_t@hszyXk {YDyyqsW{sy]R| {Z\[i Z@P]uGjjVJ~]ai F[P^~GRx^{YDyyqsW{syBjq{{]v~Hg|tuZ|ect~F~vdXY[jvtZ~dzE~Ht]kdX }XxYIzAs[sW{sr[R_d {Z\[TY~q\UyqsW{^qZTuUY}YzDi ^ Wc[|s]W{srUy\pFQ^b[[{ |t~[|s]W{srUy\pJ{Z\[dYu`crJ}fkWZrK}[GYE}KsG|t\H}a{CqYrUyqsYVwKHyX]YVwKHy[E{{srUyqx Whq^yX]YP]
Gja{CqYrUyqsYVYzyX{Yq^:D_UAC	WE_UypsW{_vYjp{{XuJ~p |K ~JJqyAsZsW{qq[id^[{X_[~YcY~s_UypsW{_XDS cY}[zjdx[keGjt`EQKGjkcY~s_UypsW{_\YyY]Y|XSE~g`ZuaF~t|Y[ }gw~fXYjggDkfvXjgshXi jdI{[GyypsW{qzGjkcY}[zSJ{Cq[qUypsYQuvQp{{[	HS{x\keaDyZE{{qqUypxGPzyY]Y|vaHyZE{{qqUypxGQKyyX``weU}gw{vyE}Y{DvyF}wWva}IwY~s_UypsW{\bASJ{{\bASJ{Cq[qUypsYVz\Ej`{{_DR^gY~s_UypsW{\i[Z{I{U@:E_UAA
VE_U{ssWz_vYhs{zXiJ~Z{I}KK|YH}He[~q]WzqqU{]t@iqy{Zk z[Gy{ssWzqz]P| zX_[k]dEijjDPwdEj eGhw`EPKGhhcYs_U{ssWz_\Y{Z]Y~vy }thY}_iFkZ{ }K |dk f[J|gDiuv[htV]~fb^hd^Yz[Gy{ssWzqzGhhcY|[zQI{Cp[qU{ssYPuvSs{z[	JVgdJWu\DPY
Ys_U{ssWz\rDQ^cY|[y|tYs_U{ssWz\rH{Z]YgY	w`csH~HqUZsI~[ EYG~KqE|t]J~ayAqYsWzqq[VwJJzX_[VwJJz[Gy{ssWzqzWhp\zX_[P]EiayAqYsWzqq[VY{zXy[q^9D]WACWG]UyqqT{]tYjqy{ZkJ|XyJ|I }aJZQ[|s_T{ssUy_vChs{yXi{YEyyqqT{sx]R~{Z][TzzVwZ_TeHFhh|H|_bkFYR\}FPx\y[Gx{ssUyqzChs{yXS}tp[~va~d{jfaG|whY}K[|[|e~_ZUK}vTZ|wdYqy@qYsUyqqZP]dyX_ZV[|s_T{ssUy\r[VwU[[yEVgBT_fJQtA|Ky@qYsUyqqZQwKTqy{Zc}Ky@qYsUyqqZQx[[z|f `tyvuKcsK}vyJ~dsK|fqI{tsX}K{YEyyqqT{sxRz}Z}YxRz}Z~q]UyqqT{^`SueZ}YxGR _{YEyyqqT{sx yX_ZY{yVc8F^WCA
QTU
VS


UPR QU 	QUrHZPE\WC
W^QBJBD[]^^\\UAUQEA[DKD^CFIBWFSCXWSTWBgK@W^]^VWPVPRWQ	UQQSoUQRTVP
WRRVqoU
SSWPP	UURQ	SVPW
QQUQ 
W
WVRP	SZDF@@STTD_UUQ^ZG]S^A[WZF	:E^UAA
QVTPU

VPSR 
SrSZY]SXG_Q\B_\V\S@K@FY\\\]^W@WSG@YFIF\ADK@VDQBZURVU@fIBU\_\WURTRPVS 	WPS	RmWSW	PQQoUQSV
PP	WVPS	RU	QW
QSW	Q	UWVPSQZDGBCQUTF_U VQ\XG]R\B[UXF	
8D@]ZS^	V
TSSWTPTWS
U
pT_UU_U]_URTRPVS 	WPS	RmWSW	PQQoUQSV
PP	WVPS	RU	QW
QSW	Q	UWVPSQZDGBCQUTF_U VQ\XG]R\B[UXF	
8F^WCA
QPU	 
VUP	Q  STr]Z^[U]W]TS
U]QBKBD[_]^]\UCVQE@[DKG^CFIBUFSBXWQWWBfK@W]]^WWPVPRUQ 	VPQQlU	RWSSSmW
SQURRVTPQQWRUSRWSW		UTQQSXFDCAS V VF]WTS\ZE_Q]@YUZD	9D\WACTRPV

	WRPV	 STSpQXZ\QZ@QV	U\SAK@F[_\]]^WCWSF@YFKF\@DKBUDPBZWQVUAfIBW\_]WWRURPUR WPSQmVSWSQPmU
SSWPP	UURQQVPW
QQUQ 
W
WVRP	SZDF@@STTD_UUQ^ZG]S^A[WZF	:E^UAA
RVQSP
	TVP
U P	SrW_UT_UF[W\S@ICFY]\\_]WAWSGBZFIF\AGK@WDQ@ZUSVU@dJBU\_\UURTQPWS	WRP	SmWSU	QQQlU
RSW
PP	WVRP	SU
PW
QSU
Q 	V
WVPS	RZDFBCRTTD_U VQ^[G]S\B[W[F	8F^U@A

UQQ
UPW 	P	
rT]UUV_TWQT
 U\QBK@G[_\^]^VCWQE@YGKF^CDJBUFSB[WQVWBfICW\]^WWPVRQUQ 
WPSQmUQPWT
	U	TRoW
QRU
RQWTPSQW	RUSSW	SU
	VTPQQ[FDBAQ V VF^W TS\XF_Q\@YUXG	8D\WC@VW  S
WR
T RsU]WU]WTC
U]QBKBD[_]^]\UCVQE@[DKG^CFIBUFSBXWQWWBfK@W]]^WWPVPRUQ 	VPQQlUR
PWT
	W	URmgjV
V WSSRVU
RRVWP	P m    VTUTRQ
SWPWRQUR W	
UURQ	SXGF@AST TD]VTQ^ZE^S^@[WZD
:D_UAC	WE yypsYV[yyp{I{[G|sZsW{\rHyY]W{GUEeY_Wc
]_@\^^]jYzAF[ Gat\\j][ChB_Cz@Uh`DFyB_VzbESI]F~aGRdgFk ]TdXP\zBjZ }f[[|r{{qq[id`[{X_Uy^VDheTFj`^kayAtb]W{qzER x {X_UyYc KyAtb]W{qzBjp{{qyJ~YpZhfzX}p}eaK|gwHheyFidd]K ~YsGv}}YdYkei[|r{{qq[id^[{X_UyYwI{[G|sZsW{\~XU`{{qzZTk`F{[G|sZsW{_^Tp{{qzSJ{Cvc_Uypx Wjr^yY]W{_DR^gY~s yypsYSu	HTp{{qz\Rdd^PeeGjwY~s yypsYQuvQp{{qyDU]VhQzbeUtUF{[G|sZsW{\bASJ{{qzR{Y~s yypsYQ ByY]W{[y|s]8D]WC@WG{zqq[VY{zqyK{YE~p[qU{^pJzX_U{EWFg[_Ua^^B\\\^ j[xBGYGcsWc_C\S{`iudISSx` Pz}~I _^~|ERzfFkgIReT]VtYz[G|qYsWz_vYhs{zqz[SgVJWjyGkkYs y{ssYPu	KVs{zqy|tYs y{ssYRea[}YsY}fbY|tZY~ eF}t^]}a JgdYeu|cD}fiEtsJ}vy k]`Zz[G|qYsWz_vBhs{zqyJY{Cwc_U{sxJj[[}YsYjjfPI{Cwc_U{sxEija[}YsYW}[~q{zqq[Vx^Giay{sxEQ ^{YE~p[qU{]ZFPa[}YsYj_\\QdI_~_{YE~p[qU{^pXWuW[}YsYTci}gbX~I{Cwc_U{sx Qz}[}YsYWuHH{YE~p[qU{^|ERay{s{Ywc@8D@_YS^	Q	T PTSP RTVQpF@_FB\]^URTQPWS	WRP	SmW	VS	U	PRVlU
RSW
PP	U
PW
QSU
Q 	V
WVPS	RUTRQ
SXFF@A S T VG]WTS]ZE_S^@YTZD:D\VACSQQV 
WRW 	WpTGSYHZS_TW^Z_]UUS
 U\QBK@G[_\^]^VCWQE@YGKF^CDJBUFSB[WQVWBfICW\]^WWPVRQUQ 
WPSQmF_YI\mmU
SSWPP	UURQ	SVPW
QQUQ 
W
WVRP	SZDF@@STTD_UUQ^ZG]S^A[WZF	:E^UAA
 	TS  
	VVVP  PUrVGSXJYX[^BY]UQT
 U\QBK@G[_\^]^VCWQE@YGKF^CDJBUFSB[WQVWBfICW\]^WWPVRQUQ 
WPSQmAU]E_mmU
SSWPP	W
QU QWRPW	RUTQQSWPUSQVS W	
	 UTRQ
SXFF@A S T VG]WTS]ZE_S^@YTZD:FB\XQ\USUVQSWRW WTVPU
QWVrTEQ[K[Z[\@[^TWSURTQPWS	WRP	SmCW_F^o mW
SQURRVTPQQWRUSRWSW		UTQQSXFDCAS V VF]WTS\ZE_Q]@YUZD	9D\WACWQTRT WR
P  	VpJYQG^UQW\S@ICFY]\\_]WAWSGBZFIF\AGK@WDQ@ZUSVU@dJBU\_\UURTQPWS	WRP	SmCW_F^omW
SQURRVTPQQWRUSRWSW		UTQQSXFDCAS V VF]WTS\ZE_Q]@YUZD	98