D]WBCWG]VyrsS{]tZjr{{Z{H}rL|t{D}eQL~ZkX|p]S{ssVy\tDhs{y[k{YEzyrsS{sx^R|{Z]XR\dhwtG|\`kFZR_APx_yXE{ssVyrxDhs{y[U |d\u|_~g{H}KU@|wwFjr\Z |eh]|Jk~[h_w|]~X{GqYsVyrs]P]dy[]]VX|p]S{ssVy_p\VwUXX{Bkt_jb
]~q]VyrsS{^pGS_c]}Y{~u]~q]VyrsS{^pKy[]]f[tbbsLdgV}[sMcF}bM|ssI~u]Cc{BsXsS{ssXTvJN{Z]XTvJN{YEzyrsS{sxUipX{Z]XR\Ahc{BsXsS{ssXTX{{Z{Xs_	8F_TCBUE^WxquUy_w[kq}yXtHq }qHHyGvdY}s[UyqpWx_rBjqxxXmy[F{xquUyq{_SzyX^Yh \BR_wEkjPH|_ch @YR\|ES~\y[F{xquUyq{@kq}yX]Yk_n_et}fS}u`DvSj[|veK|ex| }iXkZkurZ}KxCr[uUyqpYS_byX^YUy[|s^WxquUy\sXUuS[[xFk_rHQu]FS[[|s^WxquUy\sFR\e[[x vy[|s^WxquUy\sJxX[[dYucauJ}fhW|XuK}aG|aK~qpHv[E}axCr[uUyqpYUuLHyX^YUuLHy[F{xquUyq{ Tjv^yX^YS_GjaxCr[uUyqpYU[}yXxYr\:D\UBAWF_V{wsW{\vZhw{{[yI}wH|K}D`J~[y{]E{{rqV{wxXSfaX}]{|ryBq]sW{rqXSsJVry{ZV\k\bYPM[Vf~ChsJ~\	HhM{CqXqV{wsYSfaX}]{ }uaH|sgkb KhswH~eahcgDk\a|w[vykNkkeeKkNkY~p_V{wsW{\]Vw{{_TK{]E{{rqV{wxGkib^{^]Y~~BP`_hbX~u]W{rqV{ZpFQ_aX}]{ |u}X~u]W{rqV{ZpJ{[_Xf_u`bqI`W[qHgGb H|wsH|u_Fg{CqXqV{wsYVvHK{^]YVvHK{]E{{rqV{wx Wir]{^]YP\	Dhg{CqXqV{wsYVXy{^{Yq_ 8B_UAB
QE_UxspU}_vYksx}X} }ZxHz[J|JtG{fW[}q^U}qqUx]wBnqyxZh}[GyxspU}qz]S}X_[Ug[nuvD}]cYV\}GS]g}[GyxspU}qzBksx}XeHdhyve}dZEy_uFt`zK[|ZdKxfb[ktsXzvz[|`Km[yArYpU}qq[S]g}X_[U|[xs_UxspU}\rZUwV[{[yDkhYneHPhk^xKyArYpU}qq[RwKPqyxZ`yKyArYpU}qq[Rx|[{[z}e ct}vuJIpKyvyJ}dpJxfyxtt{XqJxYFy}qqUxs{Vz}[~Y{Vz}[}q^U}qqUx^cWue[~Y{GV ^xYFy}qqUxs{ }X_[|YxyRc;F\WGA
UF]S{ssVy\t_hs{y[wL|s}rL|tYD}[{ {YEzyrsS{sxYQfc]}Y{~r{GqYsVyrs]SwKTr{{]x]R\dPJ]R\|X~]`ZR_AP]dyXE{ssVyrxDhs{y\kkdgi\~dhZ}k@|tt[~X]|ZZY|eU}dYF~u^_gw~X{GqYsVyrs]P]dy[]]VX|p]S{ssVy_p\VwUXX{Bk^xGif`^kh||H{GqYsVyrs]QwHTr{{Zc}H{GqYsVyrs]QxXXx{f `wyuwNssH}u{L~dsI|e{{tw[sL{YEzyrsS{sxRy]}YxRy]~q]VyrsS{^`Svg]}YxDRX{YEzyrsS{sxy[]]Y{zV`	8F_TCBUE^WxquUy_w[kq}yXxI|q J~vxE|fWH|X|x[CyyqpWxq~ZQe`Y~[} ~qxCr[uUyqpYPuHTqxx\fKTjc_k\bAR_gJRKYTeBkuH|_IkK}As[pWxqu[Qe`Y~[}KjXdkvz[q ]h q|fcYh_qFf]\q~HXffYie{Zfq[|s^WxquUy_\Uq}y\UJx[CyyqpWxq~Eijc_xX[[| w[kuXQeE}K}As[pWxqu[SuIUq}yX` |K}As[pWxqu[Sz|Y~[~}dcvxvqJ}apI|v}J|fpH}f}yvt ~XuJy[F{xquUyq{ Szy[[{ Szy[|s^WxquUy\cRua[[{ES ^y[F{xquUyq{xX[[}[x{Wc	:D\UBAWF z{wsYVXy{w{I{XGq]sW{_rK{^]W{DUGeY_Tc	_X]^h\\EHg^Z@_F}^GD}H^^}h\[Ej@]AxAUnbFD{@^V|`GQK_G~cEPfeGk_VfYPZx@hX}`YY~p z{wsYkfbZ{^]W{\~^ScXSyyDkkY~p z{wsYQv	HVw{{ry|pY~p z{wsYSfaX}]sY|[eYgG[yE|`Y b IcdY~fuNkD|eiFpsJ[S}sh[{XGq]sW{\vAhw{{ryI]{Cv`_V{wxEhiaX}]sYV}X~u{{rqXV|^Ghby{wxEP]{]E~qXqV{YZFQaX}]sYkXAPYt_QX[h]{Cv`_V{wxGkib^{^]W{X	gkldGa[\hP]
Y~p z{wsYVvHK{^]W{_bBQM{~q_ 8B_UAB
QE yxsp[P[yxsxK}[G|rYpU}\rHxZ^U}GUDf[YWc
\\BZ^^\lYz@EXAaqUb]A^Qz`kwfHSUzbRx|xK	}] ^x ~GPxgFmeKPgU]Pv[xYF|w[qUx]wYnqyxs{[UeTHUhxGm i[}qy}qq[RwKPqyxsxzv}[}qy}qq[Pg`[{[q[|t_yuu ktxFzezXhIJyef[}gxmeuFdhEyvqH|ZYXzHjXxYF|w[qUx]wBnqyxsxJy[yAua^U}qzGkh`[{[q[U|[xs yxsp[Pz\Ekcx}qzGS^}[G|rYpU}_XDR`[{[q[h]]\WfK}]_}[G|rYpU}\rZUwV[{[q[}JgDPeC|]kxKyAua^U}qzSx|[{[q[UwIH}U yWa>D]WBCWGzyrs]VY{yr{M{YEsXsS{^pKy[]S{EWEe]_Ua	]]D\\]]j[yAD[Gcv_\}jY[AjA_AzDUjbGF{B[Vx`FSK]B~cDRfgBk^Tf\P^xAjZ}dYX|p{ssXif`_{Z]Vy\JDVx`Bji|QYERr{Gva]VyrxCPxy[]S{Zc}H{Gva]VyrxDhs{yr{|Jp\~uUNY i\cL~dwIjf{@}ww}r|ZsF}uM}w|Yieg]~qzyrs]kg^Zy[]S{ZwHyXEzqYsVy\XVs{yrxQI{Bt`]S{sxUipX{Z]Vy\BP]gX|p{ssXQvNVs{yrxGSh`RvdNVh{DRfE]~qzyrs]QwtQr{{s{Gc ^|h[Yg]cB{YEsXsS{^`BSH{{sxRy]vaB:E@[XQ\QVTWWRP	VVSSVrIYSGZWCurwvpwp 	tpw	snt
ssvw	pqsswwmt
qsu	vpttpsqw	rq
ppw	pu wwsqqZEDAAqv rF_TtW\XG\Q_@]UXF	;FF]ZS_
 W QTS UQPP	
WQqSY[ZSXG\Q_@_\wsvpvuqwsqqmustspsmw	suu
rvwwsqqt russtsw	qtprs\FDBBs vvEYW wS_ZA_Q\CYVZ@	8EB^XU\
PWWVQPVVSTS		VPrVGR[I[U]VW_X^\SDYurwvpwp 	tpw	sntpw	qqrku
usw	sp	tvpw	supt
qpwq 	 q
 wvssuZDFACutwF_UvR\\G]S_BXU\F	;DC]^S^PWTVRQP SSV RRWPTp_X\ZU[U_VQ tprrpuu tpsqnqpwsswot
qsu	vpttpsqw	rq
ppw	pu wwsqqZEDAAqv rF_TtW\XG\Q_@]UXF	;FF]ZS_
U
UQ TWVSTRQV S VSqVDQ_JYS^VT\\]^UW@ uvtpsts	w rq	pmwsu	ruqmu	spt
ps	wrrq	pqsw	qsuqw	tvpw	sYDEBGswtD\U rQ^ZD]P\F[WZE	8@@_XP^TV QVPSRQSTSU	pE@[FB]]] uvtpsts	w rq	pmw	vsu	svvmu	spt
ps	qsw	qsuqw	tvpw	suwvqpXEFDApt vF]TtS\YE\SZ@YUYD>FB][Q_RPTT
	R 
RP TRTVSTqJ]PE\SW uvtpsts	w rq	pmcjw	v tswrwu	vsutp	s nk   ttwrrq	pqsw	qsuqw	tvpw	sYDEBGswtD\U rQ^ZD]P\F[WZE	8@@_XP^R 			QS
T pWGWYH[P_WWZZ_\VVStpvsrwq 	qprskF_YH_nku
usw	sp	tvpw	supt
qpwq 	 q
 wvssuZDFACutwF_UvR\\G]S_BXU\F	;DC]^S^RQVW	TV 
STS W
pTDSZJ]XY\AY_UQVwsvpvuqwsqqmBU^GXmmu	spt
ps	w	q
uvwpptruwvqptswsqqsw		utrrsXFE@Bs wt@]WwQZZE_P^C[SZD:E@[XQ\
V 	S Q 	WRT T QWWUrWERYL[Z[_@X\SWSurwvpwp 	tpw	snCT]A^o nt

pqwrrqtprswpupuwp t	
	uwvqpXEFDApt vF]TtS\YE\SZ@YUYD>FB][Q_TQT
QWUR WWRP P	PPVPUqJ]PE\WP uvtpsts	w rq	pmGW_G]o mw	suu
rvwwsqqt russtsw	qtprs\FDBBs vvEYW wS_ZA_Q\CYVZ@	8EB^XU\
PTRTVWWTU USRUQrVGR[I[U]VW_X^\S]^urwvpwp 	tpw	sn[nq
uwpspqu
ruvwsp mu
tsssu k    t wqtprswpupuwp t	
	uwvqpXEFDApt vF]TtS\YE\SZ@YUYD>FB][Q_T P  T	WURQV
SqTAQ[JXRP]N[UP
wstprts	uvqpoZmw	tuqrvww	ssttprntpw	qqr
k    t wwpt
uquu  t
wrrq	pZ@F@Apt wD_QtR^YGYS^@XWYF:FC_[SZ QQUVU RQ TST	TtQX[_QY@]UXF]] uvtpsts	w rq	pm_mw	v tswrwu	vsutp	s nqpwssw o  t w upt
qpwq 	 q
 wvssuZDFACutwF_UvR\\G]S_BXU\F	;DC]^S^UV TR S TTS	UU pTDSZJ]S_TT^Y]ZUQW
wstprts	uvqpoZmw	tuqrvww	ssttprntpw	qqrm rvwvssuu	vw	sst	s	uttpsqYF@BCq rtE\W vQ_XD_U\B[VXE8: