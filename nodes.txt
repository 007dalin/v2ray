D]WCB
WG]WxssP{]t[ks{{ZwHs|IH|dgBZ{xYE|{ssWxsx_SgcY~Y{|s{CrYsP{ssYPwMVs{x][Vw`XSI\Vg|BkwM~]IkI{DqYsWxss^SgcY~Yx^kgJhdkcYk]N~dcIhZgC}dZ[Idd\|dgO]hX|Zg^~q]WxssP{]\Us{{^VJxYE|{ssWxsx@kh`_xZ]^~tDh]^SgRI
^~q]WxssP{^pFR^c^}Y{ t^~q]WxssP{^pJxZ]^f[uccsOdgW|ZsNsH|sN|IsGJ]Mc{CrYsP{ssYUwJM{Z]YUwJM{YE{xssP{sx Thp[{Z]YS]Bhc{CrYsP{ssYUY{{Z{Yr^
8F_UBCUE_VyqvUy_vZjq~yXuI~q}qI~XnGfuX|sXUyqqVy_qBjqyyXny[GzyqvUyqz^RyyX_Xi_aGjjjGRuaGi eDjueGSKDjjf[|s_VyqvUy_\ZyXX[~eaje}[}fqE}vz~K ~vz|fW~vPFfiHj_nJ}f\]}_}[y[GzyqvUyqzDjjf[[zSK~As[qVyqv[SuvQq~y[	HijTDy[GzyqvUyqzFR}yX_X~vfHy[GzyqvUyqzFSK~yYabwbU}f}Fyv~E}XqE}fvF}XSV}vT}HuX|sXUyqqVy\eASKyy\eASKyBs[vUyqqXTz[Ejayy_DR_eX|sXUyqqVy\n[[yHyUG:D]TCAWG^W{tsW{]w[ht{{ZtH|t |IH]cEZp{^E{{spW{txXSg`Y}^{|sxCq^sW{spYSpJVsx{YV\k]cXPN[hwJ~Z\VsxCq^sW{spYS`cY}Y{\|tY}dc]kN\|gtH~cc|]xDkcV]hY Y}s{}thk]U|dVY~v]W{spW{Z\Vsx{YVJ{YF{{tsW{s{Gko`_{Z^Y~|\khFP^
Y~q^W{tsW{^sFQYcY}Yx |sY~q^W{tsW{^sJ{]]Yf[u`dsHdRW]sIsHtI|IpG|M]JcxCq^sW{spYVpJJ{Z^YVpJJ{YF{{tsW{s{ Wop\{Z^YPZEhcxCq^sW{spYV^{{ZxYqY8F\UADUF_U~qqUy\vYmqyy[uJyq~HJzXSG}ea~[GyyrqU~qzZQfa[x[y ~ryAt[qUyrq[Vu	HTry~\T^i\bZUKYTf~@muH|\	KmKyAsXqU~qq[Qfa[x[yjfb^mfrY~X  mffX|eaKzfyFuqKyq^jfyKyvq}Ku yua[|p_U~qqUy\^Sqyy_TH~[GyyrqU~qzEiib]~X_[|b]mj~^|HyAt[qUyrq[Tu	KTry~Xa}HyAt[qUyrq[Tz}[Xz}cbtyuuJzKqK}uyE{fuE|ey~vq[}J~[GyyrqU~qzRy}[x[zRy}[{s_UyrqU~\bSve[x[zGR^~[GyyrqU~qz y[_[z[yyV`=D]WCB
WG]WxssP{]t[ks{{ZwHssHZcBZY}q]P{ssWx]tGhs{xZk{YE{xssP{sx_S|{Z]YUxxVwZ]UgJBhh|J}]`kF[S^BPx^xYE|{ssWxsxGhs{xZYMhtd\kdV^~gcdwC|tU|Y|Jh]}d`\kgx[tkOkJQG~s{DqYsWxss^P]d xZ]^VY}q]P{ssWx^p_VwUY~Y{AhgZSdNkgV\}I{DqYsWxss^QwIUs{{Zc |I{DqYsWxss^QxY~Yxxf `vxtwOcsI|t{@~dwG}d{{ts~ZO{YE{xssP{sx Sx^}Yx Sx^~q]WxssP{^`Rwg^}YxES[{YE{xssP{sxxZ]^Y{{Wa
8F_UBCUE_VyqvUy_vZjq~yXyIqJ~H}D}fzJ|XuF~K~As[qVyqv[ie\ZyXX[~XaX|sXUyqqVy__DSaX[}XQu\Die^T}DjzaXQ bDSKDS_SX|sXUyqqVy_[YyX_X}XnHfa}urF}vuI}aj_a|eq^~uuEefE}ff\}e}_jXSy[@yyqqVyq}GjjaX[}SKyBs[vUyqqXSuqQqyy[ZR\\ij\Dy[GzyqvUyqzFR}yX_X~vfHy[GzyqvUyqzFSK~yYabwbU}fuyv~E}XqE}fvF}XSV}vT}HuX|sXUyqqVy\eASKyy\eASKyBs[vUyqqXTz[Ejayy_DR_eX|sXUyqqVy\n[[yHyUG:FB^ZSYVUTRTT 	S  PTRT	RWwFB]DC_Z^
rprw	puqqtpptrrwpsupw	uwpt	stvuqqYDFGAqt vF\UtS\XD]SY@YUXE	=FB]ZP^VVR	QR	U SQ		PQT	pP^UCGBDYuprw	suvvw	ppt
urwsprs	w	 utssswvrqqZDE@Aqw qF_UtT\XG]P^@^UXF	:FE]ZS^ 	T	USP	WQT p\Y^\U_U_WSuqw	qpswvrrvuuwssus	t	utps	pXFCBCp qtD]W vQ^YE_V\B[WYD8D@_[Q\V	TVSTSVSQQRSPUP	rO[RG^WCu
srww	p	rrrwtutsssw	pu
vqt	v u
	wqrqqZCF@Aqt vE_RtS_XGZS^@YVXF:FB^ZSYTPVPRWTTSSVPSwTEQ[IYSXTU\X^^UF[w	susvquwpt	stpu
qqwq r
	wvrrvZDF@BvtvF_UwS\_G]S^CYU_F	:EB]]S^V	 U RVP
Q	 	TRSpTER[J^S_TU_X]YUUQw	
ustrw	uqw	qpsrtps	sw	pu	qvw	q u
	tvuqqYDFGAqt vF\UtS\XD]SY@YUXE	=FB]ZP^QVPS
QSQUQSTV	SPQpTBQ[JYP_TR\X]^V_[w		rssrww	sutqqtvuqqurwsprs	w	 utsssXFDACs vtC]WvQYZE_Q_B[PZD	;D@XXQ\

TRSV SS	QW SVrVDSYO[Q]VT^ZX\WSW
u qtqss  rtps	sw	pu	qvw	q u
	tvuqqYDFGAqt vF\UtS\XD]SY@YUXE	=FB]ZP^SQVQS PSQ   	 V	pTBQ[JYP_TR\X]^VUFw	prsqqutsssw	pu
vqt	v u
	wqrqqZCF@Aqt vE_RtS_XGZS^@YVXF:FB^ZSY  PWVQPSVSRW	
	S wTEQ[IYX^\@[^VQQw		rssrwuvvw	pptts
u
rw	psrrwvrrvuuwssus	t	utps	pXFCBCp qtD]W vQ^YE_V\B[WYD8D@_[Q\QQ VWRQS SUQrQGSYHXZ[YBY\WWSuwqqsuw		wsuruvwvrqqurtssus	 wrtps	s_FDBCs vwDZW vR^ZB_Q\BXWZC	8: