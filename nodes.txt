D]WBCWG]Vytp_{]tZjtx{ZwI~t|I~NB{YEzytp_{sxYQ``Q}Y{~txKqYsVytpQSwKTtx{^`HTocWh^dBRZgBQIZT`JhwK|ZAhI{Bs^p_{ssXQ``Q}Y{jsgUkZs}t Q|]I|c`htYE`x	|s[j`cThtx\jZthZQX|v^_{ssVyZTVs{yYUB{YEzytp_{sxFiocW{Z]X|gMhwdHRZgPVwUGy^Fs{ssVyt{OPxy]^Q|tcKy^Fs{ssVyt{OQI{y\h`ugV}ct@{t{F}]tLtQE}cV_t{}MtQ~q]Vytp_{^`BSNx{^`BSNxKqYsVytpQVx^Fjdx{]GRZdQ~q]Vytp_{^kX^xA{WB:A\]ACRFWUyqpW~\~Yjqx~[}J~q yHaHyuu[|s^W~ryUy_w@mrqyXh ~XOyyqpW~rr]R ~[W[i_gEmibDRugEnmGjucETHGjj`Y{pWUyqpW~\TYyX^Yza~XhHyumFuw\nbifwY{f}}vdDmvr_~fVGzvv_iHx~XOyyqpW~rrGjj`YxXrSKxCtXyUyqpYTv~Qqx~XZSK	Y{pWUyqpW~_zDS\`YxXq~v|Y{pWUyqpW~_zHyX^YcZwbapHzKyU}XpIzbE~KHxryE}X^JzbqAs[pW~ry[TuIJ~[W[TuIJ~XOyyqpW~rrUjs\~[W[R_EmbqAs[pW~ry[T[x~[q[s\=GUWCATO]W{rqPxUt[hryxRwH|rA|HM|k{CqXqPx{sYkf\\xR]Y|[a^}y]W{rqPxUZFQa^~QxEhib\ho
Ehyf]P
`EQHARUQY~p_Px{sW{\\\xR]Y|vv\|||\|eqChlcr hld]~eW~|sD|e\\Bt[h[r]||c{XG|x{sW{rzBk`cY}XzRA{CqXqPx{sYQvvP{{{X	@h``@hf]kk
Y~p_Px{sW{_rARVcY}Xy|Y~p_Px{sW{_rMxR]YfZ	rcksHeeP|RsIb @AH}rq@|R]JbyDrQsW{rq^UJJ{[_^UJJ{XG|x{sW{rzT`p\{[_^SUEhbyDrQsW{rq^UQ{{[y^rV8G]RBKTGXVqqqUx]qZbqyxZrIvqIwqHI~B{[qUxsvXae\YxZXXvXa[}qXVqqqUx]_G[a[~Y}[Yu\Ghg]\}Gkxa[Y bGRIG[_S[}qXVqqqUx][ZqX_[|mXwfr_|ZPEveuHkcbvu}dP v_uFktvHaej[ty]bvf_xY@zqqqUxs}Dbja[~Y}[KyArYvVqqq[RwqYqyxY Z_\}I~B{[qUxsvX[u	KUs~qXa|I~B{[qUxsvX[z}[~Y}~lbtxtrIv[qK|t~Itfq}drqvqK~ZzIq[GyxsvVqqzSxzXw[zSxzXts_UxsvVq\bRwbXw[zGS]q[GyxsvVqqz xZXXu[yyWa
2D]WBCWG]Vytp_{]tZjtx{ZwI~t|It|I{Bs^p_{ssXi`]S{Z]X~]`Q~q]Vytp_{]ZGS`Q}Yxj`{Skg
DjpcMQIDjo`Q~q]Vytp_{]^Zy]^QhtZ[~MVk]E~sh	kciMT~dUjcVL|`]j]dkZcK}`gQ{YEzytp_{sxDjo`Q}YxSNxKqYsVytpQQwtQtx{Y]UpgAk^Kjd	Q~q]Vytp_{^pGSY`Q}Y{~s|Q~q]Vytp_{^pKy]^Qf[tbdp@dQV}]pAcF~N@}ssF}]^Bc{Bs^p_{ssXTpIB{Z]XTpIB{YEzytp_{sxUosT{Z]XRZMhc{Bs^p_{ssXT^x{Z{XsY8F^TCDQWU]S
		UPRP^ 	QUwIQPE\WFT^TCABD[^^
_W\UBUTDJ[DKD[BFIBTCRHXWPTRClK@W^X_]WUWPRTP
	UZQPoT QRQ]SWRS]qoU SPR	PS	T^RQ	V]UW	QPUQW TVS[	SYDCAKSQ
TD\U^Q^ZD]V_J[WZE	;N^UAB
ZVTUT

  ]PSR  SqS_XVSXG\QYC_\]\S@H@CXW\\^^RKWSGCYCHF\ADNA]DQA_TYVU@eIGT\_\TTRTRU]SWSSYmWST[QQoT QV]
PUWVSSYU	ZWPST	P
	U RWPSQ_ELBCQ^TEZT VQ_XB\Y\B[VXC8D@^ZV_VTPS  WWU
T \S	Uq__UU\U\TTRTRU]SWSSYmWST[QQoT QV]
PUWVSSYU	ZWPST	P
	U RWPSQ_ELBCQ^TEZT VQ_XB\Y\B[VXC8F^TCDQSU
V	UP	P  S Tw\Q^[U^WX_S
TVQBKAD^^V^]_UB]QE@XDNL^CEIGTFSBXRP\WBfH@RV]^WRPVSRTQ 	]PRPgU	 YWRSSnR	
PQT RR]TPRPWSUVYWVT				UQZQPXCEHAPW VF]R
TS\YEZPV@YUYD2D\WBCWRU]
		 	WRSV 	STPpTYQ\QZCTWUYRJK@FX_YV]^WCRRM@YFHC]KDKAU
E[BZTQSTJfIBTY^VWTS^RPUY RPSQh]VWSP[mU SPR	PS	T^RQT]UW	QPUQW TVS[	SYDCAKSQ
TD\U^Q^ZD]V_J[WZE	;N^UAB
YVRSU
	T ]P
U  P	SqWZT__UE[W_SEHHFY]_Y^VWATSBCQFIE\DLK@WDTAZUSUUEeABU__YTURQZPWV	TS[	SnRPT	QQT gU
 YSW	UP	TVS[	SU PR
QPTQ 	]
 WVSSYZDFACYTQE_UVT_PG]S_B^VPF	;F[TKA
TZQ	  UU W 	UrT]VUS^_WQW
U\RBNAL[_\^X_]CWREEXLKF]CEABUESGPWQVTBcHHW\^^RWSVSZUQWURQmUZSRT		T	TRnW	PYU
RZWWURQTRU SSRST	]TPRPPFDBBP VVCUW WSYYM_Q\CYPYL	8G\RBK VRS	TR	TRxU]WV]R_C
TVQBKAD^^V^]_UB]QE@XDNL^CEIGTFSBXRP\WBfH@RV]^WRPVSRTQ 	]PRPgURPWU
	T^Rngo]
UWPSS]U
RYVWUP m   VQUTRTSWPT	YQUY  R
T^RQ	VYLF@AV
T WD\]TR^_DUS^@XW_E:D\UDBWF |x{sYVXyx{{I{XGyrQsW{_rMxR]W{DUDeY_Tc\T@\^[\jY@M[ GbtY]tj][@hG^Hz@Uk`AGrB_Vyb@RB]F~aBSogFkXUoXP_zGk
Z }e[^}y{{rq^ho`[{[_PxUVDhfTCkk^kbyDui]W{rz@Sx {[_PxRc HyDui]W{rzGk{{{ryORpZhez]|{}faN}lwHhfyChod]H RsGu}|RdYkfi^}y{{rq^ho^[{[_PxRwI{XGyrQsW{_~]Tk{{rz_U``F{XGyrQsW{\[U{{{rzRA{Cv`_Px{x Wir[xR]W{\ASUgY~p |x{sYSv	MU{{{rzYSod^PfeBk
wY~p |x{sYQvvP{{{ryATVVhQyb`TUF{XGyrQsW{_bDRA{{rzSpY~p |x{sYQGxR]W{XyyrV8G]RBKTGzqqq[UY~qqyKxY@{[qUx^uKqX_UxERMg[\Ud	U^B_Y]U i^yIGYDcvVc_F]S{`ipeISPxe[z}}It_^}yDYzfFhgHYeT]Ut\q[G|rYvVq_vYks~qqz[PgSK\jyGhnXts yxsvX[u	KUs~qqytzXts yxsvXYea[~YvXvfbYt_Xu eF~t[\va J|gaXteufEvfiE|tvKvvy h]e[q[G|rYvVq_vBks~qqyJ|Y~B|c_Uxs}Ka[[~YvXajfSI~B|c_Uxs}Dbja[~YvX\}[}qzqqq[Ux[Fbayxs}DZ ^xY@{[qUx]_G[a[~YvXa_\\RaHt_~_xY@{[qUx^uY\uW[~YvXtT`hvgbX}I~B|c_Uxs}Zz}[~YvX\uHHxY@{[qUx^yDYayxs~X|c@;DE^RS^ Q	T PTPU RTS
QpFC_CCW]^URQZPWV	TS[	SnRVP	T	PRSgU
 YSW	UP	U PR
QPTQ 	]
 WVSSYUTRTSXFE@DS WWL]WQRVZE_P^EX_ZD:A]]ACVPZU 	 
 RSW \pTDS\IQS_TT^_^VUUP
U\RBNAL[_\^X_]CWREEXLKF]CEABUESGPWQVTBcHHW\^^RWSVSZUQWURQmE_\HWmmU SPR	PS	T^RQ	V]UW	QPUQW TVS[	SYDCAKSQ
TD\U^Q^ZD]V_J[WZE	;N^UAB
	TP
	VU ]P   PUqVBRSJYXX^GXVUQW
U\RBNAL[_\^X_]CWREEXLKF]CEABUESGPWQVTBcHHW\^^RWSVSZUQWURQmBUXDTmmU SPR	PS	W	Q	
UZWSPTRUQZQPRSTSQ]S W		UTRTSXFE@DS WWL]WQRVZE_P^EX_ZD:CCWXQ\ UV^VTR\RW\TVSUP\VrWETZ@[Z[_@^__WSURQZPWV	TS[	SnCR^M^o nR	
PQT RR]TPRPWSUVYWVT				UQZQPXCEHAPW VF]R
TS\YEZPV@YUYD2D\WBCTQQYW  	WR	U 
	VpOXZG^VQW_SEHHFY]_Y^VWATSBCQFIE\DLK@WDTAZUSUUEeABU__YTURQZPWV	TS[	SnCR^M^onR	
PQT RR]TPRPWSUVYWVT				UQZQPXCEHAPW VF]R
TS\YEZPV@YUYD28