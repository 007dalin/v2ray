D]WBCWG]VyzsU{]tZjz{{ZwI~z|Iz|c{BsPsU{ssXin^Y{Z]X~Sc[~q]VyzsU{]ZGS
c[}YxjnxYkg
Dj~`GQIDjac[~q]VyzsU{]^ZyS][hZZ]nxY|d{EiTsng~gwH~mYFJZX}k hgkKm^Y{YEzyzsU{sxDjac[}YxS@{AqYsVyzs[QwtQz{{Y[Q~dXSI
X|x]U{ssVyWpDQ^cXP{|tX|x]U{ssVyWpH{Z]XdRw`csI}mQUZsH}jE}cH}PsKJ]F}j{AqYsVyzs[VwJKyS][VwJKyPEy{ssVyzxWhp]yS][P]Djj{AqYsVyzs[VY{yS{[q^:O_WAC\E]UyqpWp_tYjqxpXkJ|XxIwK}KHvvc[|s^WpqsUy_w@cq{yXh p[EyyqpWpqx]R pX][R_g cutD|_c` FYR\|E[x\y[F{pqsUyq{@cq{yXVItfQHjvtGufw~XpDwvkqcX`^|e`tud_~HpHw cJ~axCz[sUyqpY[_dyX^Y][|s^WpqsUy\sX]uU[[xFZ ^\R_wCuK{As[pWpqs[SuI]q{yX` tK{As[pWpqs[Sz|Yv[x}dcvpvwJ~apItv{J|fpuf{KyvxJvXsJy[F{pqsUyq{ [z[[{ [z[|s^WpqsUy\cZug[[{E[ ^y[F{pqsUyq{pX][}[x{_c:D\UJAWF_^{qsW{\vRhq{{[iA~X{I|H
}qH[eP~s]W{rq^{_t@hry{Xk {XGr{qsW{rzVP| {[_Pk Z@P\vLhjVJ~\bk F[P_}LPx^{XGr{qsW{rzIhq{{[iN|u|uu~fUJ|\uM|vUGkbP|fcG~fzU}fp[kKehfw|XyJq[sW{rqPP_d {[_PVY~p_^{qsW{_rQVuUY}XyOQu^ESHP~s]W{rq^{\pFQ_aP}[{ |u}P~s]W{rq^{\pJ{[_PfYu`bqAfkW[q@aG}b @[sIK_Na{CqXq^{qsYVvHC{X]YVvHC{[E{{rq^{qx WirU{X]YP\	Lha{CqXq^{qsYVXy{X{Yq_ 8D_UAB
WE_UxsxU{_vYksp{XuJs|K~cJ}fS[}qVU{qqUx]BhqyxZ`{[GyxsxU{qz]Sw{X_[h]oGhjjDSwoGk eGkwkGQKGkhh[~s_UxsxU{_\YxZV[}ufX~ww^kXaFkw_|K k]s_~f[hd`F e|t{_| u|d][{[GyxsxU{qzGkhh[}[zRIpAq[qUxsx[QuvPsp{[	R]oFk_H^}IpAq[qUxsx[Qu	KUsp{Xa|IpAq[qUxsx[Qz}[~Ys}fbtxt|HqqK|tpJ~fq}dpK{vyH~ZxJ{[GyxsxU{qzSxt[}[zSxt[~s_UxsxU{\bRwl[}[zGS^{[GyxsxU{qz xZV[[yyWa8D]WBCWG]VyzsU{]tZjz{{ZwI~z|I~j {YEzyzsU{sxYQnc[}Y{~z{AqYsVyzs[SwKTz{{^`HTa`]h^dBRTdHQIZTn|@hwK|TKhI{BsPsU{ssXQnc[}Y{Iink }t~@Jww|m`ZtwEimc|c[}C{Jg{ImpY|g{X|x]U{ssVyT^Vs{yWVH{YEzyzsU{sxFia`]{Z]X|^GVxxGjqdXVw^GRP
[~q]VyzsU{^pGSWc[}Y{~}[~q]VyzsU{^pKyS][f[tbjsJdwV}SsKcFjKYsH}C]Ec{BsPsU{ssXT~JH{Z]XT~JH{YEzyzsU{sxUap^{Z]XRTGhc{BsPsU{ssXTP{{Z{XsW8F^TCJQWU WS
	UPRST 		QUyJ[PE\WHT^Z@KBD[^^\]\UBUZG@[DKDUAFIBTMQBXWPT\@fK@W^V\WW[TPRTS 	UPQPoW
QR_WSWRPWqoU
SP\
PS	WTRQ	XW[W	QSUQWTVPQ	SYDMBAS_ TD\U TQ^ZD]X\@[WZE	 8D^UAB
PVT[W

 WPSR SqSQ[\SXG\QW@_\
W\S@H@M[]\\^^\AWSGCYMKF\AD@BWDQAQWSVU@eIIW\_\TWRTR[WS WSSSmW STQQQoW
QXW
P[WVSSSU	PWSST	S 	U 
\TPSQQFFBCQ TTETW VQ_XL_S\B[VXM8D@^ZX\V TPSWW[ TVS	UrU_UU\U_^WRTR[WS WSSSmW STQQQoW
QXW
P[WVSSSU	PWSST	S 	U 
\TPSQQFFBCQ TTETW VQ_XL_S\B[VXM8F^TCJQSU 
VUP	S 	 S Ty_[^[U^WVUS
W\QBKADP]\^]_UAWQE@XD@F^CEIIWFSBX\SVWBfH@\\]^W\PVSRWQ 	 WPR SmU	SW QSSn\

PQW
RR WTPR SWPUXSWX T	
	U_PQPXMFBAPT VF]\ TS\YETS\@YUYD 8D\WBCWR[ W
		WRSV	 
STPpZZ[\QZCZTUWQ@K@FX_W\]^WC\QG@YFHM^ADKAUFQBZTQ]W@fIBTW]\WTPTRPUS \PSQfWXWSSQmU
SP\
PS	WTRQZW[W	QSUQWTVPQ	SYDMBAS_ TD\U TQ^ZD]X\@[WZE	 8D^UAB
SVRS[
	TWP
U  P	SqWTWU_UE[W_SKKBFY]_W]\WATSL@[FIE\JFK@WDZBZUSUUKfKBU__WWUR_PPWX 	TPQ	Sn\PW	QQZmU
SSW	[P	TVPQ	SUP\
QPWQ 	W
  WVSSSZDFACST_F_UVZ\ZG]S_BPUZF	;FUWAA
WPQ

 U[
W 	[rT]VU]]UWQW
U\RB@BF[_\^V\WCWREK[FKF]CFKBUESIZWQVTBmKBW\^^\WSVPPUQW[QQmUPS\T		W	TRmW	SSU
RPWW[QQTRU
SS\SW	
WTPR SZFDBB
S VVM_W WSWZG_Q\CY^ZF	8G\\AA V\S
TR
T	R	rU]WV]\UC
W\QBKADP]\^]_UAWQE@XD@F^CEIIWFSBX\SVWBfH@\\]^W\PVSRWQ 	 WPR SmURPW V
	TTRngaW
U WPSPWU
RSVW[P m  V_ UTRZSW PT
SQU S  \
WTRQ	XZFF@AX T WD_WTR^QG_S^@XWQF:D\UJAWF r{qsYVXy{q{I{XGwq[sW{_rC{X]W{DUGeY_Tc_^@\^U_jYqCG[ GbtW^~j][@hI]Bz@Uk`ODxB_VybNQH]F~aLPegFkVVeXP_zIh Z }e[P~s{{rqPke`[{[_^{_VDhfTMha^kbyJvc]W{rzNPx {[_^{Xc HyJvc]W{rzIhq{{ryA|XpZhezSq}fa@~fwHhfyMked]H |XsGu}	XdYkfiP~s{{rqPke^[{[_^{XwI{XGwq[sW{_~SWa{{rzQVj`F{XGwq[sW{\UVq{{rz
QK{Cv`_^{qx WirU{X]W{\OP_gY~p r{qsYSv	CVq{{rzWPed^PfeLh wY~p r{qsYQvv	Sq{{ryOW\VhQybnWuUF{XGwq[sW{_bJQK{{rz	PzY~p r{qsYQI{X]W{Xywq\8G]\AATG	y{qq[UYp{qyKxYN|q[qUx^{H{X_UxE\Gg[\Uj
_^B_W^_ iPzCGYDcxUc_H^S{`i~fISPxkQz}}I ~_^}wGSzfFhgKSeT]UtR{[G|rYxU{_vYksp{qz[Pg]HVjyGh`[~s yxsx[Qu	KUsp{qytt[~s yxsx[Sea[~Yx[|fbYtQ[ eF~tU_|a J|go[~euhF|fiE|txH|vy h]kX{[G|rYxU{_vBksp{qyJ|YpAvc_UxssHk[[~Yx[kjfSIpAvc_UxssGhja[~Yx[V}[}q	y{qq[UxUEhayxssGP ^xYN|q[qUx]QDQa[~Yx[k_\\RoK~_~_xYN|q[qUx^{ZVuW[~Yx[~T`k|gbX}IpAvc_UxssPz}[~Yx[VuHHxYN|q[qUx^wGSayxsp[vc@;DK]XS^Q	 T PTP[
RT] QpFC_M@]]^UR_PPWX 	TPQ	Sn\VP	W	PR]mU
SSW	[P	UP\
QPWQ 	W
  WVSSSUTRZSXFE@JS WTF]W_Q\ZE_P^K[UZD:O^WACXSPU 


 \PW  VpTDSRJ[S_TT^Q]\UUP
U\RB@BF[_\^V\WCWREK[FKF]CFKBUESIZWQVTBmKBW\^^\WSVPPUQW[QQmE_RK]mmU
SP\
PS	WTRQ	XW[W	QSUQWTVPQ	SYDMBAS_ TD\U TQ^ZD]X\@[WZE	 8D^UAB
	TP
	VUWP    PUqVLQYJYXX^I[\UQW
U\RB@BF[_\^V\WCWREK[FKF]CFKBUESIZWQVTBmKBW\^^\WSVPPUQW[QQmBUVG^mmU
SP\
PS	W	Q
 UPW PPTRU_PQP\SWSQWS W		UTRZSXFE@JS WTF]W_Q\ZE_P^K[UZD:M@]XQ\
UXTVZQVRWVTVSUSVVrWEZYJ[Z[_@P\UWSUR_PPWX 	TPQ	SnC\]G^o n\

PQW
RR WTPR SWPUXSWX T	
	U_PQPXMFBAPT VF]\ TS\YETS\@YUYD 8D\WBCTQ_SW WR	[ 
 	VpA[PG^VQW_SKKBFY]_W]\WATSL@[FIE\JFK@WDZBZUSUUKfKBU__WWUR_PPWX 	TPQ	SnC\]G^on\

PQW
RR WTPR SWPUXSWX T	
	U_PQPXMFBAPT VF]\ TS\YETS\@YUYD 88