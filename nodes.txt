D\WBC STTWS
	WRSXT 
STpA[PG^VAW_SKKBFY]_W]\WATSL@[FIE\JFK@WDZBZUSUUKfKBU__WWUR_PPWX 	TPQ	Sn\
SSVW	PWS[WqmT
QSUPP\TPSQW	RW
PXW	PUWW[QQZEDIAQV TF_TTQ\XG\QW@[UXF	3D^WCAPTVR\

WPQS QrRXP\SZE_P^K_^
W\QBKADP]\^]_UAWQE@XD@F^CEIIWFSBX\SVWBfH@\\]^W\PVSRWQ 	 WPR SmU	SW QSSn\

PQW
RR WTPR SWPUXSWX T	
	U_PQPXMFBAPT VF]\ TS\YETS\@YUYD 8FB][QWT	TSRUTR
 U
VS 
TyU_WW_TT^\PVSRWQ 	 WPR SmU	SW QSSn\

PQW
RR WTPR SWPUXSWX T	
	U_PQPXMFBAPT VF]\ TS\YETS\@YUYD 8D\WBCS PT	 WWRX 
 QUpT[^YW]V_US\\Q@IBEYV\\_\TJWQGB[EIF^AFH@\FQ@YUXVW@dKAU\]\UUPTPS\S	WRQ	XmWSU	ZSQmU
SP\
PS	WTRQ	XW[W	QSUQWTVPQ	SYDMBAS_ TD\U TQ^ZD]X\@[WZE	 8D^UAB
 TSRW

WPPW   QVSqSQ[\SX@S_T^Z@KBD[^^\]\UBUZG@[DKDUAFIBTMQBXWPT\@fK@W^V\WW[TPRTS 	UPQPoW	QWRXQoT
QSUPP\TPS	SW	RW
PXW	PUWW[QQZEDIAQV TF_TTQ\XG\QW@[UXF	3D^WCASV	QRR
VWPT PQrV]\U_WFZ
U\RB@BF[_\^V\WCWREK[FKF]CFKBUESIZWQVTBmKBW\^^\WSVPPUQW[QQmUS\SPSmW	SSU
RPWW[QQTRU
SS\SW	
WTPR SZFDBB
S VVM_W WSWZG_Q\CY^ZF	8G\\AA\P
S
TR
W	R rV_UTTVUWSTW^QCIIF[]^__WWAUQDBPFKD^BMKBWFR@ZWSTWCd@BW^]_UWPW[PWPURZSoTP	PUV
\VSfW

XSWSPUTRZSW PT
SQU S  \
WTRQ	XZFF@AX T WD_WTR^QG_S^@XWQF:D]UJAWU	Q	WSV 	S rU_UU\UUC\\Q@IBEYV\\_\TJWQGB[EIF^AFH@\FQ@YUXVW@dKAU\]\UUPTPS\S	WRQ	XmWSPU	]
W TPmfhWV		WSR[WWSSVUR Po  TVWVSSSU	PWSST	S 	U 
\TPSQQFFBCQ TTETW VQ_XL_S\B[VXM8F_TCJUE{pqs[T[xpq{Ky[F~z[sUy\sJpX]UyGTLe[]WbT^B^_\ThXxHG[Eau^U~j_YCi@VBzBWhaFOxB]TzcGZH]D|`E[egDi _]eZR\{@c ZfZYusyyqpY`e`YyX^Wp_VFjeUDca\iaxC}c]Uyq{G[xyX^WpXc}KxC}c]Uyq{@cq{yqxHwXpXjf{Ztqe`IufwJjexD`ed_}KwXsE}v| tXd[iehYusyyqpY`e^YyX^WpXwKy[F~z[sUy\Z\a{yq{X]j`Dy[F~z[sUy_\]q{yq{ZK{Atc^WpqxUjs\pX]Uy_F[_g[|s{pqs[QuJ]q{yq{^[ed\RedEc w[|s{pqs[Suw Xq{yqxF\\VjSzcg\uUDy[F~z[sUy\cCZK{yq{ [z[|s{pqs[S @pX]Uy[x~z\:D\UJAWF r{qsYVXy{q{I{XGwq[sW{_rC{X]W{DUGeY_Tc_^@\^U_jYqCG[ Gbq^a^AUSybhwmKQSyb	Qz~H		~_\~~LSzdDkf@SeV_Vu[{[E~qXq^{_t[hry{qxYSfTCVj{EkiP~s{{rqPQuIVry{q{ |u}P~s{{rqPSecY}XqP|f`[|uXP gD}u\T|aHffP~ew|aM|fkGuqC|v{k\bS{[E~qXq^{_t@hry{q{HXyJvc]W{rzCkYY}XqPkjd PHyJvc]W{rzLhjcY}XqPVY~p r{qsYVy\Nha{{rzLP \{XGwq[sW{\XOQcY}XqPk_^^Qf@~_|]{XGwq[sW{_rQVuUY}XqP~Vc`|g`Z~HyJvc]W{rz	PzY}XqPVuJJ{XGwq[sW{_~LSa{{ryPvcB	8EBVXS\
 SV
P VSR	
PUT QrD@^DK]_\
WSVPPUQW[QQmU TS\RST
mW	SSU
RPTRU
SS\SW	
WTPR SWVSSSZDFACST_F_UVZ\ZG]S_BPUZF	;FUWAA
QXPV

 U[U 	 VrVGR[A[S]VW_XV\UWSW^QCIIF[]^__WWAUQDBPFKD^BMKBWFR@ZWSTWCd@BW^]_UWPW[PWPURZSoF^[@]moT
QSUPP\TPSQW	RW
PXW	PUWW[QQZEDIAQV TF_TTQ\XG\QW@[UXF	3D^WCAVS		
TVWP	 PWrWEZYJ[Z[_@P\USTW^QCIIF[]^__WWAUQDBPFKD^BMKBWFR@ZWSTWCd@BW^]_UWPW[PWPURZSoAT_L^moT
QSUPPW

P W	PU	[PW P TVPQ	SUP\
QPWQ 	W
  WVSSSZDFACST_F_UVZ\ZG]S_BPUZF	;DK]XS^

TQTVSZVPU VTTPTXVTpTDSRJ[XY\AYWUUQ
WSVPPUQW[QQmBUVG^mmU
SP\
PS	WTRQ	XW[W	QSUQWTVPQ	SYDMBAS_ TD\U TQ^ZD]X\@[WZE	 8D^UAB
WPVS
	TWP
R	  TqHPPG\UP
U\RB@BF[_\^V\WCWREK[FKF]CFKBUESIZWQVTBmKBW\^^\WSVPPUQW[QQmBUVG^mmU
SP\
PS	WTRQ	XW[W	QSUQWTVPQ	SYDMBAS_ TD\U TQ^ZD]X\@[WZE	 88