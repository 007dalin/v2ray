D]WBCWG]VyrpT{]tZjrx{ZwI~rsI~KRF}dsX|p^T{ssVy\wChs{y[h{YEzyrpT{sx^R{Z]XiYCP]tDjiUI~]` iEXP^DR{]{YEzyrpT{sxAjrx{Zj[sX|d`[|eZK|dcE~vXhsiKh ~dU iK[h]t]jeZI|Y{BsXpT{ssXR\g{Z]XT|Z~q]VyrpT{^pYTvVZ}Y{Gjv]^h]dHjfYhc
X|p^T{ssVy_sEQ^cXXx|tX|p^T{ssVy_sI{Z]XdZv`csI}ehTZsH}bDcI}HpDJ]K}bx@qYsVyrpZVwJKy[^ZVwJKyXFx{ssVyr{Whp]y[^ZP]Djbx@qYsVyrpZVY{y[xZq^:G\VACTF\UyqpWx\uYjqxx[vJ~q |rJ~HRErzAs[pWxrr[ie][x[\[~X`Y}p\UyqpWx\[DS`Y~XyGjjc[hfGjzgZPaGSKFR\P[|s^WxrrUy_][x[\[}eY|zKifZD|evHa |u}X|ex|ffFj_tkfbJ~fx~ueYy[F{xrrUyq{Ekib[[{RHzAs[pWxrr[Suw Przy[GS}BTu]FSX[|s^WxrrUy\sFR_b[[x u~[|s^WxrrUy\sJx[\[dYucbrJ}fdW|[rK}aG|bJ}KpG|K\H}axCrXrUyqpYUvKHyX^YUvKHy[F{xrrUyq{ Tiq^yX^YS\
GjaxCrXrUyqpYUXzyXxYr_:D\UBB	WF_VxpsW{\vZkp{{[uIp rIwUEeexZE{{rqVxpxXSfaX~Z{|ryBrZsW{rqXPtJVryx^x\P\fSJ\P\~]}^`[P_}DS^d {XGzxpsW{rzAkp{{[ekdgh[}H}gpX|yEwYHb |dw~fa |IQHvj]k^kIryBrZsW{rqXS^d {[_XU Y~p_VxpsW{_rYUtUY}XyGhdh hizDSE~HyBrZsW{rqXRtIVryxYc HyBrZsW{rqXR{Y}Xz~e`v{uuK|psIuyI}gsH~euKxwsJ}[}IxZE{{rqVxpx Py}X~Zx Py}X}r]W{rqVx]`QveX~ZxEP]xZE{{rqVxpx{[_X|Z{{T`;E_UAB
VE_UxspVz_vYksxzXuJs~qJJ|D}fq[}q^VzqqUx]wAiqyxZhz[GyxspVzqz]SzX_[UgXiuvD}]cZQ\}GS]gz[GyxspVzqzBksxzX~YktpjXXX}g`} eFtV }K[|dIfiEhZXiXa|dp j[yArYpVzqq[S]gzX_[U|Xs_UxspVz\rZUwVX|[yDhg[Reb^S^`Gz[GyxspVzqzES{zX_[t`Kz[GyxspVzqzERIxzYbcudV~fuxtxF~XuF|ttE~f}U|t|~Hu[}q^VzqqUx^cBPKyx^cBPKyArYpVzqq[Ux]Fiayx]GQ_e[}q^VzqqUx^hX|[yKxWA9D]WBCWG]VyrpT{]tZjrx{ZwI~rsI~KRFdwyXFx{ssVyr{[SgcXXx|s{BsXpT{ssXQvIVs{y_U_k]`YRHXVg|CjvI~]HjHx@qYsVyrpZSgcXX{^htx[j[p hsKvd~d`[~KtG}dcF~bkJQFvtkZ|YiKVZ~q]VyrpT{]]Trx{^VKyXFx{ssVyr{Dkh`^y[^Z~GjvgJkh`ARE{YEzyrpT{sxFR{{Z]X~u`I{YEzyrpT{sxFSHx{[abtdTdwKyuxDZwE}utGdV}u|JwX|p^T{ssVy_c@QI{y_c@QI{BsXpT{ssXTy]Dhc{y\EP]gX|p^T{ssVy_hZ}Y{HyVA
8F_TCBUE^WxrrUy_w[krzyXxI|rJ~vxE|eP|X|Y}p\UyqpWx\uBjqxx[jy[F{xrrUyq{_S}yX^YUyyTuY]UfKGjjJ}\ai E[S_~GR{^xXDyyqpWxryBjqxx[bvpkuj|fxIh\~F~ux rZ}H]Y}eP uxvjiH{YhXzAs[pWxrr[R_g x[\[T|Y}p\UyqpWx_qZTuVY~XzDiecDPibDy[F{xrrUyq{GSyyX^YubHy[F{xrrUyq{GRHzyY`ctfU}ftHxuzE}XtD|uvF}f|W|u~}HtY}p\UyqpWx_aASKxx_aASKxCrXrUyqpYUy_Ejaxx\DR_dY}p\UyqpWx_j[[xIxVC:FC_[P] V
  U
P		QWWUPV 	RsTEQZHXP\TU\Y__VUQwsvsquq
wsrqmE_ZH\mmu	spt	ps	turq	pvsw	qpuq
w	 tvsp	sYDEA@swtD\UuQ^ZD]P_A[WZE	;G@_XP^QSSTTTVPVPSWRpWDPYH[P_WT]Z_\V\]	tpvsrtq 	vprplYot	w	urqptt	ppttrrnw	uqrqwntu tvsp	su
pt
qpt
q 	 v
 wvssrZDFACrtwE_UvR_[G]S_BXV[F	;F\T@A
UFx{ssXTXx{s{HyXF}qYsVy_sI{Z]VyDTGeX]Tb_\A^___hX{CE[Ebu]^|j\Y@iC]@zAWkaEDzB^TycDQJ]G|`FPggGi\VgYR_{ChZeZZ~qzyrpZkg`Zy[^T{]JATyc@hh| SXGPs{Bt`^T{sxFR{{Z]Vy[`I{Bt`^T{sxAjrx{sx]j[pDhwdYrhZ|etKhg{Euw[kY ~[pDtH}ehIhwX|px{ssXif]X{Z]Vy[tJ{YEsXpT{]]Trx{sxSHx@va]Vyr{Whp]y[^T{]GR\dZ~qzyrpZSwKTrx{sxBQicPwdKTixFPgEX|px{ssXSvwSs{yrxEVe^[~BDPZwGyXF}qYsVy_c@QI{yr{PxXt`A
8D@^ZP_	TU		S SV PTQ
PUQ T	qUGSYIYP^UW^Z^^VPT
vpwsswp
urr
soYnt
t tqqrtv
ppuws	smwstpqq  n v  v twpsqt	rv
ppw	pu 
wwsrqZEDABqvuF_TwP\XG\Q_CZUXF	;EA]ZS_

VS PPPSWQPPqVDRXJYPP_KXUQwsvsquq
wsrqmZotv	vsrstwspwurqotqu
qsrn v  v wsuprwpt			uwqqpXEECApw vF]TtS\YE\P]@YUYD9D]WBCWGzyrpZVY{yrxJ{YEsXpT{^pKy[^T{EWEfZ_Ua	]]C\\]] j[yADXGcsVb_C]PzaiueHRSx`Sy|~I|\ _~|DQygGkgHQfU\VtYyXF}qYsVy\wXhs{yr{ZSgVKTixFkkX|px{ssXSvJVs{yrx|tX|px{ssXQf`Z}YsXj[gY|wt\jv|G|dsbKgdX|eV|JwE~ehDtsK}[xJkZQyXF}qYsVy\wChs{yrxKY{Bt`^T{sxDji`Z}YsXT|Z~qzyrpZVx^Fjbx{sxDR_{YEsXpT{]ZGS`Z}YsXi\]]QdH|\^{YEsXpT{^pYTvVZ}YsX| Uze[^yR~I{Bt`^T{sxRy|Z}YsXTvII{WzV`8D@^ZP_	RUSTQWT
V PWV	qUGSYIYP^UW^Z^^VTC
vpwsswp
urr
sotqu
qsrnv

ppwss
utrr
swpt	rqur  t
turq	pYGF@Apt wD\VtR^YD^S^@XWYE
:FC_[P]PSRQ
 TT 	SWS  P VQT sQX[_QYCZUXF]]uqtpsts	trq	pnXmw	u tpprwu	qsutp	s nvpwspp o  t wu
pt
qpt
q 	 v
 wvssrZDFACrtwE_UvR_[G]S_BXV[F	;DC^YS^STU	WTSRSSTQSSUP VpJXRD_UQwsvsquq
wsrqmBU^D_mmu	spt	ps	turq	pvsw	qpuq
w	 tvsp	sYDEA@swtD\UuQ^ZD]P_A[WZE	;G@_XP^	P

TSU TSTTTpWDPYH[[Y_AZ\WVQtsurpur tpsqnBV]E^nnv

ppwss
utrr
swpt	rqur  t
turq	pYGF@Apt wD\VtR^YD^S^@XWYE
:FC_[P]		 WVPRPRT	TTTSU UsTEQZHX[Z\@[_WRUtrtrsvswssrmCW^E]n mw		sqtsrtsv
swrsu	qwwsrqtrusstst
	vtprp[FDBBp vvE^W wS_YF_Q\CYVYG	8EB^[R\
R	 WUT
PSWQ
UTUPVRP Qr][][V^T]UP
 wswprtp	uqqpot	qvrpr mw		sqtsruwqqptstsqvs w		 utrr
sXFE@B s wwG]WwR]ZE_P^CXTZD:G\VACTFyyqpYUXzyqxIxXD|s[pWx_qHyX^WxDVEfY\T`
]^]]k_^yFH|g]XC_E}]DF{K^]}k_YCi@^A{BWhaFG{C]TzcGRK\D|`ESffDi _UfZR\{@k[fZY}pyyqpYhfaYyX^Wx\}]QeXPyzGi hY}pyyqpYRv
KTqxxrz~v|Y}pyyqpYPfb[[pY|eiYfY\~ejF~f|hXJ}egY}eTEjXZDejE}vpJ|[}_} hxXD|s[pWx\uBjqxxrzJ}[xCu`\Uyq{Ekib[[pYU~[|s{xrr[Tz]Gkbzyq{ES^y[F~rXrUy_YFRb[[pYh[BR_w_RXXj[xCu`\Uyq{Ghia]yX^WxX
ui^{GgKy`}K	Y}pyyqpYUvKHyX^Wx_aASKx~r_:FC_[P]SPW W	SSPR	R		SsQX[_QYD^S^@]]uqtpsts	trq	pnwpu	rrqmu	spt	ps	turq	pvsw	qpuq
w	 tvsp	sYDEA@swtD\UuQ^ZD]P_A[WZE	;G@_XP^ Q 
R
W S	 ST	TWWRpEC\FB]]]uqtpsts	trq	pnw	vp
u	sqvmu	spt	ps	vsw	qpuq
w	 tvsp	suwqqpXEECApw vF]TtS\YE\P]@YUYD9FB][Q_		V STQVP		WSWqIZPE\W@uqtpsts	trq	pnwpsuu	swspuqntqpv
pswvssru	qw	pst	p	utwpsqYEGBCqutE\T vQ_XD\R\B[VXE
8D@^ZP_	TUS	WUS TP qUGSYIYP^UW^Z^^VGY
vpwsswp
urr
sotqu
qsrnv

ppwss
utrr
swpt	rqur  t
turq	pYGF@Apt wD\VtR^YD^S^@XWYE
:FC_[P] URPW
 SWSPSS
STsJYPD^RUtrtrsvswssrmgjuvtsssutrquvpslo tvwvssru	qw	pst	p	utwpsqYEGBCqutE\T vQ_XD\R\B[VXE
8: