D]WBCWG]VyzpW{]tZjzx{ZwI~z |I}jI{BsPpW{ssXin][{Z]X~S`Y~q]VyzpW{]ZGS
`Y}Yx[Q~]Ekg]T
|Ehxd[QcEQIGSTRY~q]VyzpW{]^ZyS^YkJkF}SRhwEiThhs~SpH~dYKiCxDhgd]}dG}g|[jn`H{YEzyzpW{sxDja`Y}YxS@xCqYsVyzpYQwtQzx{Y RT]hhxKQac~I{BsPpW{ssXS~IVs{yS` I{BsPpW{ssXSq|Y}Yx~d	cv{twI~PpIt{I|mp~dwFy}t}ZIyPF{{ssVyz{ PxXP{ PxX|x^W{ssVyWcQwgXP{EP]yPF{{ssVyz{{Z]X}Px{Ta:O\UAC\F_UyqpWp\vYjqxp[uJ~q wH}qHwKe[|s^WprqUy_w@cryyXh pXGyyqpWprz]R p[_[i_gEcijDRugE`eGjucEZHGjj`Yup_UyqpWp\\YyX^YtiHvV`eSF~ tHwH juwZueXXje`DvuaEifZtuq~vtIpXGyyqpWprzGjj`YvXzSKxCzXqUyqpYZvvQqxpX	Kie]EuHyAs[pWprq[SuI]ryyX` tHyAs[pWprq[Sz|YvXz}dcvpuuH}qpItuyJ|fpueuEyvtv[}Jy[F{prqUyq{ [y}[[{ [y}[|s^WprqUy\cZve[[{E[^y[F{prqUyq{p[_[}[x{_`:D\UJB
WF_^xssW{\vRks{{[iA}Z{I|HCcH|u[P}q]W{rq^x]t@hryxZk {XGrxssW{rzVS| {[_PUdYhvvO}]`[P_}LS]d {XGrxssW{rzIks{{[[@|dsk\}C}gt[u[Mww}b |H~eSC|t{erR|ZVXbyJrYsW{rqPS]d {[_PUY~p_^xssW{_rQUwUY}XyORtZQ\fR}I{CqXq^xssYQv	@Us{{[a	|I{CqXq^xssYQy}P~YxfbxtwH|Hq@|t{H~eq}dwG{uu~ZH{XGrxssW{rz	SxY}Xz	SxY~p_^xssW{_bRwgY}XzLS\{XGrxssW{rzxZ]YXyrWa8G]\BCTGVVyqqUx]ZjqyxZ|I~qI~aK|JlX|s_UxsxVy_vBkspyXixYNzyqqUxss^R~xZVXR_fkwG|_bhMZR\}GSs_y[GyxsxVyqzBkspyX[ kd`jvz^}d|K~fyFwlKia[|tt|f}~t]Y~uj_|dRi[yArYxVyqq[S]oyX_[UtX|s_UxsxVy\rZUw^X[yDPgC|KyArYxVyqq[Rw HTqyxZh}KyArYxVyqq[RxtX[z}e kwyvuJcxH}vyJ}dx|fuExt|X}JxYNzyqqUxssRz}[~YsRz}[}qVVyqqUx^kSue[~YsDR ^xYNzyqqUxssyX_[|YpzVc;FTTCA
UN^W{ssVyTw[hs{yShH~Z{H~@J|YH}CpY~q]VyzpW{]tAjzx{ZkyPF{{ssVyz{_P|yS^YVxx T~Y]VgJDjaJ~]` iE[P^DR
{^{YEzyzpW{sxAjzx{ZQ}T]kdwH|m]]h]gE~}hG|c}h~dQ~}{ZgxZiShGkc{BsPpW{ssXRTg {Z]XT
|Y~q]VyzpW{^pYT~VY}Y{GiTgCP_|@xCqYsVyzpYQwHTzx{Zc}@xCqYsVyzpYQxXP{f `wy}tHcsH}}xH~ds|mtG{twS|H{YEzyzpW{sxRq|Y}YxRq|Y~q]VyzpW{^`S~dY}YxDR\{YEzyzpW{sxyS^YY{zVh8F^TCJQWUUS
	UPRPV 		QUyIYPE\WHT^ZCIBD[^^__\UBUZDB[DKDUBFIBTMR@XWPT\CdK@W^V_UW[WPRTP	URQPoTQR_USWRSUqoUSP\	PS	TVRQ	XU[W	QPUQ	W TVSS	SYDMACS_TD\UVQ^ZD]X_B[WZE	 ;F^UAB
RVT[T

  UPSR  	SqSQX^SXG\QWC_\
U\S@H@MX_\\^^\CWSGCYMHF\AD@AUDQAQTQVU@eIIT\_\TTRTR[US WSSQmW STSQQoTQXU
P[WVSSQU	RWPST	P	U \WPSQQEDBCQVTETT VQ_XL\Q\B[VXM	8D@^ZX_
V	TPS WW[TTS	UqW_UU\U\\TRTR[US WSSQmW STSQQoTQXU
P[WVSSQU	RWPST	P	U \WPSQQEDBCQVTETT VQ_XL\Q\B[VXM	8F^TCJQSU 
VUP	P 	 S Ty\Y^[U^WVWS
T^QBKADP^^^]_UBUQE@XD@D^CEIITFSBX\PTWBfH@\^]^W\PVSRTQ 	 UPR PoU	QW RSSn\	
PQTRR UTPR PWSUXQWXT			U_RQPXME@APW VF]\TS\YETP^@YUYD :D\WBCWR[U
		 WRSV	 
STPpZYY\QZCZW
UWRBK@FX_W^]^WC\RE@YFHM]CDKAUESBZTQ]TBfIBTW^^WTSVRPUQ \PSQfUXWSPSmUSP\	PS	TVRQZU[W	QPUQ	W TVSS	SYDMACS_TD\UVQ^ZD]X_B[WZE	 ;F^UAB
QVRS[
	T UP
U P	SqWTTW_UE[W_SKH@FY]_W^^WATSLCYFIE\JDK@WDZAZUSUUKeIBU__WTUR_RPWX	TSS	Sn\PT	QQZ oU
QSW	[P	TVSS	SU	P\
QPT	Q 	U
  WVSSQZDFACQT_E_UVZ_XG]S_BPVXF	;FUTCA
TRQ	 U[W  	[	rT]VU]^WWQW
U\RB@AD[_\^V_UCWREKXDKF]CEIBUESIXWQVTBmH@W\^^\WSVSRUQ	W[RQmURS\T		T	TRnW	PQU
RRWW[RQTRUSS\ST		
UTPR PXFDBB
P VVM]W WSWYE_Q\CY^YD	8G\\BC V\S	TR		T	 R	pU]WV]\WC
T^QBKADP^^^]_UBUQE@XD@D^CEIITFSBX\PTWBfH@\^]^W\PVSRTQ 	 UPR PoUR	PW U
	TVRngaU
U WPSSUU
RQVW[P m   V_UTRZ	SW PT	QQU Q  \
TVRQ	XYDF@AXT WD\UTR^QD]S^@XWQE	:D\UJB
WF rxssYVXyxs{I{XGwrYsW{_rCxZ]W{DUDeY_Tc\\@\^U\jYq@E[ GbtW]|j][@hI^@z@Uk`OGzB_VybNRJ]F~aLSggFkVUgXP_zIkZ }e[P}q{{rqPhg`[{[_^x]VDhfTMkc^kbyJua]W{rzNSx {[_^xZc HyJua]W{rzIks{{ryAZpZhezS|s}fa@}dwHhfyMhgd]H ZsGu}	|ZdYkfiP}q{{rqPhg^[{[_^xZwI{XGwrYsW{_~STc{{rzQUh`F{XGwrYsW{\UUs{{rz
RI{Cv`_^xsx WirUxZ]W{\OS]gY~p rxssYSv	CUs{{rzWSgd^PfeLkwY~p rxssYQvv	Ps{{ryOT^VhQybnTwUF{XGwrYsW{_bJRI{{rz	SxY~p rxssYQIxZ]W{Xywr^8G]\BCTG	zyqq[UYpyqyKxYNs[qUx^{KyX_UxE\Eg[\Uj	]^B_W]] iPyAGYDcxVc_H]S{`i~eISPxkSz}}I |_^}wDQzfFhgHQeT]UtRy[G|rYxVy_vYkspyqz[Pg]KTjyGh`X|s yxsxXSu	KUspyqyttX|s yxsxXQea[~YxX~fbYtQX} eF~tU\~a J|goX|euhE~fiE|txK~vy h]k[y[G|rYxVy_vBkspyqyJ|YpBtc_UxssKi[[~YxXijfSIpBtc_UxssDjja[~YxXT}[}q	zyqq[UxUFjayxssDR ^xYNs[qUx]QGSa[~YxXi_\\RoH|_~_xYNs[qUx^{YTuW[~YxX|T`h~gbX}IpBtc_UxssRz}[~YxXTuHHxYNs[qUx^wDQayxspXtc@;DK^ZS^Q	T PTP[RT]QpFC_MC_]^UR_RPWX	TSS	Sn\VP	T	PR]oU
QSW	[P	U	P\
QPT	Q 	U
  WVSSQUTRZ	SXFE@JS WWD]W_R^ZE_P^KXWZD:O]UACXPRU 	
 \SW   TpTDSRIYS_TT^Q^^UUP
U\RB@AD[_\^V_UCWREKXDKF]CEIBUESIXWQVTBmH@W\^^\WSVSRUQ	W[RQmE_RH_mmUSP\	PS	TVRQ	XU[W	QPUQ	W TVSS	SYDMACS_TD\UVQ^ZD]X_B[WZE	 ;F^UAB
	TP
	VU UP   PUqVLR[JYXX^IX^UQW
U\RB@AD[_\^V_UCWREKXDKF]CEIBUESIXWQVTBmH@W\^^\WSVSRUQ	W[RQmBUVD\mmUSP\	PS	W	Q	URW SPTRU_RQP\STSQUS  W		UTRZ	SXFE@JS WWD]W_R^ZE_P^KXWZD:MC_XQ\UXVVZRTRWTTVSUPTVrWEZZH[Z[_@P_WWSUR_RPWX	TSS	SnC\^E^o n\	
PQTRR UTPR PWSUXQWXT			U_RQPXME@APW VF]\TS\YETP^@YUYD :D\WBCTQ_QW  WR	[ 
	VpAXRG^VQW_SKH@FY]_W^^WATSLCYFIE\JDK@WDZAZUSUUKeIBU__WTUR_RPWX	TSS	SnC\^E^on\	
PQTRR UTPR PWSUXQWXT			U_RQPXME@APW VF]\TS\YETP^@YUYD :8