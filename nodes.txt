D]WAC	WG]Uypq^{]tYjpy{ZkJ|Yy@|IH~J@|tg[|r_^{ssUy^vIhs{yYi	{YEyypq^{sx]R ~	{Z][TfPhwtD|^bRP^GR^f	{YEyypq^{sxBjpy{ZwEwi@|cH|gq	dcF~wW	}s[gS~dp_dvQh]c ~tuI{AsZq^{ss[R^f	{Z][T }P~q]Uypq^{^pZTtWP}Y{DS f@Q]R^aO{YEyypq^{sxER z	{Z][~waC{YEyypq^{sxESJy{[bbve^dwywyNZ{F}w}MtYU}wWJw[|r_^{ssUy]bJQI{y]bJQI{AsZq^{ss[T{\Nhc{y^OP]g[|r_^{ssUy]iP}Y{KyT@ 8F_WC@
UE]WzsxUy_t[ispyXwH}s~KH~tlG}fsIzYNyyqsWzssZQecY|Yp ~q{CpYxUyqsYRw HTq{z]w]QeXQ]oSK[Wgw@juJ] KjK{CpYxUyqsYRgh[[{J~gp~vcH~c	E}egJdhH~HsDjZxjq]iZ]Yiew ~tREi cYqVUyqsWz]^Tq{z^]Hy[E{zsxUyqxGjhk]yX]YcDS_AFzYNyyqsWzssERx zZV[~vcJzYNyyqsWzssESK{z[bbwgW~d| yv{G~ZpF}vD~tRU}vU~J|[|s]WzsxUy\`CPIpy\`CPIpAs[sWzsx[Tz^Gicpy_FQ]l[|s]WzsxUy\kY|YpKyUB	9FTWCAUN]W{qqTyTt[hqyySwH|q~@}aJ}j{Cq[qTyzsYke\XyS]Y|XaZ|x]W{qqTyTZFQaZPxhezXin
EhzfYQ`EQKESTQY~s_TyzsW{_\XyS]YkHe}U}viG}TxZka }mp\~evYjScDhu~_}mQH| ujSg{[GxyzsW{qzFjacY}[z S@{Cq[qTyzsYQuvQz{{[	]ST^G~Ky@sPsW{qqZS~IVqyySc Ky@sPsW{qqZSqY}[z|d	`v{vuK}@sIvyJ|msJ~fqy}s}X}KyPE{{qqTyzx Pz}ZPx Pz}Z|x]W{qqTyW`QueZPxEP _yPE{{qqTyzx{X_Z}P{{Tc:O_UAA
\E_U{srWp_vYhszpXiJ~ZzIwK|YIwvu[~q\WpqqU{]u@cqy{Zj p[Gy{srWpqz]P} pX_[k]eEcjjDPweE` eGhwaEZKGhhbYus_U{srWp_\Y{Z\Ytfb^kdu\wXiFdjIc[ hw}[ufW Z~DtfX_|tbJcvf_}gyZp[Gy{srWpqzGhhbYv[zQIzCz[qU{srYZuvSszp[	]hguC]uX~IzCz[qU{srYZu	KVszpXaIzCz[qU{srYZz}[}Yymbt{tvJtqqKtzIufqH~drpvq}Z~Hp[Gy{srWpqzPx~Yv[zPx~Yus_U{srWp\bQwfYv[zGP\p[Gy{srWpqz {Z\Yt[yyTa3D]WAC	WG]Uypq^{]tYjpy{ZkJ|Yy@|I ~p@Zs[|r_^{ssUy^vIhs{yYi	{YEyypq^{sx]R ~	{Z][T{zVwZ_TdHLhh|H|^bkFYR]}LPx\yZGr{ssUypzIhs{yYfQdZZ}Y}
~d^[jgSM|ttZ}`P}dxX|ge}dg~du|Zt^i`yJqYsUypqPP]dyY_PV[|r_^{ssUy]rQVwU[ZyOhgERt	~I{AsZq^{ss[St	@Vs{yYa	I{AsZq^{ss[S{}P}Yx}db{twJ}`q@t{K|gqC~dsywq}ZJyZGr{ssUypz	Px[Zz	Px[|r_^{ssUy]bQwg[ZzLP^yZGr{ssUypz{Z][}ZyrTa:E\\ACS_W WQ
VRPST	 
SWpJ[RF^UA \\S@K@GYV\\]^VJWSG@YGIF\ADJ@\DQB[UXVU@fICU\_\WURTRQ\S 
	WPS	XmW
RPVW		[U PPWslW
QXU
R[WTQSQW	RUSSV	SU 	 \TPQ
QQFDBA Q V VGTW TS]XL_Q\@YTXM	8D\VCJP	UVRWWRQ	P 	PyQX[\Q[ETS^@]_
W^PB@BD[]^^V\UAUPEK[DKD_CFIBWGSIXWSTVBmK@W^\^\WQVPRWQ	U[QSoU	Q\QRSmW
SQWRRUU[QSVPUSQ\S 
W	
	
UTRP SXFF@@
S TVM]WUSWZE_S^AY^ZD:GBVXQ\T
 VXQU_R VVQWrU]VWTW_^

WQVPRWQ	U[QSoU	Q\QRSmW
SQWRRUU[QSVPUSQ\S 
W	
	
UTRP SXFF@@
S TVM]WUSWZE_S^AY^ZD:E\\ACR [W	  TVRS	 QVp_[\XWVU_UQ	W\SAIIFY]\]_WWAWSFBPFIF\@MK@WDP@ZUSVUAd@BU\_]UURU[PWR	WRZ	SmVSU	QQPfU
XSW
QP	WVRZ	SU PV
QSU Q 	\

WVPS	XZDFBCXTUD_U VP^QG]S\BZWQF	8F_UJA
_PR WUQ[T  		PVXrSZ[^RXKSTW^Q@ICDP]^\_]UAUQGBZD@D^AGIIWFQ@X\STW@dJ@\^]\U\PTQRWS	 URP SoW	QU QSQoW
QXU
R[WTQS
SW	RUSSV	SU 	 \TPQ
QQFDBA Q V VGTW TS]XL_Q\@YTXM	8D\VCJST	ZQR
VWR	W 	 R
QyU]WU]VMY
UWQBKBDZ_W^]\UC\QE@[DJM^CFICUFSBXVQ]WBfK@VW]^WVPVPRUQ 	
\PQ
QfU	XW
SSSmV
SQURR
\TPQ
QWRURXWRW		UU[QSXGDIASV VF]VTS\ZE^QW@YUZD
	3D\WAC	WPS	

WR
U   RpW_^WT]UUS_V^Z@IBFY\^\_\W@UZGB[FIDUAFK@VMQ@ZURT\@dKBU^V\UU[TPPVS	URQ	RoWP	[U	WW
VPmUSSVPP	U_RQ	R\QW
QQUQ WWVRZ	SZDG@JSUTD_U_Q^ZG]R^K[WZF	
:O^UAA
TU Q

\P
W  P rW^U^_UUA	W\SAIIFY]\]_WWAWSFBPFIF\@MK@WDP@ZUSVUAd@BU\_]UURU[PWR	WRZ	SmVPRU	V
\TQfehW]	UXQPWVPSTURRoU V VVPSQU	R\
SRW	S	U WTQSQZFDCCQ V_F_WVZ\XG_Q]BPUXF	9FTWCAUN{{qqZTP{{qyJyPE~q[qTyWpJ{X_TyLWGgZ]\a_^C^\\_ h[xCGYEjv^^~h^YHj@]BxCWcbFDx@\Tq`GQH_E|
cEPeeEi_Ve[RWx@h XmYY~s xyzsYkebXyS]W{_TGjnVDha]ij{Cvc_TyzxGPzyS]W{Xa}@{Cvc_Tyzx@hqyyz{H|XrYjmxZq ncI~fuKjn{Dkef^}@|XqD}} XfZinkY~s xyzsYke\XyS]W{XuJyPE~q[qTyW|ZWayyzxXVjbEyPE~q[qTyT\VqyyzxQKy@th]W{qzUap\{X_TyTFP_eZ|x{{qqZQ~JVqyyzx^Pef]RngEh uZ|x{{qqZS~t Sqyyz{FW\TkSq`gWuWEyPE~q[qTyW`CQKyyzx Pz}Z|x{{qqZS@{X_TyP{~q\ :O_UAA
\E y{srY][y{szIp[G|qYrWp\rH{Z\WpGUGdYTWc
_\@W^^_aYzCEZ LaqU`]A^QxbkwfJQXzbQx~uK	~]\u ~GSxeD`eKSgW_]v[{YD~z[qU{]u[cqy{syYXeTHVhzE` i[~q{pqq[Qw
I]qy{sz wv}[~q{pqq[SgbYv[q[|da[wvX[fDvv\_|cHtef[~gvw aF|djGtvqH|tz`_bX{YD~z[qU{]u@cqy{szHt[yAva\WpqzHkXYv[q[khe [KyAva\WpqzGhhbYv[q[V~Yus y{srY]z\EhczpqzGP\p[G|qYrWp_XDQbYv[q[k]_^ZfK~]}]p[G|qYrWp\rZVwTYv[q[~Wh k|eaZuKyAva\WpqzPx~Yv[q[VwKJp[G|qYrWp\~GSczpqy[vaC	3FB]XQ]
S WRVXR
Q
VT SsDK]D@]^\VPVPRUQ 	
\PQ
QfU	UXW
RPTmV
SQURR
WRURXWRW		UU[QSVVPSQ[DMBCQ_TF^U VQ\XF]X\B[UXG	 8F^WC@
QSP  ]

UP	 U 	VsVLQ[J[Q\V\\X]\WWXV^Z@IBFY\^\_\W@UZGB[FIDUAFK@VMQ@ZURT\@dKBU^V\UU[TPPVS	URQ	RoM][K]ooW
QXU
R[WTQSQW	RUSSV	SU 	 \TPQ
QQFDBA Q V VGTW TS]XL_Q\@YTXM	8D\VCJ
VX

T]WR	 	 RVyTEQYHZZP\@[\WS_V^Z@IBFY\^\_\W@UZGB[FIDUAFK@VMQ@ZURT\@dKBU^V\UU[TPPVS	URQ	RoJW_G^o oW
QXU
R[US
 V
P	U	PR\Q WVPS	XU	[WQSW	Q	U
VVPSQ[DMBCQ_TF^U VQ\XF]X\B[UXG	 8D@]ZR^
	WQTTSQVQUVVT[WSVUp_GSYJYYYWBY\UTQVPVPRUQ 	
\PQ
QfAU]G\lfU
XSW
QP	WVRZ	SU PV
QSU Q 	\

WVPS	XZDFBCXTUD_U VP^QG]S\BZWQF	8F_UJA
\SVS	_UQR 	 
TrH[PE]^S
UWQBKBDZ_W^]\UC\QE@[DJM^CFICUFSBXVQ]WBfK@VW]^WVPVPRUQ 	
\PQ
QfAU]G\lfU
XSW
QP	WVRZ	SU PV
QSU Q 	\

WVPS	XZDFBCXTUD_U VP^QG]S\BZWQF	8: