D]WBCWG]VyzpU{]tZjzx{ZwI~z|IzJdQX|x^U{ssVyTwBhs{ySh{YEzyzpU{sx^R
{Z]XTg[hwtG|TcYP^DRTg{YEzyzpU{sxAjzx{ZQI}SZ]g|mgZk]kE~~dJkc}^~dcjm|J|]x[}k[}c{BsPpU{ssXRTg{Z]XT
|[~q]VyzpU{^pYT~V[}Y{GSwBPs
X|x^U{ssVyWsDQ^cXPx|tX|x^U{ssVyWsH{Z]XdRw`csI}mRUZsH}jE}cI}PpJZ]F}jxAqYsVyzp[VwJKyS^[VwJKyPFy{ssVyz{Whp]yS^[P]DjjxAqYsVyzp[VY{ySx[q^:O\WAC\F]UyqpWp\tYjqxp[wJ~q wHqwb{As[pWprs[ie][p[][~X`Yup]UyqpWp\ZDS`YvXxXQu]E`f^T|EcydXQ cEZHDS_RYup]UyqpWp\^YyX^Ytuc }v|`KQF~fUY`H}vwZufxZfVD`KhZif|HwusJiXppXEyyqpWprxGjj`YvXxSKxCzXsUyqpYZvtQqxpXHQeUE`i`S_dFpXEyyqpWprxER{ p[][~v`JpXEyyqpWprxESKxpZbbwdWtew yvxGt[wF}vZDte{U}fxtuw[|s^WprsUy\cCZH{y\cCZH{As[pWprs[Tz]Gcb{y_F[\g[|s^WprsUy\hYvX{KyUA	3G_WCATE]W{rq^x_t[hryxXwH|r	Kr@|vYY~p_^xqsW{\vIkq{{[i	x[E{{rq^xqx_P~	xX]Yk\fLkjhFPvfLh gEhvbLRKEhiaP}s]W{rq^x_^[{[_PkvkH|[vRk_wDhui|q |vaA}etX|yM|fcIeW|ewh[q	x[E{{rq^xqxEhiaP~[xQHyJr[sW{rqPRut Sryx[SfR}K{CqXq^xqsYQv	@Uq{{[a	|K{CqXq^xqsYQy}P~[xfbxvwJrq@|v{H~eq}fwI{uu@~XsH{XGrxqsW{rz	SzY}Xz	SzY~p_^xqsW{_bRugY}XzLS \{XGrxqsW{rzxX]YXyrWc8G]\BATGVV{qqUx]ZhqyxZ`I~XyKIqHIpBq[qUxsxXke\YxZVX|Xa[}qVV{qqUx]QGQa[~YsQ\fPwc Pu^RtDhzfXPkDQKDR]ZX~s_UxsxV{_\YxZVXkH\_gtKk uF|wpka |gsX~fWJ|JhEkfaJZkY|_uK|dx {[GyxsxV{qzGkhhX}[zRIpBq[qUxsxXQuvPsp{[	HUxs]P_TPwoD~KyArYxV{qq[Rw HVqyxZhKyArYxV{qq[RxtX}[z}e kw{vuJ|cxHvyJ}dx~fuKxt|H}XqJxYNz{qqUxssPz}[~YsPz}[}qVV{qqUx^kQue[~YsDP ^xYNz{qqUxss{X_[|YpzTc;FTTAA
UN^U{ssVyTwYhs{yStJ|s~@}sI}mZ[~q]VyzpU{]tAjzx{ZkyPFy{ssVyz{]P|yS^[P]dj~wD~]` iEYP^DR
{\{YEzyzpU{sxAjzx{Z`Z}}ZHkgxY|mRJhdgE~}dE|s}SX~dc~Tw^dYK~~x|c{BsPpU{ssXRTg{Z]XT
|[~q]VyzpU{^pYT~V[}Y{GSgZQ]|^|@xAqYsVyzp[QwHTzx{Zc}@xAqYsVyzp[QxXP{}f `wy}tJ|csH}}xJ~ds|mtK{twHSpJ{YEzyzpU{sxRq|[}YxRq|[~q]VyzpU{^`S~d[}YxDR^{YEzyzpU{sxyS^[Y{zVh8F^TCJQWUWS
	UPRPT 		QUyI[PE\WHT^ZCKBD[^^_]\UBUZD@[DKDUBFIBTMRBXWPT\CfK@W^V_WW[WPRTP 	UPQPoT
QR_WSWRSWqoU
SP\	PS	TTRQ	XW[W	QPUQW TVSQ	SYDMAAS_ TD\UTQ^ZD]X_@[WZE	 ;D^UAB
PVT[T

  WPSR  SqSQX\SXG\QWC_\
W\S@H@MX]\\^^\AWSGCYMHF\AD@AWDQAQTSVU@eIIT\_\TTRTR[WS WSSSmW STQQQoT
QXW
P[WVSSSU	PWPST	P 	U 
\WPSQQEFBCQTTETT VQ_XL\S\B[VXM8D@^ZX_VTPS WW[ TVS	UqU_UU\U\^TRTR[WS WSSSmW STQQQoT
QXW
P[WVSSSU	PWPST	P 	U 
\WPSQQEFBCQTTETT VQ_XL\S\B[VXM8F^TCJQSU 
VUP	P 	 S Ty\[^[U^WVUS
T\QBKADP^\^]_UBWQE@XD@F^CEIITFSBX\PVWBfH@\\]^W\PVSRTQ 	 WPR PmU	SW RSSn\	
PQT
RR WTPR PWSUXSWXT			U_PQPXMEBAPW VF]\ TS\YETP\@YUYD 8D\WBCWR[W
		 WRSV	 
STPpZY[\QZCZWUWR@K@FX_W\]^WC\RG@YFHM]ADKAUEQBZTQ]T@fIBTW^\WTSTRPUS \PSQfWXWSPQmU
SP\	PS	TTRQZW[W	QPUQW TVSQ	SYDMAAS_ TD\UTQ^ZD]X_@[WZE	 ;D^UAB
SVRS[
	T WP
U P	SqWTTU_UE[W_SKHBFY]_W^\WATSLC[FIE\JFK@WDZAZUSUUKeKBU__WTUR_PPWX	TSQ	Sn\PT	QQZ mU
SSW	[P	TVSQ	SUP\
QPTQ 	W
  WVSSSZDFACST_E_UVZ_ZG]S_BPVZF	;FUTAA
TPQ	
 U[
W 	[rT]VU]^UWQW
U\RB@AF[_\^V_WCWREKXFKF]CEKBUESIZWQVTBmHBW\^^\WSVSPUQW[RQmUPS\T		T	TRnW	PSU
RPWW[RQTRU
SS\ST	
WTPR PZFDBB
P VVM_W WSWYG_Q\CY^YF	8G\\BA V\S	TR	T	R	rU]WV]\UC
T\QBKADP^\^]_UBWQE@XD@F^CEIITFSBX\PVWBfH@\\]^W\PVSRTQ 	 WPR PmURPW U
	TTRngaW
U WPSSWU
RSVW[P m   V_UTRZSW PT	SQU S  \
TTRQ	XYFF@AX T WD\WTR^QD_S^@XWQE:D\UJBWF rxqsYVXyxq{I{XGwr[sW{_rCxX]W{DUDeY_Tc\^@\^U\jYq@G[ GbtW]~j][@hI^Bz@Uk`OGxB_VybNRH]F~aLSegFkVUeXP_zIk Z }e[P}s{{rqPhe`[{[_^x_VDhfTMka^kbyJuc]W{rzNSx {[_^xXc HyJuc]W{rzIkq{{ryAXpZhezS|q}fa@}fwHhfyMhed]H XsGu}	|XdYkfiP}s{{rqPhe^[{[_^xXwI{XGwr[sW{_~STa{{rzQUj`F{XGwr[sW{\UUq{{rz
RK{Cv`_^xqx WirUxX]W{\OS_gY~p rxqsYSv	CUq{{rzWSed^PfeLk wY~p rxqsYQvv	Pq{{ryOT\VhQybnTuUF{XGwr[sW{_bJRK{{rz	SzY~p rxqsYQIxX]W{Xywr\8G]\BATG	z{qq[UYp{qyKxYNq[qUx^{K{X_UxE\Gg[\Uj	_^B_W]_ iPyCGYDcxVc_H]S{`i~eISPxkQz}}I ~_^}wDSzfFhgHSeT]UtR{[G|rYxV{_vYksp{qz[Pg]KVjyGh`X~s yxsxXQu	KUsp{qyttX~s yxsxXSea[~YxX|fbYtQX eF~tU\|a J|goX~euhE|fiE|txK|vy h]k[{[G|rYxV{_vBksp{qyJ|YpBvc_UxssKk[[~YxXkjfSIpBvc_UxssDhja[~YxXV}[}q	z{qq[UxUFhayxssDP ^xYNq[qUx]QGQa[~YxXk_\\RoH~_~_xYNq[qUx^{YVuW[~YxX~T`h|gbX}IpBvc_UxssPz}[~YxXVuHHxYNq[qUx^wDSayxspXvc@;DK^XS^Q	T PTP[
RT] QpFC_MC]]^UR_PPWX	TSQ	Sn\VP	T	PR]mU
SSW	[P	UP\
QPTQ 	W
  WVSSSUTRZSXFE@JS WWF]W_R\ZE_P^KXUZD:O]WACXPPU 	

 \SW  VpTDSRI[S_TT^Q^\UUP
U\RB@AF[_\^V_WCWREKXFKF]CEKBUESIZWQVTBmHBW\^^\WSVSPUQW[RQmE_RH]mmU
SP\	PS	TTRQ	XW[W	QPUQW TVSQ	SYDMAAS_ TD\UTQ^ZD]X_@[WZE	 ;D^UAB
	TP
	VU WP   PUqVLRYJYXX^IX\UQW
U\RB@AF[_\^V_WCWREKXFKF]CEKBUESIZWQVTBmHBW\^^\WSVSPUQW[RQmBUVD^mmU
SP\	PS	W	Q	 UPW SPTRU_PQP\STSQWS  W		UTRZSXFE@JS WWF]W_R\ZE_P^KXUZD:MC]XQ\
UXTVZRVRWVTVSUPVVrWEZZJ[Z[_@P_UWSUR_PPWX	TSQ	SnC\^G^o n\	
PQT
RR WTPR PWSUXSWXT			U_PQPXMEBAPW VF]\ TS\YETP\@YUYD 8D\WBCTQ_SW  WR	[ 
 	VpAXPG^VQW_SKHBFY]_W^\WATSLC[FIE\JFK@WDZAZUSUUKeKBU__WTUR_PPWX	TSQ	SnC\^G^on\	
PQT
RR WTPR PWSUXSWXT			U_PQPXMEBAPW VF]\ TS\YETP\@YUYD 88