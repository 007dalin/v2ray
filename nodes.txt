D]WBB
WG]VxssP{]tZks{{ZkI}Z{N|I~sOZYX}q]P{ssVx]tGhs{xZk{YEzxssP{sx^S|{Z]XUxxVwZ\UgJBhh|K}]`kFZS^BPx_xYE|{ssVxsxGhs{xZ{ZgFhdt[~dgKhgkC|tQ|c_hdK}g{N|ZQ~tYkc{DqYsVxss^P]dxZ]^VX}q]P{ssVx^p_VwUX~Y{AQ`]hgA{YEzxssP{sxFSx{Z]XtcM{YEzxssP{sxFRI{{[acugPdwIxt{@ZwE|dsCZQV|tQJwX}q]P{ssVx^`DQI{x^`DQI{BrYsP{ssXUx^@hc{x]AP]gX}q]P{ssVx^k^}Y{HxWB8F_TBCUE^VyqvUy_wZjq~yXhI|X~K~KK~KJ}HtX|sXUyqpVy_qBjqxyXny[FzyqvUyq{^RyyX^Xi_aGjjkGRuaGi dDjueGSKDjjf[|s^VyqvUy_]ZyXX[}fc\~X[Z~e|EiXq[}qjvr|fY\jurFj_x~vqYf]Z}vbEy[FzyqvUyq{Djjf[[{SK~As[pVyqv[SuwQq~y[Yi_[AQjc|K~As[pVyqv[SuHTq~yX`}K~As[pVyqv[Sz|X[}}dcwyvrH}qpH}v~J|ftF|f~yvpXzJy[FzyqvUyq{Rzz[[{Rzz[|s^VyqvUy\cSub[[{DR ^y[FzyqvUyq{yXX[}[xzVc
:D\TCAWF^W{tsW{\w[ht{{[hH~]{I|H^}rxCq^sW{rpYk`^[{[^Y|]cY~p^W{tsW{\YFQcY}X{Eho`[kf	EhdZScEQNFQ\RY~v]W{rpW{Z^[{[^Y|cpZ|epJckDh[c\|t huRG~cUk[|Dhs|X|vh]ZYk[ZI{^E{{rpW{txEhi`Y}^xQHxCq^sW{rpYQpt Srx{^ZPICh`| ~HxCq^sW{rpYQpIVrx{]c HxCq^sW{rpYQY}X{f`v{utH|dsIuxH~cwG~ex{ss}[|H{^E{{rpW{tx Py|Y}^x Py|Y~v]W{rpW{Y`QvdY}^xEP\{^E{{rpW{tx{[^Y^{{T`8A_UABRE_UxrqU~_vYkry~XiJ}[yKyK|XKzvW[}p_U~qqUx\vBmqyx[i~[GyxrqU~qz]S~~X_[hXBU_vGkiTH{_bhDYU\}GSz\~[GyxrqU~qzBkry~_v[|KWzvS}fynHSFuvXz[[va{fi\yKyfj^kff^z[yArXqU~qq[S\f~X_[U}[{s_UxrqU~\rZUvW[x[yDR\\U_vUiz^{KyArXqU~qq[Rv	KSqyx[azKyArXqU~qq[Ry}[x[z}ebt~vuJXqKzvyJ}euE{fyxuqxX}JxXGy~qqUxrzUz}[~XzUz}[}p_U~qqUx_bTue[~XzGU ^xXGy~qqUxrz ~X_[|XyyQc;G]WDA
TG]P{ssVx]t\hs{xZkO~Z{HIMIH|ZQ^~q]VxssP{]tAks{{ZkxYE|{ssVxsxXP|xZ]^VdXkwtA~]`ZS^BP]dxYE|{ssVxsxGhs{xZU@|gwKh]x_~dQF|]kC|tZ\|skH}gwOk]{kdV[t`\|I{DqYsVxss^P]dxZ]^VX}q]P{ssVx^p_VwUX~Y{Ah^x}I{DqYsVxss^QwHUs{{Zc|I{DqYsVxss^QxX~Yxxf `wxtwO|IsH|t{O~dwF}d{{ts~ZO{YEzxssP{sxSx^}YxSx^~q]VxssP{^`Rwg^}YxDS[{YEzxssP{sxxZ]^Y{zWa
8F^TBCQWT RS
		UPSSQ 	QTpJ^PE\VAT_S@NBD[^_\X\UBTSGE[DKE\AFIBTDQGXWPUU@cK@W__\RWRTPRTS	TUQPnWQSVRSWSPRqoTSPU
PSWQRQQRRW	PSUPWTWPT	SYEDBDSVTD\T QQ^ZD\Q\E[WZE	8A^UABUVTRW

 RPSS SqRX[YSXG\P^@_\R\S@HAD[X\\^_UDWSGCXDK
F\AEIBRDQAXWVVU@eH@W
\_\TW RTSRRS	WSRVmW	STTQQnWPQR
PRWVSRVUUWSSTS	T	UTPSPXFCBCP QTE]W VQ_YE_V\B[VYD8D@^[Q\V	 TPRWWRUSS	TrP_UU\T_[W RTSRRS	WSRVmW	STTQQnWPQR
PRWVSRVUUWSSTS	T	UTPSPXFCBCP QTE]W VQ_YE_V\B[VYD8F^TBCQST	
WUPS  S Up_^^[U^V_PS
WYQBKAEY]Y^]_TARQE@XEIC^CEH@W
FSBYUSSWBfHAUY]^WUPVSSWQ 	RPR	ShUVW	QSSnU

PPWRS	RTPR	SWPU	QVWQ T
	TVUQPYDFGAPT VF\UTS\YD]SY@YUYE	=D\WBB
WSR R
	WRSW STPqSZ^\QZCSTT^QEK@FX^^Y]^WBUQB@YFHD^DDKATFTBZTPTWEfIBT^]YWTPQRPTV UPSPoRQWRSTmTSPU
PSWQRQ	SRRW	PSUPWTWPT	SYEDBDSVTD\T QQ^ZD\Q\E[WZE	8A^UABVVRRR
	TRP
T  P	SqV]WP_UEZ
W_RBKGFY]_^]YWATRE@^FIE]CCK@WESBZUSUTBfNBU_^^WUSVUPWQ 	TPT	SnUPW	QPShU
	VSW	RP	TWPT	STPU
QPWQ R
 	WVSRVZDFABVTVF_UWS\_G]S_CYU_F	;G\WDA
WUQ
 TRW RrT]VTT]PWQWU\RCIBC[_\__\RCWRDB[CKF]BFNBUER@_WQVTCdKGW\^_UWSWPUUPWRQQmTUSUT	W 	TSmW	SVU
SUWWRQQTRTSSUS WRTPR	S_FDBBS VWDZW WR^ZB_Q\CXWZC	8G]UAD WUS	
TS
T S wU]WV\UPC
WYQBKAEY]Y^]_TARQE@XEIC^CEH@W
FSBYUSSWBfHAUY]^WUPVSSWQ 	RPR	ShUSPW	V
	TQRnfhR
U	WPRPRU
SVVWRP m VV UTSSSW	PT
VQT	V  U
WQRQQZCF@AQT WE_RTR_XGZS^@XVXF:D\TCAWF{{tsYVXx{t{I{XF~q^sW{_sJ{]]W{DTGeY_Tb_[@\_\_ jXxCB[ Gbu^^{j][@i@]Gz@UkaFD}B_VycGQM]F~`EP`gFk_V`XP_{@hZ }eZY~v{{rpYk``[{[^W{ZVDhfUDhd^kbxCvf]W{r{GPx {[^W{]c HxCvf]W{r{@ht{{rxH|]pZhe{Zt}f`I~cwHhfxDk`d]H|]sGu| ]dYkfhY~v{{rpYk`^[{[^W{]wI{XF~q^sW{_ZWd{{r{XVo`F{XF~q^sW{\\Vt{{r{QN{Cv`^W{tx Wis\{]]W{\FPZgY~p{{tsYSvJVt{{r{^P`d^PfdEhwY~p{{tsYQvw St{{rxFWYVhQycgWpUF{XF~q^sW{_cCQN{{r{ PY~p{{tsYQ@{]]W{Xx~qY8G\UADTF y~qq[UXy~qyKxXG|t[qUx_rH~X_UxDUBg[\Tc
Z^B_^^Z iYzFGYDbqUc^A^S{`hwf ISPybTz}}H	{_^}~GVzfFhfKVeT]Uu[~[G|rXqU~_vYkry~qz[PfTHSjyGhi[{s yxrq[Tu	KUry~qyu}[{s yxrq[Vea[~Xq[yfbYuX[z eF~u\_ya J|ff[{euaFyfiE|uqHyvy h\bX~[G|rXqU~_vBkry~qyJ|XyAsc_UxrzHn[[~Xq[njfSHyAsc_UxrzGmja[~Xq[S}[}p y~qq[Uy\EmayxrzGU ^xXG|t[qUx\XDTa[~Xq[n_\\RfK{_~_xXG|t[qUx_rZSuW[~Xq[{T`kygbX}HyAsc_UxrzUz}[~Xq[SuHHxXG|t[qUx_~GVayxry[sc@;EB]]S^Q TPTPRRUTQpFC^D@X]^USVUPWQ 	TPT	SnUVPW	PSThU
	VSW	RP	TPU
QPWQ R
 	WVSRVUTSSSXFEACS WTC]WVQYZE_P_B[PZD;F^RACQSUU

  UPW  	SpTDR[J^S_TT_X]YUUPU\RCIBC[_\__\RCWRDB[CKF]BFNBUER@_WQVTCdKGW\^_UWSWPUUPWRQQmE^[KXmmTSPU
PSWQRQQRRW	PSUPWTWPT	SYEDBDSVTD\T QQ^ZD\Q\E[WZE	8A^UAB	TP	
	VURP   PUqWEQ\JYXX_@[YUQWU\RCIBC[_\__\RCWRDB[CKF]BFNBUER@_WQVTCdKGW\^_UWSWPUUPWRQQmBT_G[mmTSPU
PSW	P
U	UW	PPTRTVUQPUSWSPRS	W		 UTSSSXFEACS WTC]WVQYZE_P_B[PZD;D@XXQ\TQQVSQSRWSTVSTSSVrWDSYO[Z[_AY\PWSUSVUPWQ 	TPT	SnBU]B^o nU

PPWRS	RTPR	SWPU	QVWQ T
	TVUQPYDFGAPT VF\UTS\YD]SY@YUYE	=D\WBB
TPVVWWR	R	VqH[UG^VP
W_RBKGFY]_^]YWATRE@^FIE]CCK@WESBZUSUTBfNBU_^^WUSVUPWQ 	TPT	SnBU]B^onU

PPWRS	RTPR	SWPU	QVWQ T
	TVUQPYDFGAPT VF\UTS\YD]SY@YUYE	=8